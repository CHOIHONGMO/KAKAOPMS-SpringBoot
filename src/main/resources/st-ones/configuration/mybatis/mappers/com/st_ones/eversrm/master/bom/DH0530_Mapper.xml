<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.st_ones.eversrm.master.bom.DH0530_Mapper">

    <update id="doUpdateBomc" parameterType="hashMap">
        UPDATE STOCBOMC SET
         TRGT_PRC      = #{TRGT_PRC}
        ,ESTIMATE_PRC  = #{ESTIMATE_PRC}
        ,DELY_BASIC_QT = #{DELY_BASIC_QT}
        ,COST_REDU_RMK = #{COST_REDU_RMK}
        ,COST_REDU_CD  = #{COST_REDU_CD}
        ,PRODUCE_DATE  = #{PRODUCE_DATE}
        ,RMK           = #{RMK}
        ,USE_FLAG      = #{USE_FLAG}
        WHERE GATE_CD = #{ses.gateCd}
        AND BUYER_CD  = #{BUYER_CD}
		AND PLANT_CD  = #{PLANT_CD}
		AND ITEM_CD   = #{ITEM_CD}
	</update>

    <update id="doUpdateBomcProgressCd" parameterType="hashMap">
        UPDATE STOCBOMC SET
         PROGRESS_CD       = 'DP'
        WHERE GATE_CD     = #{ses.gateCd}
        AND BUYER_CD      = #{BUYER_CD}
		AND PLANT_CD      = #{PLANT_CD}
		AND ITEM_CD       = #{ITEM_CD}
	</update>


	<select id="doSearch" parameterType="hashmap" resultType="hashMap">

	SELECT MM.* 
		 , <include refid="com.sql.dbo"/>getVendorName(#{ses.gateCd}, MM.VENDOR_CD, #{ses.langCd})  AS VENDOR_NM
		 ,CASE WHEN (
		 	SELECT
		 	COUNT(*) FROM STOCCNHD A 
		 	JOIN STOCCNDT B ON A.GATE_CD = B.GATE_CD 
		 	AND A.EXEC_NUM = B.EXEC_NUM
		 	WHERE A.SIGN_STATUS IN ('P','T')
		 	AND A.GATE_CD = #{ses.gateCd}
		 	AND A.DEL_FLAG = '0'
		 	AND B.DEL_FLAG = '0'
		 	AND B.ITEM_CD    = MM.ITEM_CD
		 	AND B.PLANT_CD  = MM.PLANT_CD
		 	AND B.BUYER_REQ_CD  = MM.BUYER_CD
		 	AND B.VENDOR_CD  = MM.VENDOR_CD
		  ) = 0 THEN 'N' ELSE 'Y' END EXEC_EXIST_YN
	  FROM (
		  SELECT distinct
			     B.PLANT_CD
			   , B.BUYER_CD
			   , <include refid="com.sql.nvl"/>(B.PROGRESS_CD,'NP') PROGRESS_CD
			   , A.ITEM_CD
			   , REGEXP_REPLACE(A.ITEM_DESC, 'asfasfasf') AS ITEM_DESC
			   , A.EO_NO
			   , CASE WHEN E.VENDOR_CD IS NULL OR E.VENDOR_CD = '' THEN 
			           CASE WHEN D.VENDOR_CD IS NULL OR D.VENDOR_CD = '' THEN C.VENDOR_CD
			           ELSE D.VENDOR_CD END 
			     ELSE E.VENDOR_CD END VENDOR_CD   
			   ,<include refid="com.sql.dbo"/>GETGMTDATE(B.PRODUCE_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) PRODUCE_DATE
			   ,TO_DATE(TO_CHAR(CH.EXEC_DATE, <include refid="com.sql.dateFormat"/>), <include refid="com.sql.dateFormat"/>) - TO_DATE(#{BASE_DATE}, <include refid="com.sql.dateFormat"/>) AS PASS_DAY
			   ,(SELECT CUR FROM STOCCNVD
			      WHERE GATE_CD = #{ses.gateCd}
			        AND EXEC_NUM = CASE WHEN E.VENDOR_CD IS NULL OR E.VENDOR_CD = '' THEN 
			                          CASE WHEN D.VENDOR_CD IS NULL OR D.VENDOR_CD = '' THEN C.EXEC_NUM
			           			   	  ELSE D.EXEC_NUM END 
			     				   ELSE E.EXEC_NUM END
			    AND VENDOR_CD = CASE WHEN E.VENDOR_CD IS NULL OR E.VENDOR_CD = '' THEN 
			           CASE WHEN D.VENDOR_CD IS NULL OR D.VENDOR_CD = '' THEN C.VENDOR_CD
			           ELSE D.VENDOR_CD END 
			     ELSE E.VENDOR_CD END   
			   ) CUR
			  , B.TRGT_PRC
			  , C.UNIT_PRC
			  , C.UNIT_CD
			  , C.PLAN_STND_PRC
			  , C.BUY_STND_PRC
			  , C.TAX_CD
			  , C.CTRL_CD
			  , C.PUR_ORG_CD
			  , <include refid="com.sql.dbo"/>GETGMTDATE(C.VALID_FROM_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) APPLY_DATE
			  , D.UNIT_PRC GAUNIT_PRC
			  , D.PLAN_STND_PRC GA_PLAN_STND_PRC
			  , D.BUY_STND_PRC GA_BUY_STND_PRC
			  , D.UNIT_CD GA_UNIT_CD
			  , D.TAX_CD GA_TAX_CD
			  , D.CTRL_CD GA_CTRL_CD
			  , D.PUR_ORG_CD GA_PUR_ORG_CD
			  , <include refid="com.sql.dbo"/>GETGMTDATE(D.VALID_FROM_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) GA_APPLY_DATE
			  , B.ESTIMATE_PRC
			  , <include refid="com.sql.nvl"/>(B.ESTIMATE_PRC,0) - <include refid="com.sql.nvl"/>(D.UNIT_PRC,0) CHA_PRC
			  , B.DELY_BASIC_QT
			  ,(<include refid="com.sql.nvl"/>(B.ESTIMATE_PRC,0) - <include refid="com.sql.nvl"/>(D.UNIT_PRC,0)) * <include refid="com.sql.nvl"/>(B.DELY_BASIC_QT,0) RETRO_AMT
			  , E.UNIT_PRC JUNG_PRC
			  , E.UNIT_CD JUNG_UNIT_CD
			  , E.PLAN_STND_PRC JUNG_PLAN_STND_PRC
			  , E.BUY_STND_PRC JUNG_BUY_STND_PRC
			  , E.TAX_CD JUNG_TAX_CD
			  , E.CTRL_CD JUNG_CTRL_CD
			  , E.PUR_ORG_CD JUNG_PUR_ORG_CD
			  , B.COST_REDU_RMK
			  , B.COST_REDU_CD
			  , B.RMK
			  , C.EXEC_NUM G_EXEC_NUM
			  , D.EXEC_NUM S_EXEC_NUM
			  , E.EXEC_NUM U_EXEC_NUM
			  , A.MAT_CD AS MAT_GROUP
			  , A.ITEM_QT
			  , B.USE_FLAG
		  FROM <include refid="com.sql.dbo"/>STOCBOMM A
		  LEFT OUTER JOIN STOCBOMC B ON A.GATE_CD = B.GATE_CD
		                            AND A.ITEM_CD = B.ITEM_CD 
		  LEFT OUTER JOIN STOCCNDT C ON B.GATE_CD = C.GATE_CD
		                            AND B.ITEM_CD = C.ITEM_CD
		                            AND B.EXEC_NUM = C.EXEC_NUM                            
		  LEFT OUTER JOIN STOCCNHD CH ON B.GATE_CD = CH.GATE_CD
		                            AND B.EXEC_NUM = CH.EXEC_NUM                            
		  LEFT OUTER JOIN STOCCNDT D ON B.GATE_CD = D.GATE_CD
		                            AND B.ITEM_CD = D.ITEM_CD
		                            AND B.GA_EXEC_NUM = D.EXEC_NUM
		  LEFT OUTER JOIN STOCCNHD DH ON B.GATE_CD = DH.GATE_CD
		                            AND B.GA_EXEC_NUM = DH.EXEC_NUM
		  LEFT OUTER JOIN STOCCNDT E ON B.GATE_CD = E.GATE_CD
		                            AND B.ITEM_CD = E.ITEM_CD
		                            AND B.FN_EXEC_NUM = E.EXEC_NUM
		  LEFT OUTER JOIN STOCCNHD EH ON B.GATE_CD = EH.GATE_CD
		                            AND B.FN_EXEC_NUM = EH.EXEC_NUM
		  WHERE A.GATE_CD = #{ses.gateCd}
		    AND A.BOM_REV = (SELECT MAX(BOM_REV) FROM <include refid="com.sql.dbo"/>STOCBOMM WHERE BOM_ID = A.BOM_ID AND DEL_FLAG = '0')
			<if test="PART_PROJ_NO != '' and PART_PROJ_NO != null">
    			AND A.MAT_CD = #{PART_PROJ_NO}
			</if>
		    AND A.DEL_FLAG = '0'
		) MM
		WHERE 1 = 1			 
		<if test="PLANT_CD != '' and PLANT_CD != null">
		   AND MM.PLANT_CD <include refid="com.sql.likeL"/> #{PLANT_CD} <include refid="com.sql.likeR"/>
		</if>
		<if test="ITEM_CD != '' and ITEM_CD != null">
		   AND MM.ITEM_CD <include refid="com.sql.likeL"/> #{ITEM_CD} <include refid="com.sql.likeR"/>
		</if>
		<if test="VENDOR_CD != '' and VENDOR_CD != null">
		   AND MM.VENDOR_CD <include refid="com.sql.likeL"/> #{VENDOR_CD} <include refid="com.sql.likeR"/>
		</if>
		<if test="PROGRESS_CD != '' and PROGRESS_CD != null">
		   AND MM.PROGRESS_CD <include refid="com.sql.likeL"/> #{PROGRESS_CD} <include refid="com.sql.likeR"/>
		</if>
		<if test="PROGRESS_CD == '' or PROGRESS_CD == null">
		   AND MM.PROGRESS_CD in ('DP','CP')
		</if>
		   <!-- 자신이 담당하는 플랜트의 미결현황만 조회함 -->
		   AND (MM.PLANT_CD IS NULL OR MM.PLANT_CD IN (
	  				SELECT DISTINCT PLANT_CD FROM STOCUSPL
			 		 WHERE GATE_CD = #{ses.gateCd}
			   		   AND USER_ID = #{ses.userId}
			   		   AND DEL_FLAG = '0'
			   		   AND USE_FLAG = '1'))
		<if test="USE_FLAG != '' and USE_FLAG != null">
		   AND MM.USE_FLAG = #{USE_FLAG}
		</if>
		ORDER BY MM.ITEM_CD

	</select>
</mapper>