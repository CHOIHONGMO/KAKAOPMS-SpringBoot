<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.st_ones.evermp.buyer.eval.EV0270Mapper">

	<select id="getEsgValueInfo" resultType="hashmap" parameterType="hashmap">
		SELECT
		 TOTAL_SCORE
		,CONVERT(NUMERIC(22,1),ROUND(E_SCORE,1)) E_SCORE
		,CONVERT(NUMERIC(22,1),ROUND(S_SCORE,1)) S_SCORE
		,CONVERT(NUMERIC(22,1),ROUND(G_SCORE,1)) G_SCORE


		,CONVERT(NUMERIC(22,1),ROUND(E_AVG_SCORE,1)) E_AVG_SCORE
		,CONVERT(NUMERIC(22,1),ROUND(S_AVG_SCORE,1)) S_AVG_SCORE
		,CONVERT(NUMERIC(22,1),ROUND(G_AVG_SCORE,1)) G_AVG_SCORE

<![CDATA[
		,CASE WHEN TOTAL_SCORE >= 80 THEN 'A'
			  WHEN TOTAL_SCORE >= 65 AND TOTAL_SCORE < 80 THEN 'B+'
			  WHEN TOTAL_SCORE >= 45 AND TOTAL_SCORE < 65 THEN 'B'
			  ELSE 'C'
			  END TOTAL_SCORE_DEGREE


		,CASE WHEN TOTAL_AVG_SCORE >= 80 THEN 'A'
			  WHEN TOTAL_AVG_SCORE >= 65 AND TOTAL_SCORE < 80 THEN 'B+'
			  WHEN TOTAL_AVG_SCORE >= 45 AND TOTAL_SCORE < 65 THEN 'B'
			  ELSE 'C'
			  END TOTAL_AVG_SCORE_DEGREE



		,CASE WHEN TOTAL_SCORE >= 80 THEN '지속가능경영을 위한 환경.사회.경영시스템 체계 및 성과가 우수한 수준임'
			  WHEN TOTAL_SCORE >= 65 AND TOTAL_SCORE < 80 THEN '지속가능경영을 위한 환경.사회.경영시스템 체계 및 성과가 양호한 수준임'
			  WHEN TOTAL_SCORE >= 45 AND TOTAL_SCORE < 65 THEN '지속가능경영을 위한 환경.사회.경영시스템 체계 및 성과가 보통 수준임'
			  ELSE '지속가능경영을 위한 환경.사회.경영시스템 체계 및 성과가 미흡한 수준임'
			  END TOTAL_SCORE_TEXT





		,CASE WHEN E_SCORE >= 80 THEN '환경경영 및 환경시스템이 우수하여 지속가능성 관련 리스크가 낮음'
			  WHEN E_SCORE >= 65 AND E_SCORE < 80 THEN '환경경영 및 환경시스템이 양호하나, 대내외 환경 변화에 따라 지속가능성 관련 리스크가 유동적임'
			  WHEN E_SCORE >= 45 AND E_SCORE < 65 THEN '환경경영 및 환경시스템이 무난하나, 대내외 환경 변화에 따라 지속가능성 관련 리스크가 다소 있음'
			  ELSE '환경경영 및 환경시스템이 미흡하여 지속가능성 관련 리스크가 높음'
			  END E_SCORE_TEXT

		,CASE WHEN S_SCORE >= 80 THEN '윤리경영 및 사회적책임성과가 우수하여 지속가능성 관련 리스크가 낮음'
			  WHEN S_SCORE >= 65 AND S_SCORE < 80 THEN '윤리경영 및 사회적책임성과가 양호하나, 대내외 환경 변화에 따라 지속가능성 관련 리스크가 유동적임'
			  WHEN S_SCORE >= 45 AND S_SCORE < 65 THEN '윤리경영 및 사회적책임성과는 보통이며, 대내외 환경 변화에 따라 지속가능성 관련 리스크가 다소 있음'
			  ELSE '윤리경영 및 사회적책임성과가 미흡하여 지속가능성 관련 리스크가 높음'
			  END S_SCORE_TEXT


		,CASE WHEN G_SCORE >= 80 THEN '경영안정성 및 경영시스템이  우수하여 지속가능성 관련 리스크가 낮음'
			  WHEN G_SCORE >= 65 AND G_SCORE < 80 THEN '경영안정성 및 경영시스템이 양호하나, 대내외 환경 변화에 따라 지속가능성 관련 리스크가 유동적임'
			  WHEN G_SCORE >= 45 AND G_SCORE < 65 THEN '경영안정성 및 경영시스템이 보통이며, 대내외 환경 변화에 따라 지속가능성 관련 리스크가 다소 있음'
			  ELSE '경영안정성 및 경영시스템이 미흡하여 지속가능성 관련 리스크가 높음'
			  END G_SCORE_TEXT




		,CASE WHEN E_SCORE >= 80 THEN 'A'
			  WHEN E_SCORE >= 65 AND E_SCORE < 80 THEN 'B+'
			  WHEN E_SCORE >= 45 AND E_SCORE < 65 THEN 'B'
			  ELSE 'C'
			  END E_SCORE_DEGREE

		,CASE WHEN S_SCORE >= 80 THEN 'A'
			  WHEN S_SCORE >= 65 AND S_SCORE < 80 THEN 'B+'
			  WHEN S_SCORE >= 45 AND S_SCORE < 65 THEN 'B'
			  ELSE 'C'
			  END S_SCORE_DEGREE

		,CASE WHEN G_SCORE >= 80 THEN 'A'
			  WHEN G_SCORE >= 65 AND G_SCORE < 80 THEN 'B+'
			  WHEN G_SCORE >= 45 AND G_SCORE < 65 THEN 'B'
			  ELSE 'C'
			  END G_SCORE_DEGREE


]]>
		FROM (

			SELECT
				(
				SELECT <include refid="com.sql.nvl"/>(SUM(EV_SCORE / 3),'-1') AS EV_SCORE
				FROM <include refid="com.sql.dbo"/>STOCEVEU EVEU
				WHERE EVEU.GATE_CD = #{ses.gateCd}
				AND EVEU.EV_NUM = #{EV_NUM}
				AND VENDOR_CD = #{VENDOR_CD}
				AND VENDOR_SQ = '1'
				AND EVEU.DEL_FLAG = '0'
				) TOTAL_SCORE

				,(
				SELECT <include refid="com.sql.nvl"/>(AVG(EV_SCORE / 3),'-1') AS EV_SCORE
				FROM <include refid="com.sql.dbo"/>STOCEVEU EVEU
				WHERE EVEU.GATE_CD = #{ses.gateCd}
				AND EVEU.EV_NUM = #{EV_NUM}
				AND EVEU.DEL_FLAG = '0'
				) TOTAL_AVG_SCORE




			   ,(
					SELECT <include refid="com.sql.nvl"/>(AVG(EV_ID_SCORE),0) FROM (
						  SELECT
							    EE.EV_USER_ID
							   ,<include refid="com.sql.nvl"/>(SUM(EE.EV_ID_SCORE),0) AS EV_ID_SCORE
						  FROM	STOCEVTM TM
							INNER JOIN	STOCEVTD TD
							ON	TM.EV_TPL_NUM	= TD.EV_TPL_NUM
						   AND	TM.GATE_CD		= TD.GATE_CD
							INNER JOIN	STOCEVIM IM
							ON	TD.EV_ITEM_NUM 	= IM.EV_ITEM_NUM
						   AND	TD.GATE_CD 		= TM.GATE_CD
							JOIN	STOCEVID ID
							ON	IM.EV_ITEM_NUM 	= ID.EV_ITEM_NUM
						   AND	IM.GATE_CD 		= TD.GATE_CD
							JOIN	STOCEVEM EM
							ON	EM.EXEC_EV_TPL_NUM = TM.EV_TPL_NUM
						   AND	EM.GATE_CD 		= TM.GATE_CD
							JOIN STOCEVEE EE
							ON	ID.EV_ITEM_NUM 	= EE.EV_ITEM_NUM
						   AND	ID.EV_ID_SQ 	= EE.EV_ID_SQ
						   AND	TM.EV_TPL_NUM 	= EE.EV_TPL_NUM
						   AND	ID.GATE_CD 		= EE.GATE_CD
						   AND	EM.EV_NUM 		= EE.EV_NUM
						   AND	EE.VENDOR_CD	= #{VENDOR_CD}
						   AND	EE.VENDOR_SQ	= '1'
						   AND EE.CHK_YN = '1'
						 WHERE	EM.GATE_CD 		= #{ses.gateCd}
						   AND	EM.EV_NUM 		= #{EV_NUM}
						   AND	EM.DEL_FLAG 	= '0'
						   AND	TD.DEL_FLAG 	= '0'
						   AND	ID.DEL_FLAG 	= '0'
						   AND	IM.DEL_FLAG 	= '0'
						   AND IM.EV_ITEM_METHOD_CD = 'QUA'
						   AND IM.EV_ITEM_TYPE_CD = 'E'
						   GROUP BY EE.EV_USER_ID
					) K
			) E_SCORE

			   ,(
					SELECT <include refid="com.sql.nvl"/>(AVG(EV_ID_SCORE),0) FROM (
						  SELECT
							    EE.EV_USER_ID
							   ,<include refid="com.sql.nvl"/>(SUM(EE.EV_ID_SCORE),0) AS EV_ID_SCORE
						  FROM	STOCEVTM TM
							INNER JOIN	STOCEVTD TD
							ON	TM.EV_TPL_NUM	= TD.EV_TPL_NUM
						   AND	TM.GATE_CD		= TD.GATE_CD
							INNER JOIN	STOCEVIM IM
							ON	TD.EV_ITEM_NUM 	= IM.EV_ITEM_NUM
						   AND	TD.GATE_CD 		= TM.GATE_CD
							JOIN	STOCEVID ID
							ON	IM.EV_ITEM_NUM 	= ID.EV_ITEM_NUM
						   AND	IM.GATE_CD 		= TD.GATE_CD
							JOIN	STOCEVEM EM
							ON	EM.EXEC_EV_TPL_NUM = TM.EV_TPL_NUM
						   AND	EM.GATE_CD 		= TM.GATE_CD
							JOIN STOCEVEE EE
							ON	ID.EV_ITEM_NUM 	= EE.EV_ITEM_NUM
						   AND	ID.EV_ID_SQ 	= EE.EV_ID_SQ
						   AND	TM.EV_TPL_NUM 	= EE.EV_TPL_NUM
						   AND	ID.GATE_CD 		= EE.GATE_CD
						   AND	EM.EV_NUM 		= EE.EV_NUM
						   AND EE.CHK_YN = '1'
						 WHERE	EM.GATE_CD 		= #{ses.gateCd}
						   AND	EM.EV_NUM 		= #{EV_NUM}
						   AND	EM.DEL_FLAG 	= '0'
						   AND	TD.DEL_FLAG 	= '0'
						   AND	ID.DEL_FLAG 	= '0'
						   AND	IM.DEL_FLAG 	= '0'
						   AND IM.EV_ITEM_METHOD_CD = 'QUA'
						   AND IM.EV_ITEM_TYPE_CD = 'E'
						   GROUP BY EE.EV_USER_ID
					) K
			) E_AVG_SCORE












			   ,(
					SELECT <include refid="com.sql.nvl"/>(AVG(EV_ID_SCORE),0) FROM (
						  SELECT
							    EE.EV_USER_ID
							   ,<include refid="com.sql.nvl"/>(SUM(EE.EV_ID_SCORE),0) AS EV_ID_SCORE
						  FROM	STOCEVTM TM
							INNER JOIN	STOCEVTD TD
							ON	TM.EV_TPL_NUM	= TD.EV_TPL_NUM
						   AND	TM.GATE_CD		= TD.GATE_CD
							INNER JOIN	STOCEVIM IM
							ON	TD.EV_ITEM_NUM 	= IM.EV_ITEM_NUM
						   AND	TD.GATE_CD 		= TM.GATE_CD
							JOIN	STOCEVID ID
							ON	IM.EV_ITEM_NUM 	= ID.EV_ITEM_NUM
						   AND	IM.GATE_CD 		= TD.GATE_CD
							JOIN	STOCEVEM EM
							ON	EM.EXEC_EV_TPL_NUM = TM.EV_TPL_NUM
						   AND	EM.GATE_CD 		= TM.GATE_CD
							JOIN STOCEVEE EE
							ON	ID.EV_ITEM_NUM 	= EE.EV_ITEM_NUM
						   AND	ID.EV_ID_SQ 	= EE.EV_ID_SQ
						   AND	TM.EV_TPL_NUM 	= EE.EV_TPL_NUM
						   AND	ID.GATE_CD 		= EE.GATE_CD
						   AND	EM.EV_NUM 		= EE.EV_NUM
						   AND	EE.VENDOR_CD	= #{VENDOR_CD}
						   AND	EE.VENDOR_SQ	= '1'
						   AND EE.CHK_YN = '1'
						 WHERE	EM.GATE_CD 		= #{ses.gateCd}
						   AND	EM.EV_NUM 		= #{EV_NUM}
						   AND	EM.DEL_FLAG 	= '0'
						   AND	TD.DEL_FLAG 	= '0'
						   AND	ID.DEL_FLAG 	= '0'
						   AND	IM.DEL_FLAG 	= '0'
						   AND IM.EV_ITEM_METHOD_CD = 'QUA'
						   AND IM.EV_ITEM_TYPE_CD = 'S'
						   GROUP BY EE.EV_USER_ID
					) K
			) S_SCORE




			   ,(
					SELECT <include refid="com.sql.nvl"/>(AVG(EV_ID_SCORE),0) FROM (
						  SELECT
							    EE.EV_USER_ID
							   ,<include refid="com.sql.nvl"/>(SUM(EE.EV_ID_SCORE),0) AS EV_ID_SCORE
						  FROM	STOCEVTM TM
							INNER JOIN	STOCEVTD TD
							ON	TM.EV_TPL_NUM	= TD.EV_TPL_NUM
						   AND	TM.GATE_CD		= TD.GATE_CD
							INNER JOIN	STOCEVIM IM
							ON	TD.EV_ITEM_NUM 	= IM.EV_ITEM_NUM
						   AND	TD.GATE_CD 		= TM.GATE_CD
							JOIN	STOCEVID ID
							ON	IM.EV_ITEM_NUM 	= ID.EV_ITEM_NUM
						   AND	IM.GATE_CD 		= TD.GATE_CD
							JOIN	STOCEVEM EM
							ON	EM.EXEC_EV_TPL_NUM = TM.EV_TPL_NUM
						   AND	EM.GATE_CD 		= TM.GATE_CD
							JOIN STOCEVEE EE
							ON	ID.EV_ITEM_NUM 	= EE.EV_ITEM_NUM
						   AND	ID.EV_ID_SQ 	= EE.EV_ID_SQ
						   AND	TM.EV_TPL_NUM 	= EE.EV_TPL_NUM
						   AND	ID.GATE_CD 		= EE.GATE_CD
						   AND	EM.EV_NUM 		= EE.EV_NUM
						   AND EE.CHK_YN = '1'
						 WHERE	EM.GATE_CD 		= #{ses.gateCd}
						   AND	EM.EV_NUM 		= #{EV_NUM}
						   AND	EM.DEL_FLAG 	= '0'
						   AND	TD.DEL_FLAG 	= '0'
						   AND	ID.DEL_FLAG 	= '0'
						   AND	IM.DEL_FLAG 	= '0'
						   AND IM.EV_ITEM_METHOD_CD = 'QUA'
						   AND IM.EV_ITEM_TYPE_CD = 'S'
						   GROUP BY EE.EV_USER_ID
					) K
			) S_AVG_SCORE










			   ,(
					SELECT <include refid="com.sql.nvl"/>(AVG(EV_ID_SCORE),0) FROM (
						  SELECT
							    EE.EV_USER_ID
							   ,<include refid="com.sql.nvl"/>(SUM(EE.EV_ID_SCORE),0) AS EV_ID_SCORE
						  FROM	STOCEVTM TM
							INNER JOIN	STOCEVTD TD
							ON	TM.EV_TPL_NUM	= TD.EV_TPL_NUM
						   AND	TM.GATE_CD		= TD.GATE_CD
							INNER JOIN	STOCEVIM IM
							ON	TD.EV_ITEM_NUM 	= IM.EV_ITEM_NUM
						   AND	TD.GATE_CD 		= TM.GATE_CD
							JOIN	STOCEVID ID
							ON	IM.EV_ITEM_NUM 	= ID.EV_ITEM_NUM
						   AND	IM.GATE_CD 		= TD.GATE_CD
							JOIN	STOCEVEM EM
							ON	EM.EXEC_EV_TPL_NUM = TM.EV_TPL_NUM
						   AND	EM.GATE_CD 		= TM.GATE_CD
							JOIN STOCEVEE EE
							ON	ID.EV_ITEM_NUM 	= EE.EV_ITEM_NUM
						   AND	ID.EV_ID_SQ 	= EE.EV_ID_SQ
						   AND	TM.EV_TPL_NUM 	= EE.EV_TPL_NUM
						   AND	ID.GATE_CD 		= EE.GATE_CD
						   AND	EM.EV_NUM 		= EE.EV_NUM
						   AND	EE.VENDOR_CD	= #{VENDOR_CD}
						   AND	EE.VENDOR_SQ	= '1'
						   AND EE.CHK_YN = '1'
						 WHERE	EM.GATE_CD 		= #{ses.gateCd}
						   AND	EM.EV_NUM 		= #{EV_NUM}
						   AND	EM.DEL_FLAG 	= '0'
						   AND	TD.DEL_FLAG 	= '0'
						   AND	ID.DEL_FLAG 	= '0'
						   AND	IM.DEL_FLAG 	= '0'
						   AND IM.EV_ITEM_METHOD_CD = 'QUA'
						   AND IM.EV_ITEM_TYPE_CD = 'G'
						   GROUP BY EE.EV_USER_ID
					) K
			) G_SCORE




			   ,(
					SELECT <include refid="com.sql.nvl"/>(AVG(EV_ID_SCORE),0) FROM (
						  SELECT
							    EE.EV_USER_ID
							   ,<include refid="com.sql.nvl"/>(SUM(EE.EV_ID_SCORE),0) AS EV_ID_SCORE
						  FROM	STOCEVTM TM
							INNER JOIN	STOCEVTD TD
							ON	TM.EV_TPL_NUM	= TD.EV_TPL_NUM
						   AND	TM.GATE_CD		= TD.GATE_CD
							INNER JOIN	STOCEVIM IM
							ON	TD.EV_ITEM_NUM 	= IM.EV_ITEM_NUM
						   AND	TD.GATE_CD 		= TM.GATE_CD
							JOIN	STOCEVID ID
							ON	IM.EV_ITEM_NUM 	= ID.EV_ITEM_NUM
						   AND	IM.GATE_CD 		= TD.GATE_CD
							JOIN	STOCEVEM EM
							ON	EM.EXEC_EV_TPL_NUM = TM.EV_TPL_NUM
						   AND	EM.GATE_CD 		= TM.GATE_CD
							JOIN STOCEVEE EE
							ON	ID.EV_ITEM_NUM 	= EE.EV_ITEM_NUM
						   AND	ID.EV_ID_SQ 	= EE.EV_ID_SQ
						   AND	TM.EV_TPL_NUM 	= EE.EV_TPL_NUM
						   AND	ID.GATE_CD 		= EE.GATE_CD
						   AND	EM.EV_NUM 		= EE.EV_NUM
						   AND EE.CHK_YN = '1'
						 WHERE	EM.GATE_CD 		= #{ses.gateCd}
						   AND	EM.EV_NUM 		= #{EV_NUM}
						   AND	EM.DEL_FLAG 	= '0'
						   AND	TD.DEL_FLAG 	= '0'
						   AND	ID.DEL_FLAG 	= '0'
						   AND	IM.DEL_FLAG 	= '0'
						   AND IM.EV_ITEM_METHOD_CD = 'QUA'
						   AND IM.EV_ITEM_TYPE_CD = 'G'
						   GROUP BY EE.EV_USER_ID
					) K
			) G_AVG_SCORE





		) T
	</select>





	<select id="doSearchEsgSummaryList" resultType="hashmap" parameterType="hashmap">
		SELECT
		 GUBUN1
		,GUBUN2
		,CASE WHEN ESG_GROUP = ' ' OR ESG_GROUP = '  ' THEN ESG_GROUP ELSE <include refid="com.sql.dbo"/>getCodeName('100','P095',ESG_GROUP,'KO') END ESG_GROUP
		,CONTENTS
		,CASE WHEN GUBUN1 IS NULL THEN CONVERT(NVARCHAR(100),CONVERT(NUMERIC(22,1),ROUND(SCORE/3,1)))

         	  WHEN ESG_GROUP = ' ' THEN CONVERT(NVARCHAR(100),CONVERT(NUMERIC(22,1),ROUND(SCORE,1)))

		 ELSE
		 CONVERT(NVARCHAR(100), CONVERT(NUMERIC(22,1),SCORE)) <include refid="com.sql.stringMerge"/> ' / ' <include refid="com.sql.stringMerge"/> <include refid="com.sql.dbo"/>getEsgDegreeSum(#{EV_NUM},GUBUN1,ESG_GROUP,'TSCORE',' ', 1)
		 END SCORE

		,<include refid="com.sql.dbo"/>getEsgDegreeSum(#{EV_NUM},GUBUN1,ESG_GROUP,'DEGREEOX','C', SCORE)	GOOD
		,<include refid="com.sql.dbo"/>getEsgDegreeSum(#{EV_NUM},GUBUN1,ESG_GROUP,'DEGREEOX','B', SCORE)	MIDDLE
		,<include refid="com.sql.dbo"/>getEsgDegreeSum(#{EV_NUM},GUBUN1,ESG_GROUP,'DEGREEOX','A', SCORE)	BAD


		,SORT1
		,SORT2
		FROM (
		SELECT
			 GUBUN1

			,(
					CASE WHEN GROUPING(GUBUN1) = '0'
					AND GROUPING(GUBUN2) = '1'
					AND GROUPING(ESG_GROUP) = '1'
					AND GROUPING(CONTENTS) = '1'
					AND GROUPING(SORT1) = '1'
					AND GROUPING(SORT2) = '1' THEN '  ' ELSE
							CASE WHEN GROUPING(GUBUN1) = '1'
							AND GROUPING(GUBUN2) = '1'
							AND GROUPING(ESG_GROUP) = '1'
							AND GROUPING(CONTENTS) = '1'
							AND GROUPING(SORT1) = '1'
							AND GROUPING(SORT2) = '1' THEN ' ' ELSE GUBUN2 END
					END
			) GUBUN2

			,(
					CASE WHEN GROUPING(GUBUN1) = '0'
					AND GROUPING(GUBUN2) = '1'
					AND GROUPING(ESG_GROUP) = '1'
					AND GROUPING(CONTENTS) = '1'
					AND GROUPING(SORT1) = '1'
					AND GROUPING(SORT2) = '1' THEN '  ' ELSE
							CASE WHEN GROUPING(GUBUN1) = '1'
							AND GROUPING(GUBUN2) = '1'
							AND GROUPING(ESG_GROUP) = '1'
							AND GROUPING(CONTENTS) = '1'
							AND GROUPING(SORT1) = '1'
							AND GROUPING(SORT2) = '1' THEN ' ' ELSE ESG_GROUP END
					END
			) ESG_GROUP



			,(
					CASE WHEN GROUPING(GUBUN1) = '0'
					AND GROUPING(GUBUN2) = '1'
					AND GROUPING(ESG_GROUP) = '1'
					AND GROUPING(CONTENTS) = '1'
					AND GROUPING(SORT1) = '1'
					AND GROUPING(SORT2) = '1' THEN CASE WHEN GUBUN1 = 'E' THEN '     환경'
					                                    WHEN GUBUN1 = 'S' THEN '     사회'
					                                    ELSE '     지배구조'
					                               END

							ELSE
							CASE WHEN GROUPING(GUBUN1) = '1'
							AND GROUPING(GUBUN2) = '1'
							AND GROUPING(ESG_GROUP) = '1'
							AND GROUPING(CONTENTS) = '1'
							AND GROUPING(SORT1) = '1'
							AND GROUPING(SORT2) = '1' THEN '     ESG 종합' ELSE CONTENTS END
					END
			) CONTENTS









			,ROUND(SUM(SCORE),1) SCORE

			,SORT1
			,SORT2

			FROM (
					SELECT
					 GUBUN1
					,GUBUN2
					,ESG_GROUP
					,CONTENTS
					,AVG(EV_ID_SCORE) SCORE
					,SORT1
					,SORT2
					FROM (
						 SELECT
								EE.EV_USER_ID
							   ,IM.EV_ITEM_TYPE_CD GUBUN1
							   ,(SELECT TEXT4 FROM STOCCODD WHERE CODE_TYPE='P095' AND CODE=IM.EVIM_TYPE) GUBUN2
--							   ,<include refid="com.sql.dbo"/>getCodeName('100','P095',IM.EVIM_TYPE,'KO') ESG_GROUP
							   ,IM.EVIM_TYPE ESG_GROUP
							   ,(SELECT TEXT3 FROM STOCCODD WHERE CODE_TYPE='P095' AND CODE=IM.EVIM_TYPE) CONTENTS
							   ,<include refid="com.sql.nvl"/>(SUM(EE.EV_ID_SCORE),0) AS EV_ID_SCORE

							 ,(SELECT SORT_SQ FROM STOCCODD
							  WHERE GATE_CD='100'
							  AND CODE_TYPE ='P094'
							  AND CODE = IM.EV_ITEM_TYPE_CD
							  ) SORT1
							  ,EVIM_TYPE SORT2

						  FROM	STOCEVTM TM
							INNER JOIN	STOCEVTD TD
							ON	TM.EV_TPL_NUM	= TD.EV_TPL_NUM
						   AND	TM.GATE_CD		= TD.GATE_CD
							INNER JOIN	<include refid="com.sql.dbo"/>STOCEVIM IM
							ON	TD.EV_ITEM_NUM 	= IM.EV_ITEM_NUM
						   AND	TD.GATE_CD 		= TM.GATE_CD
							JOIN	STOCEVID ID
							ON	IM.EV_ITEM_NUM 	= ID.EV_ITEM_NUM
						   AND	IM.GATE_CD 		= TD.GATE_CD
							JOIN	STOCEVEM EM
							ON	EM.EXEC_EV_TPL_NUM = TM.EV_TPL_NUM
						   AND	EM.GATE_CD 		= TM.GATE_CD
							JOIN STOCEVEE EE
							ON	ID.EV_ITEM_NUM 	= EE.EV_ITEM_NUM
						   AND	ID.EV_ID_SQ 	= EE.EV_ID_SQ
						   AND	TM.EV_TPL_NUM 	= EE.EV_TPL_NUM
						   AND	ID.GATE_CD 		= EE.GATE_CD
						   AND	EM.EV_NUM 		= EE.EV_NUM
						   AND	EE.VENDOR_CD	= #{VENDOR_CD}
						   AND	EE.VENDOR_SQ	= '1'
						   AND EE.CHK_YN = '1'
						 WHERE	EM.GATE_CD 		= '100'
						   AND	EM.EV_NUM 		= #{EV_NUM}
						   AND	EM.DEL_FLAG 	= '0'
						   AND	TD.DEL_FLAG 	= '0'
						   AND	ID.DEL_FLAG 	= '0'
						   AND	IM.DEL_FLAG 	= '0'
						   AND IM.EV_ITEM_METHOD_CD = 'QUA'
						   GROUP BY EE.EV_USER_ID
						   ,IM.EV_ITEM_TYPE_CD
						   ,IM.EVIM_TYPE
					) TEMP
					GROUP BY
					 GUBUN1
					,GUBUN2
					,ESG_GROUP
					,CONTENTS
					,SORT1
					,SORT2
			) TEMP2
				GROUP BY
				ROLLUP(GUBUN1
				,GUBUN2
				,ESG_GROUP
				,CONTENTS
				,SORT1
				,SORT2)
				HAVING
				GROUPING(SORT1) = '0'
				AND GROUPING(SORT2) = '0'
				OR (
						GROUPING(GUBUN1) = '0'
						AND GROUPING(GUBUN2) = '1'
						AND GROUPING(ESG_GROUP) = '1'
						AND GROUPING(CONTENTS) = '1'
						AND GROUPING(SORT1) = '1'
						AND GROUPING(SORT2) = '1'
				)
				OR (
						GROUPING(GUBUN1) = '1'
						AND GROUPING(GUBUN2) = '1'
						AND GROUPING(ESG_GROUP) = '1'
						AND GROUPING(CONTENTS) = '1'
						AND GROUPING(SORT1) = '1'
						AND GROUPING(SORT2) = '1'
				)
		) TEMP3


		ORDER BY CASE WHEN GUBUN1='G' THEN 'Y'
		              WHEN GUBUN1 IS NULL THEN 'Z'
				  ELSE GUBUN1 END ASC
				  ,
				  CASE WHEN SORT1 IS NULL THEN '9'
				  ELSE SORT1 END
				  ,SORT2







	</select>












	<select id="doSearchEsgSummaryList202203016" resultType="hashmap" parameterType="hashmap">
	SELECT
		 GUBUN1

		,(
				CASE WHEN GROUPING(GUBUN1) = '0'
				AND GROUPING(GUBUN2) = '1'
				AND GROUPING(ESG_GROUP) = '1'
				AND GROUPING(CONTENTS) = '1'
				AND GROUPING(SORT1) = '1'
				AND GROUPING(SORT2) = '1' THEN '소계' ELSE
						CASE WHEN GROUPING(GUBUN1) = '1'
						AND GROUPING(GUBUN2) = '1'
						AND GROUPING(ESG_GROUP) = '1'
						AND GROUPING(CONTENTS) = '1'
						AND GROUPING(SORT1) = '1'
						AND GROUPING(SORT2) = '1' THEN 'ESG 종합' ELSE GUBUN2 END
				END
		) GUBUN2

		,(
				CASE WHEN GROUPING(GUBUN1) = '0'
				AND GROUPING(GUBUN2) = '1'
				AND GROUPING(ESG_GROUP) = '1'
				AND GROUPING(CONTENTS) = '1'
				AND GROUPING(SORT1) = '1'
				AND GROUPING(SORT2) = '1' THEN '  ' ELSE
						CASE WHEN GROUPING(GUBUN1) = '1'
						AND GROUPING(GUBUN2) = '1'
						AND GROUPING(ESG_GROUP) = '1'
						AND GROUPING(CONTENTS) = '1'
						AND GROUPING(SORT1) = '1'
						AND GROUPING(SORT2) = '1' THEN ' ' ELSE ESG_GROUP END
				END
		) ESG_GROUP
		,CONTENTS
		,ROUND(SUM(SCORE),1) SCORE
		,SORT1
		,SORT2

		FROM (
				SELECT
				 GUBUN1
				,GUBUN2
				,ESG_GROUP
				,CONTENTS
				,AVG(EV_ID_SCORE) SCORE
				,SORT1
				,SORT2
				FROM (
					 SELECT
							EE.EV_USER_ID
						   ,IM.EV_ITEM_TYPE_CD GUBUN1
						   ,(SELECT TEXT4 FROM STOCCODD WHERE CODE_TYPE='P095' AND CODE=IM.EVIM_TYPE) GUBUN2
						   ,<include refid="com.sql.dbo"/>getCodeName('100','P095',IM.EVIM_TYPE,'KO') ESG_GROUP
						   ,(SELECT TEXT3 FROM STOCCODD WHERE CODE_TYPE='P095' AND CODE=IM.EVIM_TYPE) CONTENTS
						   ,<include refid="com.sql.nvl"/>(SUM(EE.EV_ID_SCORE),0) AS EV_ID_SCORE

						 ,(SELECT SORT_SQ FROM STOCCODD
						  WHERE GATE_CD='100'
						  AND CODE_TYPE ='P094'
						  AND CODE = IM.EV_ITEM_TYPE_CD
						  ) SORT1
						  ,EVIM_TYPE SORT2

					  FROM	STOCEVTM TM
						INNER JOIN	STOCEVTD TD
						ON	TM.EV_TPL_NUM	= TD.EV_TPL_NUM
					   AND	TM.GATE_CD		= TD.GATE_CD
						INNER JOIN	<include refid="com.sql.dbo"/>STOCEVIM IM
						ON	TD.EV_ITEM_NUM 	= IM.EV_ITEM_NUM
					   AND	TD.GATE_CD 		= TM.GATE_CD
						JOIN	STOCEVID ID
						ON	IM.EV_ITEM_NUM 	= ID.EV_ITEM_NUM
					   AND	IM.GATE_CD 		= TD.GATE_CD
						JOIN	STOCEVEM EM
						ON	EM.EXEC_EV_TPL_NUM = TM.EV_TPL_NUM
					   AND	EM.GATE_CD 		= TM.GATE_CD
						JOIN STOCEVEE EE
						ON	ID.EV_ITEM_NUM 	= EE.EV_ITEM_NUM
					   AND	ID.EV_ID_SQ 	= EE.EV_ID_SQ
					   AND	TM.EV_TPL_NUM 	= EE.EV_TPL_NUM
					   AND	ID.GATE_CD 		= EE.GATE_CD
					   AND	EM.EV_NUM 		= EE.EV_NUM
					   AND	EE.VENDOR_CD	= #{VENDOR_CD}
					   AND	EE.VENDOR_SQ	= '1'
					   AND EE.CHK_YN = '1'
					 WHERE	EM.GATE_CD 		= '100'
					   AND	EM.EV_NUM 		= #{EV_NUM}
					   AND	EM.DEL_FLAG 	= '0'
					   AND	TD.DEL_FLAG 	= '0'
					   AND	ID.DEL_FLAG 	= '0'
					   AND	IM.DEL_FLAG 	= '0'
					   AND IM.EV_ITEM_METHOD_CD = 'QUA'
					   GROUP BY EE.EV_USER_ID
					   ,IM.EV_ITEM_TYPE_CD
					   ,IM.EVIM_TYPE
				) TEMP
				GROUP BY
				 GUBUN1
				,GUBUN2
				,ESG_GROUP
				,CONTENTS
				,SORT1
				,SORT2
		) TEMP2
			GROUP BY
			ROLLUP(GUBUN1
			,GUBUN2
			,ESG_GROUP
			,CONTENTS
			,SORT1
			,SORT2)
			HAVING
			GROUPING(SORT1) = '0'
			AND GROUPING(SORT2) = '0'
			OR (
					GROUPING(GUBUN1) = '0'
					AND GROUPING(GUBUN2) = '1'
					AND GROUPING(ESG_GROUP) = '1'
					AND GROUPING(CONTENTS) = '1'
					AND GROUPING(SORT1) = '1'
					AND GROUPING(SORT2) = '1'
			)
			OR (
					GROUPING(GUBUN1) = '1'
					AND GROUPING(GUBUN2) = '1'
					AND GROUPING(ESG_GROUP) = '1'
					AND GROUPING(CONTENTS) = '1'
					AND GROUPING(SORT1) = '1'
					AND GROUPING(SORT2) = '1'
			)
		ORDER BY CASE WHEN GUBUN1='G' THEN 'Y'
		              WHEN GUBUN1 IS NULL THEN 'Z'
				  ELSE GUBUN1 END ASC
				  ,
				  CASE WHEN SORT1 IS NULL THEN '9'
				  ELSE SORT1 END
				  ,SORT2



	</select>























	<select id="doSearch" resultType="hashmap" parameterType="hashmap">

		SELECT	 EM.EV_NUM
				,EM.EV_NM
				,<include refid="com.sql.dbo"/>GETCODENAME( #{ses.gateCd},'M197',EM.PURCHASE_TYPE,#{ses.langCd}) AS PURCHASE_TYPE
				,<include refid="com.sql.dbo"/>GETCODENAME( #{ses.gateCd},'M212',EM.EV_TYPE,#{ses.langCd}) AS EV_TYPE
				,EM.EV_TYPE AS EV_TYPE_CD
				,<include refid="com.sql.dbo"/>GETUSERNAME(#{ses.gateCd}, EM.EV_CTRL_USER_ID, #{ses.langCd}) AS EV_CTRL_USER_NM
				,EV_CTRL_USER_ID
				,<include refid="com.sql.dbo"/>GETCODENAME( #{ses.gateCd},'M122',EM.PROGRESS_CD,#{ses.langCd}) AS PROGRESS_NM
				,EM.PROGRESS_CD
				,TM.EV_TPL_SUBJECT
				,TM.EV_TPL_NUM
				,ES.VENDOR_CD
		     , ES.VENDOR_SQ
				,<include refid="com.sql.dbo"/>getVendorName(#{ses.gateCd}, ES.VENDOR_CD, #{ses.langCd})  AS VENDOR_NM
			<if test='_databaseId=="oracle"'>
				,(TO_CHAR((SELECT COUNT(*) FROM STOCEVEU WHERE GATE_CD = EM.GATE_CD AND EV_NUM = EM.EV_NUM AND VENDOR_CD = ES.VENDOR_CD AND DEL_FLAG = '0' AND PROGRESS_CD = '200')) || '/' ||
				  TO_CHAR((CASE WHEN
	 							   ((SELECT COUNT(*) FROM STOCEVTD TD INNER JOIN STOCEVIM IM ON TD.EV_ITEM_NUM = IM.EV_ITEM_NUM WHERE TD.EV_TPL_NUM = EM.EXEC_EV_TPL_NUM AND TD.GATE_CD = EM.GATE_CD AND TD.DEL_FLAG = '0' AND IM.EV_ITEM_METHOD_CD = 'QUA') = 0)
	 						    THEN 0
	 						    ELSE (SELECT COUNT(*) FROM STOCEVEU WHERE GATE_CD = EM.GATE_CD AND EV_NUM = EM.EV_NUM AND VENDOR_CD = ES.VENDOR_CD AND DEL_FLAG = '0')
	 						    END)
				  		 )
				 ) AS EV_USER_CNT
			</if>
			<if test='_databaseId=="mssql"'>
				,(CONVERT(VARCHAR(3),(SELECT COUNT(*)
										FROM STOCEVEU EU
									   WHERE EU.GATE_CD     = EM.GATE_CD
									     AND EU.EV_NUM      = EM.EV_NUM
									     AND EU.VENDOR_CD   = ES.VENDOR_CD
									     AND EU.VENDOR_SQ   = ES.VENDOR_SQ
									     AND EU.DEL_FLAG    = '0'
									     AND EU.PROGRESS_CD = '200')) <include refid="com.sql.stringMerge"/>'/'<include refid="com.sql.stringMerge"/>
				  CONVERT(VARCHAR(3),(CASE WHEN
				 							   ((SELECT COUNT(*)
				 							   	   FROM STOCEVTD TD
				 							   	   INNER JOIN STOCEVIM IM
				 							   	     ON TD.EV_ITEM_NUM = IM.EV_ITEM_NUM
				 							   	  WHERE TD.EV_TPL_NUM = EM.EXEC_EV_TPL_NUM
				 							   	    AND TD.GATE_CD = EM.GATE_CD
				 							   	    AND TD.DEL_FLAG = '0'
				 							   	    AND IM.EV_ITEM_METHOD_CD = 'QUA') = 0)
				 						   THEN 0
				 						   ELSE (SELECT COUNT(*)
				 						   		   FROM STOCEVEU EU
				 						   		  WHERE EU.GATE_CD   = EM.GATE_CD
				 						   		    AND EU.EV_NUM    = EM.EV_NUM
				 						   		    AND EU.VENDOR_CD = ES.VENDOR_CD
				 						   		    AND EU.VENDOR_SQ = ES.VENDOR_SQ
				 						   		    AND EU.DEL_FLAG  = '0')
				 						   END)
				  		 )
				 ) AS EV_USER_CNT
			</if>
				,ES.EV_SCORE
				,'' AS DETAIL
				,ES.EVAL_GRADE_CLS
				,<include refid="com.sql.dbo"/>GETGMTDATE(EM.REG_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS REG_DATE
				,<include refid="com.sql.dbo"/>GETGMTDATE(EM.START_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS START_DATE
				,<include refid="com.sql.dbo"/>GETGMTDATE(EM.CLOSE_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS CLOSE_DATE
				,ES.FIRST_EV_SCORE
				,ES.FIRST_EVAL_GRADE_CLS
				,ES.AMEND_REASON



				,CASE WHEN EM.EV_TYPE = 'ESG' AND (SELECT COUNT(*) FROM STOCEVEU WHERE GATE_CD = EM.GATE_CD AND EV_NUM = EM.EV_NUM AND VENDOR_CD = ES.VENDOR_CD AND DEL_FLAG = '0' AND PROGRESS_CD = '200') != 0
				 THEN


				(
					SELECT

					  CASE WHEN <include refid="com.sql.nvl"/>(SUM(EV_SCORE / 3),'-1') <![CDATA[>=]]> 80 THEN 'A'
					  WHEN <include refid="com.sql.nvl"/>(SUM(EV_SCORE / 3),'-1') <![CDATA[>=]]> 65 AND <include refid="com.sql.nvl"/>(SUM(EV_SCORE / 3),'-1') <![CDATA[<]]> 80 THEN 'B+'
					  WHEN <include refid="com.sql.nvl"/>(SUM(EV_SCORE / 3),'-1') <![CDATA[>=]]> 45 AND <include refid="com.sql.nvl"/>(SUM(EV_SCORE / 3),'-1') <![CDATA[<]]> 65 THEN 'B'
					  ELSE 'C'
					  END

					AS EV_SCORE
					FROM <include refid="com.sql.dbo"/>STOCEVEU EVEU
					WHERE EVEU.GATE_CD = #{ses.gateCd}
					AND EVEU.EV_NUM = EM.EV_NUM
					AND VENDOR_CD = ES.VENDOR_CD
					AND VENDOR_SQ = '1'
					AND EVEU.DEL_FLAG = '0'
				)

				 ELSE '' END ESG_POP


				,CASE WHEN EV_TYPE = 'ESG' THEN
					( SELECT <include refid="com.sql.nvl"/>(MAX(EVEU.ESG_CHK_TYPE),'P') ESG_CHK_TYPE
						         FROM STOCEVEU EVEU
						        WHERE GATE_CD  = #{ses.gateCd}
						          AND DEL_FLAG = '0'
				  	 			  AND EVEU.GATE_CD    	= EM.GATE_CD
								  AND EVEU.EV_NUM      	= EM.EV_NUM
								  AND EVEU.VENDOR_CD    = ES.VENDOR_CD
					)
				 ELSE '' END ESG_CHK_TYPE


		FROM	STOCEVES ES
	INNER JOIN	STOCEVEM EM ON EM.GATE_CD = ES.GATE_CD AND EM.EV_NUM = ES.EV_NUM
	INNER JOIN	STOCEVTM TM ON TM.GATE_CD = EM.GATE_CD AND TM.EV_TPL_NUM = EM.EXEC_EV_TPL_NUM
		WHERE	ES.GATE_CD = #{ses.gateCd}
		AND		ES.DEL_FLAG = '0'
		<if test="_databaseId == 'mssql'">
	       AND EM.REG_DATE BETWEEN #{REG_DATE_FROM} AND #{REG_DATE_TO}
		</if>
		<if test="_databaseId == 'oracle'">
	       AND EM.REG_DATE BETWEEN TO_DATE(#{REG_DATE_FROM} , 'YYYYMMDD HH24:MI:SS') AND TO_DATE(#{REG_DATE_TO}, 'YYYYMMDD HH24:MI:SS') 
		</if>
		AND		ES.PROGRESS_CD IS NOT NULL


		  <if test="ESG_CHK_TYPE !=null and ESG_CHK_TYPE !='' ">
		  	  AND CASE WHEN EV_TYPE = 'ESG' THEN
					( SELECT <include refid="com.sql.nvl"/>(MAX(EVEU.ESG_CHK_TYPE),'P') ESG_CHK_TYPE
						         FROM STOCEVEU EVEU
						        WHERE GATE_CD  = #{ses.gateCd}
						          AND DEL_FLAG = '0'
				  	 			  AND EVEU.GATE_CD    	= EM.GATE_CD
								  AND EVEU.EV_NUM      	= EM.EV_NUM
								  AND EVEU.VENDOR_CD    = ES.VENDOR_CD
					)
				 ELSE '' END
		  	   = #{ESG_CHK_TYPE}
		  </if>




		<if test="PROGRESS_CD != '' and PROGRESS_CD != null">
			AND EM.PROGRESS_CD = #{PROGRESS_CD}
		</if>
		<if test="PURCHASE_TYPE != '' and PURCHASE_TYPE != null">
			AND EM.PURCHASE_TYPE = #{PURCHASE_TYPE}
		</if>
		<if test="EV_CTRL_USER_NM != '' and EV_CTRL_USER_NM != null">
			AND <include refid="com.sql.dbo"/>GETUSERNAME(EM.GATE_CD, EM.EV_CTRL_USER_ID, #{ses.langCd}) <include refid="com.sql.likeL"/> #{EV_CTRL_USER_NM} <include refid="com.sql.likeR"/>
		</if>
		<if test="EV_NUM != '' and EV_NUM != null">
			AND EM.EV_NUM <include refid="com.sql.likeL"/> #{EV_NUM} <include refid="com.sql.likeR"/>
		</if>
		<if test="VENDOR_CD !=null and VENDOR_CD !='' ">
			AND UPPER(ES.VENDOR_CD) <include refid="com.sql.likeL"/> UPPER(#{VENDOR_CD}) <include refid="com.sql.likeR"/>
		</if>
		<if test="VENDOR_NM != '' and VENDOR_NM != null">
			AND <include refid="com.sql.dbo"/>GETVENDORNAME(#{ses.gateCd},ES.VENDOR_CD,#{ses.langCd}) <include refid="com.sql.likeL"/> #{VENDOR_NM} <include refid="com.sql.likeR"/>
		</if>
		<if test="EV_NM != '' and EV_NM != null">
			AND EM.EV_NM <include refid="com.sql.likeL"/> #{EV_NM} <include refid="com.sql.likeR"/>
		</if>
		<if test="EV_TYPE != '' and EV_TYPE != null">
			AND EM.EV_TYPE = #{EV_TYPE}
		</if>
		<if test="BUYER_CD != null and BUYER_CD != ''">
			AND EM.BUYER_CD in
			<foreach collection="BUYER_CD_LIST" item="item" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		ORDER BY EV_NUM DESC, VENDOR_CD ASC
	</select>

	<update id="srm270_doComplete" parameterType="hashmap">
		UPDATE STOCEVES SET
		    PROGRESS_CD = '300'
			, MOD_DATE = <include refid="com.sql.sysdate"/>
			, MOD_USER_ID = #{ses.userId}
		WHERE GATE_CD = #{ses.gateCd}
		AND EV_NUM = #{EV_NUM}
	</update>


	<update id="doCancel" parameterType="hashmap">
		UPDATE 	STOCEVES
		SET		PROGRESS_CD = '200'
			   ,MOD_DATE	= <include refid="com.sql.sysdate"/>
			   ,MOD_USER_ID	= #{ses.userId}
		WHERE	GATE_CD 	= #{ses.gateCd}
		AND		EV_NUM	 	= #{EV_NUM}
		AND		VENDOR_CD 	= #{VENDOR_CD}
		AND		VENDOR_SQ 	= #{VENDOR_SQ}
	</update>

	<update id="doCancelEm" parameterType="hashmap">
		UPDATE 	STOCEVEM
		   SET	PROGRESS_CD 	= '200'
		   	   ,MOD_DATE		= <include refid="com.sql.sysdate"/>
		   	   ,MOD_USER_ID		= #{ses.userId}
		   	   ,COMPLETE_DATE 	= null
		 WHERE	GATE_CD			= #{ses.gateCd}
		   AND	EV_NUM			= #{EV_NUM}
	</update>

	<update id="doEdit" parameterType="hashmap">
		UPDATE	 STOCEVES
		SET		 EV_SCORE 		= #{EV_SCORE}
				,AMEND_REASON 	= #{AMEND_REASON}
				,MOD_DATE		= <include refid="com.sql.sysdate"/>
			    ,MOD_USER_ID	= #{ses.userId}
		WHERE	GATE_CD 		= #{ses.gateCd}
		AND		EV_NUM 			= #{EV_NUM}
		AND		VENDOR_CD 		= #{VENDOR_CD}
		AND		VENDOR_SQ 		= #{VENDOR_SQ}
	</update>

	<select id="check" parameterType="hashmap" resultType='java.lang.String'>
		SELECT
			CASE WHEN
				(SELECT COUNT(*) FROM STOCEVES WHERE EV_NUM = #{EV_NUM})
				=
				(SELECT COUNT(*) FROM STOCEVES WHERE EV_NUM = #{EV_NUM} AND PROGRESS_CD = '300')
		  THEN 'TRUE'
		  ELSE 'FALSE'
		  END
	   <include refid="com.sql.dual"/>
	</select>

	<update id="emFinish" parameterType="hashmap">
		UPDATE	STOCEVEM
		   SET	PROGRESS_CD 	= '300'
		   	   ,MOD_DATE		= <include refid="com.sql.sysdate"/>
		   	   ,MOD_USER_ID		= #{ses.userId}
		   	   ,COMPLETE_DATE 	= <include refid="com.sql.sysdate"/>
		 WHERE	EV_NUM = #{EV_NUM}
	</update>

	<select id="EV0270P03_doSearch" parameterType="hashmap" resultType="hashmap">
		SELECT
			ES.EV_NUM
			, <include refid="com.sql.dbo"/>GETCODENAME( #{ses.gateCd},'M212',EM.EV_TYPE,#{ses.langCd})  AS EV_TYPE
			, EM.EV_NM
			,<include refid="com.sql.dbo"/>GETGMTDATE(EM.REG_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS REG_DATE
			, ES.EV_SCORE
			, ES.VENDOR_CD
			,<include refid="com.sql.dbo"/>getVendorName(#{ses.gateCd}, ES.VENDOR_CD, #{ses.langCd})  AS VENDOR_NM
		FROM STOCEVES ES
		JOIN STOCEVEM EM
		  ON  EM.GATE_CD = ES.GATE_CD
		  AND EM.EV_NUM = ES.EV_NUM
		JOIN STOCEVTM TM
		  ON  TM.GATE_CD = EM.GATE_CD
		  AND TM.EV_TPL_NUM = EM.EXEC_EV_TPL_NUM
		WHERE ES.GATE_CD = #{ses.gateCd}
		  AND ES.DEL_FLAG = '0'
		  AND ES.PROGRESS_CD IS NOT NULL
		  AND EM.EV_TYPE = 'E'
		  AND ES.VENDOR_CD = #{VENDOR_CD}
		ORDER BY REG_DATE
	</select>
</mapper>