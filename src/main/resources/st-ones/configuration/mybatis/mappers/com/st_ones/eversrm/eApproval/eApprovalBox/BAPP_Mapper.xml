<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Fri Mar 02 08:25:35 KST 2012-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.st_ones.eversrm.eApproval.eApprovalBox.BAPP_Mapper">

    <select id="searchMailBox" parameterType="hashmap" resultType="hashMap">

        SELECT DISTINCT SCTP.APP_DOC_NUM,
               SCTP.APP_DOC_CNT,
               SCTM.SUBJECT,
               SCTM.SIGN_STATUS,
               SCTP.SIGN_STATUS AS PER_SIGN_STATUS,
               SCTM.IMPORTANCE_STATUS,
               SCTM.DOC_TYPE,
           <if test="_databaseId == 'oracle'">
                <include refid="com.sql.dbo"/>getGmtDate(SCTM.REG_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateFormat}<include refid="com.sql.stringMerge"/>' hh24:mi:ss')  AS RFA_DATE_TIME,
           </if>
           <if test="_databaseId == 'mssql'">
                <include refid="com.sql.dbo"/>getGmtDate(SCTM.REG_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateFormat}+' hh24:mi:ss')  AS RFA_DATE_TIME,
           </if>
               <include refid="com.sql.dbo"/>GETUSERNAME(SCTM.GATE_CD, SCTM.REG_USER_ID, #{ses.langCd}) AS REG_USER_ID,
               '' as DOC_CONTENTS,
               SCTP.SIGN_PATH_SQ,
           <if test="_databaseId == 'oracle'">
                (SELECT COUNT(*)
                  FROM STOCSCTP SCTP
                 WHERE SCTP.GATE_CD = SCTM.GATE_CD
                   AND SCTP.APP_DOC_NUM = SCTM.APP_DOC_NUM
                   AND SCTP.APP_DOC_CNT = SCTM.APP_DOC_CNT
                   AND SCTP.DEL_FLAG = '0') AS VIEW_CNT,
           </if>
           <if test="_databaseId == 'mssql'">
                (SELECT CAST(COUNT(*) AS VARCHAR)
                  FROM STOCSCTP SCTP
                 WHERE SCTP.GATE_CD = SCTM.GATE_CD
                   AND SCTP.APP_DOC_NUM = SCTM.APP_DOC_NUM
                   AND SCTP.APP_DOC_CNT = SCTM.APP_DOC_CNT
                   AND SCTP.DEL_FLAG = '0') AS VIEW_CNT,
           </if>
           <if test="_databaseId == 'oracle'">
                <include refid="com.sql.dbo"/>getGmtDate((SELECT MAX(SIGN_DATE)
                              FROM STOCSCTP
                             WHERE GATE_CD = SCTM.GATE_CD
                               AND APP_DOC_NUM = SCTM.APP_DOC_NUM
                               AND APP_DOC_CNT = SCTM.APP_DOC_CNT
                               AND DEL_FLAG = '0'
                               AND (SIGN_STATUS = 'E' OR SIGN_STATUS = 'R'))
                              , #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateFormat}<include refid="com.sql.stringMerge"/>' hh24:mi') AS SIGN_DATE,
           </if>
           <if test="_databaseId == 'mssql'">
                <include refid="com.sql.dbo"/>getGmtDate((SELECT MAX(SIGN_DATE)
                              FROM STOCSCTP
                             WHERE GATE_CD = SCTM.GATE_CD
                               AND APP_DOC_NUM = SCTM.APP_DOC_NUM
                               AND APP_DOC_CNT = SCTM.APP_DOC_CNT
                               AND DEL_FLAG = '0'
                               AND (SIGN_STATUS = 'E' OR SIGN_STATUS = 'R'))
                               , #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateFormat}+' hh24:mi') AS SIGN_DATE,
           </if>
               SCTM.ATT_FILE_NUM
              ,SCTP.GATE_CD
              ,SCTP.SIGN_REQ_TYPE
<!--
               SCTP.DOC_SQ,
               SCTP.MOD_USER_ID,
               SCTP.DEL_FLAG,
               SCTP.SIGN_USER_ID,
               SCTP.SIGN_RMK,
               SCTP.DEPT_CD,
               SCTP.DEPT_NM,
               SCTP.POSITION_NM,
               SCTP.DUTY_NM,
               SCTM.GATE_CD,
               SCTM.APP_DOC_NUM,
               SCTM.APP_DOC_CNT,
               <include refid="com.sql.dbo"/>getGmtDate(SCTM.REG_DATE, #{ses.userGmt}, #{ses.systemGmt}, 'hh24:mi:ss') AS REG_TIME,
               <include refid="com.sql.dbo"/>getGmtDate(SCTM.MOD_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateValueFormat}) AS MOD_DATE,
               <include refid="com.sql.dbo"/>getGmtDate(SCTM.MOD_DATE, #{ses.userGmt}, #{ses.systemGmt}, 'hh24:mi:ss') AS MOD_TIME,
               SCTM.MOD_USER_ID,
               SCTM.DEL_FLAG,
               SCTM.BUYER_CD,
              (0) AS VIEW_CNT_IMAGE
-->

          FROM STOCSCTM SCTM INNER JOIN STOCSCTP SCTP
            ON (SCTM.GATE_CD = SCTP.GATE_CD
           AND SCTM.APP_DOC_NUM = SCTP.APP_DOC_NUM
           AND SCTM.APP_DOC_CNT = SCTP.APP_DOC_CNT)
         WHERE SCTM.GATE_CD = #{ses.gateCd}
           AND SCTP.SIGN_USER_ID = #{ses.userId}
           AND SCTM.DEL_FLAG = '0'
           AND SCTP.DEL_FLAG = '0'
           AND (SCTM.NEXT_SIGN_USER_ID = #{ses.userId} OR SCTP.SIGN_STATUS IN ('P', 'R'))

         <if test="regDateFrom != '' and regDateFrom != null and regDateTo != '' and regDateTo != null">
           AND SCTM.REG_DATE BETWEEN <include refid="com.sql.toDate"/>#{regDateFrom}<include refid="com.sql.dateFrom"/> AND <include refid="com.sql.toDate"/>#{regDateTo}<include refid="com.sql.dateTo"/>
         </if>

         <if test="SIGN_STATUS != '' and SIGN_STATUS != null">
           AND (SCTM.SIGN_STATUS = #{SIGN_STATUS} or SCTP.SIGN_STATUS = #{SIGN_STATUS})
         </if>

           <if test="DOC_TYPE != '' and DOC_TYPE != null">
               AND DOC_TYPE = #{DOC_TYPE}
           </if>

           <if test="SIGN_REQ_TYPE != '' and SIGN_REQ_TYPE != null">
               AND SIGN_REQ_TYPE = #{SIGN_REQ_TYPE}
           </if>

           <if test="USER_ID != '' and USER_ID != null and st_USER_ID != ''">
               AND SCTM.REG_USER_ID <include refid="com.sql.likeL"/> #{USER_ID} <include refid="com.sql.likeR"/>
           </if>

           <if test="USER_NM != '' and USER_NM != null and st_USER_NM != ''">
               AND <include refid="com.sql.dbo"/>GETUSERNAME_ORI(SCTM.GATE_CD, SCTM.REG_USER_ID, #{ses.langCd})   LIKE  #{USER_NM}  || '%'
           </if>

           <if test="PER_SIGN_STATUS != '' and PER_SIGN_STATUS != null">
               AND SCTP.SIGN_STATUS = #{PER_SIGN_STATUS}
           </if>

           <if test="DOCUMENT_NM != '' and DOCUMENT_NM != null ">
               AND SUBJECT <include refid="com.sql.likeL"/> #{SUBJECT} <include refid="com.sql.likeR"/>
           </if>

            ORDER BY SCTP.APP_DOC_NUM DESC, SCTP.APP_DOC_CNT DESC
   </select>

    <select id="getSendBoxList" parameterType="hashmap" resultType="hashMap">

        SELECT
              SCTM.SIGN_STATUS
            , <include refid="com.sql.dbo"/>GETCOMCODE(SCTM.GATE_CD, 'M020', SCTM.SIGN_STATUS, 0, #{ses.langCd}) AS SIGN_STATUS_LOC
            , SCTM.IMPORTANCE_STATUS
            , SCTM.DOC_TYPE
            , SCTM.APP_DOC_NUM
            , SCTM.APP_DOC_CNT
            , SCTM.SUBJECT
            <if test="_databaseId == 'oracle'">
            	, <include refid="com.sql.dbo"/>getGmtDate(SCTM.REG_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateFormat}<include refid="com.sql.stringMerge"/>' hh24:mi:ss')  AS RFA_DATE_TIME
            </if>
            <if test="_databaseId == 'mssql'">
            	, <include refid="com.sql.dbo"/>getGmtDate(SCTM.REG_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateFormat}+' hh24:mi:ss')  AS RFA_DATE_TIME
            </if>
            , '' as DOC_CONTENTS
            ,(SELECT MIN(SIGN_PATH_SQ)
                FROM STOCSCTP
               WHERE GATE_CD     = SCTM.GATE_CD
                 AND APP_DOC_NUM = SCTM.APP_DOC_NUM
                 AND APP_DOC_CNT = SCTM.APP_DOC_CNT
                 AND SIGN_STATUS = 'P'
                 AND DEL_FLAG    = '0' ) SIGN_PATH_SQ
            <if test="_databaseId == 'oracle'">
            , (SELECT COUNT(*)
			         FROM STOCSCTP SCTP
			        WHERE SCTP.GATE_CD     = SCTM.GATE_CD
			          AND SCTP.APP_DOC_NUM = SCTM.APP_DOC_NUM
			          AND SCTP.APP_DOC_CNT = SCTM.APP_DOC_CNT
			          AND SCTP.DEL_FLAG    = '0') AS CNT
            </if>
            <if test="_databaseId == 'mssql'">
            ,(SELECT CAST(COUNT(*) AS VARCHAR)
			         FROM STOCSCTP SCTP
			        WHERE SCTP.GATE_CD     = SCTM.GATE_CD
			          AND SCTP.APP_DOC_NUM = SCTM.APP_DOC_NUM
			          AND SCTP.APP_DOC_CNT = SCTM.APP_DOC_CNT
			          AND SCTP.DEL_FLAG    = '0') AS CNT
            </if>
            , <include refid="com.sql.dbo"/>getGmtDate((SELECT MAX(SIGN_DATE)
                                       FROM STOCSCTP
                                      WHERE GATE_CD     = SCTM.GATE_CD
                                        AND APP_DOC_NUM = SCTM.APP_DOC_NUM
                                        AND APP_DOC_CNT = SCTM.APP_DOC_CNT
                                        AND DEL_FLAG    = '0'
                                        AND (SIGN_STATUS = 'E' OR SIGN_STATUS = 'R'))
                                     , #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS SIGN_DATE
            , SCTM.ATT_FILE_NUM
            , SCTM.GATE_CD
<!--
            , (0) AS CNT_IMAGE
-->
         FROM STOCSCTM SCTM
        WHERE SCTM.GATE_CD = #{ses.gateCd}
		  AND SCTM.REG_USER_ID = #{ses.userId}
          AND SCTM.DEL_FLAG = '0'
          <if test="START_DATE != '' and START_DATE != null and END_DATE != '' and END_DATE != null">
            AND SCTM.REG_DATE BETWEEN <include refid="com.sql.toDate"/>#{START_DATE}<include refid="com.sql.dateFrom"/> AND <include refid="com.sql.toDate"/>#{END_DATE}<include refid="com.sql.dateTo"/>
          </if>
          <if test="DOC_TYPE != '' and DOC_TYPE != null">
              AND SCTM.DOC_TYPE = #{DOC_TYPE}
          </if>
          <if test="SUBJECT != '' and SUBJECT != null">
              AND SCTM.SUBJECT <include refid="com.sql.likeL"/> #{SUBJECT} <include refid="com.sql.likeR"/>
          </if>
          <if test="SIGN_REQ_TYPE != '' and SIGN_REQ_TYPE != null">
              AND EXISTS (SELECT SCTP.APP_DOC_NUM
                            FROM STOCSCTP SCTP
                           WHERE SCTP.GATE_CD       = SCTM.GATE_CD
                             AND SCTP.APP_DOC_NUM   = SCTM.APP_DOC_NUM
                             AND SCTP.APP_DOC_CNT   = SCTM.APP_DOC_CNT
                             AND SCTP.DEL_FLAG      = '0'
                             AND SCTP.SIGN_REQ_TYPE = #{SIGN_REQ_TYPE})
          </if>
          <if test="SIGN_STATUS != '' and SIGN_STATUS != null">
              AND SCTM.SIGN_STATUS = #{SIGN_STATUS}
          </if>
        ORDER BY SCTM.REG_DATE DESC

    </select>

    <update id="doCancelRFA" parameterType="hashMap">

        UPDATE STOCSCTM <include refid="com.sql.rowLock"/> SET
            SIGN_STATUS = 'C',
            MOD_DATE = <include refid="com.sql.sysdate"/>,
            MOD_USER_ID = #{ses.userId}
        WHERE GATE_CD = #{GATE_CD}
          AND APP_DOC_NUM = #{APP_DOC_NUM}
          AND APP_DOC_CNT = #{APP_DOC_CNT}

    </update>

    <select id="getCurrentDocCount" resultType="string">

        SELECT <include refid="com.sql.nvl"/>(MAX(APP_DOC_CNT),0)
          FROM STOCSCTM
         WHERE GATE_CD     = #{ses.gateCd}
           AND APP_DOC_NUM = #{APP_DOC_NUM}

    </select>

    <select id="selectSTOCSCTM" resultType="hashMap">

      SELECT GATE_CD,
             APP_DOC_NUM,
             APP_DOC_CNT,
             DOC_TYPE,
             IMPORTANCE_STATUS,
             <include refid="com.sql.dbo"/>GETCOMCODE(GATE_CD, 'M053', IMPORTANCE_STATUS, 0, #{ses.langCd}) AS IMPORTANCE_STATUS_NM,
             <if test="_databaseId == 'oracle'">
             	<include refid="com.sql.dbo"/>getGmtDate(REG_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateFormat}<include refid="com.sql.stringMerge"/>' hh24:mi:ss') AS REG_DATE,
             </if>
             <if test="_databaseId == 'mssql'">
             	<include refid="com.sql.dbo"/>getGmtDate(REG_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateFormat}+' hh24:mi:ss') AS REG_DATE,
             </if>
             <include refid="com.sql.dbo"/>getGmtDate(REG_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateValueFormat}) AS REG_DATE,
             SUBJECT,
             <include refid="com.sql.dbo"/>GETUSERNAME(GATE_CD, REG_USER_ID, #{ses.langCd}) AS REG_USER_NM,
             CONTENTS_TEXT_NUM,
             ATT_FILE_NUM,
             SIGN_STATUS,
             <include refid="com.sql.dbo"/>GETCOMCODE(GATE_CD, 'M038', DOC_TYPE, 0, #{ses.langCd}) AS DOC_TITLE,
             REG_USER_ID
        FROM STOCSCTM
       WHERE GATE_CD     = #{ses.gateCd}
         AND APP_DOC_NUM = #{APP_DOC_NUM}
         AND APP_DOC_CNT = #{APP_DOC_CNT}
         AND DEL_FLAG    = '0'

    </select>

    <select id="selectSTOCSCTP" resultType="hashMap">

        SELECT SCTP.DOC_SQ
            , SCTP.SIGN_PATH_SQ
            , SCTP.SIGN_USER_ID
            , '' AS SIGN_USER_NM_IMG
            , <include refid="com.sql.dbo"/>GETUSERNAME(#{ses.gateCd}, SCTP.SIGN_USER_ID, #{ses.langCd}) AS SIGN_USER_NM
            , SCTP.DEPT_NM
            , SCTP.DEPT_CD
            , SCTP.POSITION_NM
            , SCTP.DUTY_NM
            , SCTP.SIGN_REQ_TYPE
            , <include refid="com.sql.dbo"/>GETCOMPANYNAME(CVUR.GATE_CD, CVUR.COMPANY_CD, #{ses.langCd})  AS COMPANY_NM
        FROM STOCSCTP SCTP
        JOIN STOCCVUR CVUR
            ON  CVUR.GATE_CD = SCTP.GATE_CD
            AND CVUR.USER_ID = SCTP.SIGN_USER_ID
            AND CVUR.DEL_FLAG = '0'
        WHERE SCTP.GATE_CD = #{ses.gateCd}
        AND SCTP.APP_DOC_NUM = #{APP_DOC_NUM}
        AND SCTP.APP_DOC_CNT = #{APP_DOC_CNT}
        AND SCTP.DEL_FLAG = '0'
        ORDER BY SCTP.SIGN_PATH_SQ
    </select>

     <select id="selectLULP" resultType="hashMap">

        SELECT DISTINCT
               '' AS DOC_SQ
             , LULP.PATH_SQ AS SIGN_PATH_SQ
             ,  LULP.SIGN_USER_ID AS SIGN_USER_ID
             , '' AS SIGN_USER_NM_IMG
             , <include refid="com.sql.dbo"/>getUserName(LULP.GATE_CD, LULP.SIGN_USER_ID, #{ses.langCd}) AS SIGN_USER_NM
             , <include refid="com.sql.dbo"/>getUserDeptInfo(LULP.GATE_CD, LULP.SIGN_USER_ID, #{ses.langCd}) AS DEPT_NM
             , USERTB.DEPT_CD
             , USERTB.POSITION_NM
             , USERTB.DUTY_NM
             , LULP.SIGN_REQ_STATUS AS SIGN_REQ_TYPE
            , USERTB.COMPANY_CD
            , <include refid="com.sql.dbo"/>GETCOMPANYNAME(USERTB.GATE_CD, USERTB.COMPANY_CD, #{ses.langCd})  AS COMPANY_NM
        FROM STOCLULP LULP
        JOIN USERCVUR_VW USERTB
          ON LULP.SIGN_USER_ID = USERTB.USER_ID
         AND LULP.GATE_CD = USERTB.GATE_CD
       WHERE LULP.GATE_CD    = #{gateCd}
         AND LULP.PATH_NUM   = #{pathNum}
         AND LULP.DEL_FLAG   = '0'
        ORDER BY LULP.PATH_SQ

    </select>

    <select id="getAuthorizedCount" resultType="int">

       SELECT COUNT(*)
         FROM STOCSCTP SCTP
            , STOCSCTM SCTM
        WHERE SCTM.GATE_CD     = SCTP.GATE_CD
          AND SCTM.APP_DOC_NUM = SCTP.APP_DOC_NUM
          AND SCTM.APP_DOC_CNT = SCTP.APP_DOC_CNT
          AND SCTM.APP_DOC_NUM = #{APP_DOC_NUM}
          AND SCTM.APP_DOC_CNT = #{APP_DOC_CNT}
          AND (SCTM.REG_USER_ID = #{ses.userId}
                OR (SCTP.SIGN_STATUS IN ('E', 'R') AND SCTP.SIGN_USER_ID = #{ses.userId})
                OR (SCTM.NEXT_SIGN_USER_ID = #{ses.userId}))
          AND SCTM.DEL_FLAG = '0'
          AND SCTP.DEL_FLAG = '0'
    </select>

     <select id="getUserInfoByName" resultType="hashMap">

            SELECT <include refid="com.sql.mtop1"/>
            	   USER_ID,
                   <include refid="com.sql.dbo"/>GETUSERNAME(GATE_CD, USER_ID, #{ses.langCd}) AS USER_NM,
                   USER_NM_ENG,
                   DEPT_CD,
                   POSITION_NM,
                   DUTY_NM,
                   <include refid="com.sql.dbo"/>GETDEPTNAME(#{ses.gateCd}, COMPANY_CD , DEPT_CD, #{ses.langCd}) AS DEPT_NM
             FROM STOCUSER
            WHERE GATE_CD   = #{ses.gateCd}
              AND DEL_FLAG  = '0'
              AND USE_FLAG  = '1'
              AND USER_TYPE = 'B'
              AND UPPER(<include refid="com.sql.dbo"/>GETUSERNAME(GATE_CD, USER_ID, #{ses.langCd})) <include refid="com.sql.likeL"/> UPPER(#{USER_NM}) <include refid="com.sql.likeR"/>
			  <include refid="com.sql.otop1"/>
    </select>

     <select id="matchUserCountByName" resultType="int">
            SELECT COUNT(*)
              FROM STOCUSER
             WHERE GATE_CD   = #{ses.gateCd}
               AND DEL_FLAG  = '0'
               AND USE_FLAG  = '1'
               AND USER_TYPE = 'B'
               AND UPPER(<include refid="com.sql.dbo"/>GETUSERNAME(GATE_CD, USER_ID, #{ses.langCd})) <include refid="com.sql.likeL"/> UPPER(#{USER_NM}) <include refid="com.sql.likeR"/>

    </select>

	<!-- BAPP_550 -->
    <select id="userSearch" resultType="hashMap">

        SELECT
              A.SIGN_USER_ID
            , A.SIGN_USER_NM
            , A.DEPT_CD
            , A.DEPT_NM
            , A.DUTY_NM
            , A.POSITION_NM
            , A.COMPANY_NM
            , A.PLANT_CD
            , A.PLANT_NM
        FROM (
                SELECT
                      UR.USER_ID AS SIGN_USER_ID
                    , UR.USER_NM AS SIGN_USER_NM
                    , UR.DEPT_CD
                    , <include refid="com.sql.dbo"/>getUserDeptInfo(#{ses.gateCd}, UR.USER_ID, #{ses.langCd}) AS DEPT_NM
                    , UR.DUTY_NM
                    , UR.POSITION_NM
                    , <include refid="com.sql.dbo"/>GETCOMPANYNAME(UR.GATE_CD, UR.COMPANY_CD, #{ses.langCd})  AS COMPANY_NM
                    , UR.PLANT_CD
                    , <include refid="com.sql.dbo"/>getPlantName(#{ses.gateCd}, UR.COMPANY_CD, UR.PLANT_CD, #{ses.langCd}) AS PLANT_NM
                  FROM STOCUSER UR
                 WHERE UR.GATE_CD = #{ses.gateCd}
                   AND UR.COMPANY_CD = #{ses.companyCd}
                   AND UR.USER_TYPE IN ('B', 'C')
                   AND UR.DEL_FLAG = '0'
                   AND UR.PROGRESS_CD = 'E'
                <if test="SIGN_USER_NM != '' and SIGN_USER_NM != null">
                   AND UR.USER_NM <include refid="com.sql.likeL"/> #{USER_NM} <include refid="com.sql.likeR"/>
                </if>

                UNION ALL

                SELECT
                      UR.USER_ID AS SIGN_USER_ID
                    , UR.USER_NM AS SIGN_USER_NM
                    , UR.DEPT_CD
                    , <include refid="com.sql.dbo"/>getUserDeptInfo(#{ses.gateCd}, UR.USER_ID, #{ses.langCd}) AS DEPT_NM
                    , UR.DUTY_NM
                    , UR.POSITION_NM
                    , <include refid="com.sql.dbo"/>GETCOMPANYNAME(UR.GATE_CD, UR.COMPANY_CD, #{ses.langCd})  AS COMPANY_NM
                    , UR.PLANT_CD
                    , <include refid="com.sql.dbo"/>getPlantName(#{ses.gateCd}, UR.COMPANY_CD, UR.PLANT_CD, #{ses.langCd}) AS PLANT_NM
                  FROM STOCCVUR UR
                 WHERE UR.GATE_CD 		= #{ses.gateCd}
                   AND UR.USER_TYPE 	= 'B'
                   AND UR.DEL_FLAG 		= '0'
                   AND UR.PROGRESS_CD 	= 'E'
                   AND UR.COMPANY_CD = #{ses.companyCd}
                   
                <if test="SIGN_USER_NM != '' and SIGN_USER_NM != null">
                   AND UR.USER_NM <include refid="com.sql.likeL"/> #{USER_NM} <include refid="com.sql.likeR"/>
                </if>
              ) A
            WHERE 1 = 1
		<if test="DEPT_CD != '' and DEPT_CD != null">
		      AND A.DEPT_NM <include refid="com.sql.likeL"/> #{DEPT_NM} <include refid="com.sql.likeR"/>
		</if>
         ORDER BY A.COMPANY_NM, A.DEPT_NM, A.POSITION_NM, A.SIGN_USER_NM

    </select>

	<select id="getAppLineCd" parameterType="hashMap" resultType="hashMap">
		SELECT * FROM STOCUSER WHERE USER_ID = 'XXXXXXXXXXXX'
    </select>

	<select id="getParentDeptCd" parameterType="hashMap" resultType="java.lang.String">

		SELECT OG.PARENT_DEPT_CD FROM STOCOGDP OG WHERE OG.GATE_CD = #{ses.gateCd} AND OG.DEPT_CD = #{DEPT_CD} AND OG.DEL_FLAG = '0'
    </select>

	<select id="getChiefIncludeFlag" parameterType="hashMap" resultType="java.lang.String">

		SELECT
            <include refid="com.sql.nvl"/>(LC.CHIEF_INCLUDE_FLAG, '0') AS CHIEF_INCLUDE_FLAG
          FROM STOCDMLC LC
         WHERE LC.GATE_CD = #{ses.gateCd}
           AND LC.CUST_CD = #{CUST_CD}
           AND LC.DML_TYPE = #{DML_TYPE}
           AND LC.LINE_CD = #{LINE_CD}
    </select>

    <select id="getAgrLines" parameterType="hashMap" resultType="hashMap">

        SELECT
            T.*
          FROM (
    <choose>
        <when test='chiefIncludeFlag == "1"'>
            SELECT
                 'A' AS SIGN_REQ_TYPE
                ,CHIEF.USER_ID AS SIGN_USER_ID
                ,CHIEF.USER_NM AS SIGN_USER_NM
                ,'' AS SIGN_USER_NM_IMG
                ,CHIEF.DUTY_NM AS POSITION_NM
                ,CHIEF.DEPT_CD
                ,<include refid="com.sql.dbo"/>GETDEPTNAME(CHIEF.GATE_CD, CHIEF.COMPANY_CD, CHIEF.DEPT_CD, #{ses.langCd}) AS DEPT_NM
                ,CHIEF.DUTY_NM
                ,0 AS SORT_SQ
        <choose>
            <when test='CUST_CD == "1000"'>
                ,(SELECT CM.BUYER_NM FROM STOCOGCM CM WHERE CM.GATE_CD = CHIEF.GATE_CD AND CM.BUYER_CD = CHIEF.COMPANY_CD) AS COMPANY_NM
            </when>
            <otherwise>
                ,(SELECT CUST.CUST_NM FROM STOCCUST CUST WHERE CUST.GATE_CD = CHIEF.GATE_CD AND CUST.CUST_CD = CHIEF.COMPANY_CD) AS COMPANY_NM
            </otherwise>
        </choose>
        <choose>
            <when test='CUST_CD == "1000"'>
                FROM STOCUSER UR
                INNER JOIN STOCUSER CHIEF
            </when>
            <otherwise>
                FROM STOCCVUR UR
                INNER JOIN STOCCVUR CHIEF
            </otherwise>
        </choose>
                 ON (UR.GATE_CD = CHIEF.GATE_CD
                 AND UR.CHIEF_USER_ID = CHIEF.USER_ID)
               WHERE UR.GATE_CD = #{ses.gateCd}
                 AND UR.USER_ID = #{ses.userId}
                 AND UR.DEL_FLAG = '0'
            <choose>
                <when test='CUST_CD == "1000"'>AND 1 = 1</when>
                <otherwise>AND <include refid="com.sql.nvl"/>(CHIEF.APROVAL_USER_FLAG, '0') = '1'</otherwise>
            </choose>

            UNION ALL

        </when>
        <otherwise>

        </otherwise>
    </choose>
            SELECT
                'A' AS SIGN_REQ_TYPE
                ,DM.REF_USER_ID AS SIGN_USER_ID
                ,UR.USER_NM AS SIGN_USER_NM
                ,'' AS SIGN_USER_NM_IMG
                ,UR.DUTY_NM AS POSITION_NM
                ,UR.DEPT_CD
                ,<include refid="com.sql.dbo"/>GETDEPTNAME(UR.GATE_CD, UR.COMPANY_CD, UR.DEPT_CD, #{ses.langCd}) AS DEPT_NM
                ,UR.DUTY_NM
                ,DM.SORT_SQ
        <choose>
            <when test='CUST_CD == "1000"'>
                ,(SELECT CM.BUYER_NM FROM STOCOGCM CM WHERE CM.GATE_CD = UR.GATE_CD AND CM.BUYER_CD = UR.COMPANY_CD) AS COMPANY_NM
            </when>
            <otherwise>
                ,(SELECT CUST.CUST_NM FROM STOCCUST CUST WHERE CUST.GATE_CD = UR.GATE_CD AND CUST.CUST_CD = UR.COMPANY_CD) AS COMPANY_NM
            </otherwise>
        </choose>
              FROM STOCDMUR DM
        <choose>
            <when test='CUST_CD == "1000"'> LEFT JOIN STOCUSER UR </when>
            <otherwise> LEFT JOIN STOCCVUR UR </otherwise>
        </choose>
               ON (DM.GATE_CD = UR.GATE_CD
               AND DM.REF_USER_ID = UR.USER_ID
               AND DM.DEL_FLAG = '0')
             WHERE DM.GATE_CD = #{ses.gateCd}
               AND DM.CUST_CD = #{CUST_CD}
               AND DM.DML_TYPE = 'AGR'
               AND DM.LINE_CD = #{LINE_CD}
               AND DM.DEL_FLAG = '0'
               AND DM.USE_FLAG = '1'
        <choose>
            <when test='CUST_CD == "1000"'>AND 1 = 1</when>
            <otherwise>AND <include refid="com.sql.nvl"/>(UR.APROVAL_USER_FLAG, '0') = '1'</otherwise>
        </choose>

            UNION ALL

            SELECT
                'CC' AS SIGN_REQ_TYPE
                ,DM.REF_USER_ID AS SIGN_USER_ID
                ,UR.USER_NM AS SIGN_USER_NM
                ,'' AS SIGN_USER_NM_IMG
                ,UR.DUTY_NM AS POSITION_NM
                ,UR.DEPT_CD
                ,<include refid="com.sql.dbo"/>GETDEPTNAME(UR.GATE_CD, UR.COMPANY_CD, UR.DEPT_CD, #{ses.langCd}) AS DEPT_NM
                ,UR.DUTY_NM
                ,DM.SORT_SQ
        <choose>
            <when test='CUST_CD == "1000"'>
                ,(SELECT CM.BUYER_NM FROM STOCOGCM CM WHERE CM.GATE_CD = UR.GATE_CD AND CM.BUYER_CD = UR.COMPANY_CD) AS COMPANY_NM
            </when>
            <otherwise>
                ,(SELECT CUST.CUST_NM FROM STOCCUST CUST WHERE CUST.GATE_CD = UR.GATE_CD AND CUST.CUST_CD = UR.COMPANY_CD) AS COMPANY_NM
            </otherwise>
        </choose>
              FROM STOCDMUR DM
        <choose>
            <when test='CUST_CD == "1000"'> LEFT JOIN STOCUSER UR </when>
            <otherwise> LEFT JOIN STOCCVUR UR </otherwise>
        </choose>
               ON (DM.GATE_CD = UR.GATE_CD
               AND DM.REF_USER_ID = UR.USER_ID
               AND DM.DEL_FLAG = '0')
             WHERE DM.GATE_CD = #{ses.gateCd}
               AND DM.CUST_CD = #{CUST_CD}
               AND DM.DML_TYPE = 'REF'
               AND DM.LINE_CD = #{REF_LINE_CD}
               AND DM.DEL_FLAG = '0'
               AND DM.USE_FLAG = '1'
          ) T
         ORDER BY T.SIGN_REQ_TYPE, T.SORT_SQ

    </select>

    <select id="getAgrLinesOld" parameterType="hashMap" resultType="hashMap">

        SELECT T.*
          FROM(
            SELECT
                 'A' AS SIGN_REQ_TYPE
                ,LD.REF_USER_ID AS SIGN_USER_ID
                ,UR.USER_NM AS SIGN_USER_NM
                ,'' AS SIGN_USER_NM_IMG
                ,UR.DUTY_NM AS POSITION_NM
                ,UR.DEPT_CD
                ,<include refid="com.sql.dbo"/>GETDEPTNAME(UR.GATE_CD, UR.COMPANY_CD, UR.DEPT_CD, #{ses.langCd}) AS DEPT_NM
                ,UR.DUTY_NM
              <choose>
                <when test='CUST_CD == "1000"'>,UR.POSITION_CD</when>
                <otherwise>,'' AS POSITION_CD</otherwise>
              </choose>
            FROM STOCDMLD LD
          <choose>
            <when test='CUST_CD == "1000"'> LEFT JOIN STOCUSER UR </when>
            <otherwise> LEFT JOIN STOCCVUR UR </otherwise>
          </choose>
             ON (LD.GATE_CD = UR.GATE_CD
             AND LD.REF_USER_ID = UR.USER_ID
             AND LD.CUST_CD = UR.COMPANY_CD
             AND UR.DEL_FLAG = '0')
           WHERE LD.GATE_CD = #{ses.gateCd}
             AND LD.CUST_CD = #{CUST_CD}
             AND LD.DML_TYPE = 'AGR'
             AND LD.REF_CD = #{CODE} -- 합의라인 Code
             AND LD.DEL_FLAG = '0'
             AND LD.USE_FLAG = '1'

           UNION ALL

           SELECT
                 'CC' AS SIGN_REQ_TYPE
                ,LD.REF_USER_ID AS SIGN_USER_ID
                ,UR.USER_NM AS SIGN_USER_NM
                ,'' AS SIGN_USER_NM_IMG
                ,UR.DUTY_NM AS POSITION_NM
                ,UR.DEPT_CD
                ,<include refid="com.sql.dbo"/>GETDEPTNAME(UR.GATE_CD, UR.COMPANY_CD, UR.DEPT_CD, #{ses.langCd}) AS DEPT_NM
                ,UR.DUTY_NM
              <choose>
                <when test='CUST_CD == "1000"'>,UR.POSITION_CD</when>
                <otherwise>,'' AS POSITION_CD</otherwise>
              </choose>
            FROM STOCDMLD LD
          <choose>
            <when test='CUST_CD == "1000"'> LEFT JOIN STOCUSER UR </when>
            <otherwise> LEFT JOIN STOCCVUR UR </otherwise>
          </choose>
             ON (LD.GATE_CD = UR.GATE_CD
             AND LD.REF_USER_ID = UR.USER_ID
             AND LD.CUST_CD = UR.COMPANY_CD
             AND UR.DEL_FLAG = '0')
           WHERE LD.GATE_CD = #{ses.gateCd}
             AND LD.CUST_CD = #{CUST_CD}
             AND LD.DML_TYPE = 'REF'
             AND LD.REF_CD = #{REF_CD} -- 전결구분 (대분류)
             AND LD.DEL_FLAG = '0'
             AND LD.USE_FLAG = '1'
             AND CONVERT(numeric, #{REF_BIZ_AMT}) BETWEEN LD.FROM_AMT AND LD.TO_AMT
            ) T
        ORDER BY T.SIGN_REQ_TYPE

    </select>

	<select id="getAppLines" parameterType="hashMap" resultType="hashMap">

        <if test="_databaseId == 'oracle'">

            SELECT
                 'E' AS SIGN_REQ_TYPE
                ,UR.USER_ID AS SIGN_USER_ID
                ,UR.USER_NM AS SIGN_USER_NM
                ,'' AS SIGN_USER_NM_IMG
                ,UR.POSITION_NM
            <choose>
                <when test='CUST_CD == "1000"'>,UR.POSITION_CD</when>
                <otherwise>,'' AS POSITION_CD</otherwise>
            </choose>
                ,<include refid="com.sql.dbo"/>GETDEPTNAME(UR.GATE_CD, UR.COMPANY_CD, UR.DEPT_CD, #{ses.langCd}) AS DEPT_NM
                ,UR.DEPT_CD
                ,UR.DUTY_NM
              FROM STOCUSER UR
              INNER JOIN (SELECT distinct A.GATE_CD, regexp_substr(A.TXT, '[^,]+', 1, LEVEL) DUTY_CD
                            FROM (SELECT A.GATE_CD, A.TEXT2 AS TXT FROM STOCCODD A
                                   WHERE A.GATE_CD = #{ses.gateCd}
                                     AND A.CODE_TYPE = 'MP030'
                                     AND A.DEL_FLAG = '0'
                                     AND A.USE_FLAG = '1'
                                     AND A.CODE = #{CODE}) A
                          CONNECT BY LEVEL <![CDATA[<=]]> <include refid="com.sql.length"/>(regexp_replace(A.TXT, '[^,]+',''))+1) B
               ON (UR.GATE_CD = B.GATE_CD
               AND UR.DUTY_CD = B.DUTY_CD)
             WHERE UR.GATE_CD = #{ses.gateCd}
               AND UR.DEPT_CD = #{DEPT_CD}
               AND UR.DEL_FLAG = '0'
             ORDER BY UR.POSITION_CD

         </if>
         <if test="_databaseId == 'mssql'">

             SELECT
                  'E' AS SIGN_REQ_TYPE
                 ,UR.USER_ID AS SIGN_USER_ID
                 ,UR.USER_NM AS SIGN_USER_NM
                 ,'' AS SIGN_USER_NM_IMG
                 ,UR.DUTY_NM AS POSITION_NM
                 ,<include refid="com.sql.dbo"/>GETDEPTNAME(UR.GATE_CD, UR.COMPANY_CD, UR.DEPT_CD, #{ses.langCd}) AS DEPT_NM
                 ,UR.DEPT_CD
                 ,UR.DUTY_NM
                 ,DM.SORT_SQ
         <choose>
             <when test='CUST_CD == "1000"'>
                 ,(SELECT CM.BUYER_NM FROM STOCOGCM CM WHERE CM.GATE_CD = UR.GATE_CD AND CM.BUYER_CD = UR.COMPANY_CD) AS COMPANY_NM
             </when>
             <otherwise>
                 ,(SELECT CUST.CUST_NM FROM STOCCUST CUST WHERE CUST.GATE_CD = UR.GATE_CD AND CUST.CUST_CD = UR.COMPANY_CD) AS COMPANY_NM
             </otherwise>
         </choose>
               FROM STOCDMUR DM
         <choose>
             <when test='CUST_CD == "1000"'>LEFT JOIN STOCUSER UR</when>
             <otherwise>LEFT JOIN STOCCVUR UR</otherwise>
         </choose>
                ON (DM.GATE_CD = UR.GATE_CD
                AND DM.REF_USER_ID = UR.USER_ID)
              WHERE DM.GATE_CD = #{ses.gateCd}
                AND DM.CUST_CD = #{CUST_CD}
                AND DM.DML_TYPE = #{DML_TYPE}
                AND DM.LINE_CD = #{LINE_CD}
                AND DM.DEL_FLAG = '0'
         <choose>
             <when test='CUST_CD == "1000"'>AND 1 = 1</when>
             <otherwise>AND <include refid="com.sql.nvl"/>(UR.APROVAL_USER_FLAG, '0') = '1'</otherwise>
         </choose>
              ORDER BY DM.SORT_SQ

         </if>

    </select>

    <select id="getAppLinesWithChief" parameterType="hashMap" resultType="hashMap">

        SELECT
            A.*
          FROM (
            SELECT
                 'E' AS SIGN_REQ_TYPE
                ,CHIEF.USER_ID AS SIGN_USER_ID
                ,CHIEF.USER_NM AS SIGN_USER_NM
                ,'' AS SIGN_USER_NM_IMG
                ,CHIEF.DUTY_NM AS POSITION_NM
                ,<include refid="com.sql.dbo"/>GETDEPTNAME(CHIEF.GATE_CD, CHIEF.COMPANY_CD, CHIEF.DEPT_CD, #{ses.langCd}) AS DEPT_NM
                ,CHIEF.DEPT_CD
                ,CHIEF.DUTY_NM
                ,0 AS SORT_SQ
        <choose>
            <when test='CUST_CD == "1000"'>
                ,(SELECT CM.BUYER_NM FROM STOCOGCM CM WHERE CM.GATE_CD = CHIEF.GATE_CD AND CM.BUYER_CD = CHIEF.COMPANY_CD) AS COMPANY_NM
            </when>
            <otherwise>
                ,(SELECT CUST.CUST_NM FROM STOCCUST CUST WHERE CUST.GATE_CD = CHIEF.GATE_CD AND CUST.CUST_CD = CHIEF.COMPANY_CD) AS COMPANY_NM
            </otherwise>
        </choose>
        <choose>
            <when test='CUST_CD == "1000"'>
                FROM STOCUSER UR
                INNER JOIN STOCUSER CHIEF
            </when>
            <otherwise>
                FROM STOCCVUR UR
                INNER JOIN STOCCVUR CHIEF
            </otherwise>
        </choose>
               ON (UR.GATE_CD = CHIEF.GATE_CD
               AND UR.CHIEF_USER_ID = CHIEF.USER_ID)
             WHERE UR.GATE_CD = #{ses.gateCd}
               AND UR.USER_ID = #{ses.userId}
               AND UR.DEL_FLAG = '0'
        <choose>
            <when test='CUST_CD == "1000"'>AND 1 = 1</when>
            <otherwise>AND <include refid="com.sql.nvl"/>(CHIEF.APROVAL_USER_FLAG, '0') = '1'</otherwise>
        </choose>

            UNION ALL

            SELECT
                 'E' AS SIGN_REQ_TYPE
                ,UR.USER_ID AS SIGN_USER_ID
                ,UR.USER_NM AS SIGN_USER_NM
                ,'' AS SIGN_USER_NM_IMG
                ,UR.DUTY_NM AS POSITION_NM
                ,<include refid="com.sql.dbo"/>GETDEPTNAME(UR.GATE_CD, UR.COMPANY_CD, UR.DEPT_CD, #{ses.langCd}) AS DEPT_NM
                ,UR.DEPT_CD
                ,UR.DUTY_NM
                ,DM.SORT_SQ
            <choose>
                <when test='CUST_CD == "1000"'>
                    ,(SELECT CM.BUYER_NM FROM STOCOGCM CM WHERE CM.GATE_CD = UR.GATE_CD AND CM.BUYER_CD = UR.COMPANY_CD) AS COMPANY_NM
                </when>
                <otherwise>
                    ,(SELECT CUST.CUST_NM FROM STOCCUST CUST WHERE CUST.GATE_CD = UR.GATE_CD AND CUST.CUST_CD = UR.COMPANY_CD) AS COMPANY_NM
                </otherwise>
            </choose>
              FROM STOCDMUR DM
            <choose>
                <when test='CUST_CD == "1000"'>LEFT JOIN STOCUSER UR</when>
                <otherwise>LEFT JOIN STOCCVUR UR</otherwise>
            </choose>
               ON (DM.GATE_CD = UR.GATE_CD
               AND DM.REF_USER_ID = UR.USER_ID)
             WHERE DM.GATE_CD = #{ses.gateCd}
               AND DM.CUST_CD = #{CUST_CD}
               AND DM.DML_TYPE = #{DML_TYPE}
               AND DM.LINE_CD = #{LINE_CD}
               AND DM.DEL_FLAG = '0'
            <choose>
                <when test='CUST_CD == "1000"'>AND 1 = 1</when>
                <otherwise>AND <include refid="com.sql.nvl"/>(UR.APROVAL_USER_FLAG, '0') = '1'</otherwise>
            </choose>
          ) A
         ORDER BY A.SORT_SQ

    </select>

    <select id="getAppLinesOperator" parameterType="hashMap" resultType="hashMap">

        SELECT
             'E' AS SIGN_REQ_TYPE
            ,CHIEF.USER_ID AS SIGN_USER_ID
            ,CHIEF.USER_NM AS SIGN_USER_NM
            ,'' AS SIGN_USER_NM_IMG
            ,CHIEF.DUTY_NM AS POSITION_NM
            ,<include refid="com.sql.dbo"/>GETDEPTNAME(CHIEF.GATE_CD, CHIEF.COMPANY_CD, CHIEF.DEPT_CD, #{ses.langCd}) AS DEPT_NM
            ,CHIEF.DEPT_CD
            ,CHIEF.DUTY_NM
    <choose>
        <when test='CUST_CD == "1000"'>
            ,(SELECT CM.BUYER_NM FROM STOCOGCM CM WHERE CM.GATE_CD = CHIEF.GATE_CD AND CM.BUYER_CD = CHIEF.COMPANY_CD) AS COMPANY_NM
        </when>
        <otherwise>
            ,(SELECT CUST.CUST_NM FROM STOCCUST CUST WHERE CUST.GATE_CD = CHIEF.GATE_CD AND CUST.CUST_CD = CHIEF.COMPANY_CD) AS COMPANY_NM
        </otherwise>
    </choose>
    <choose>
        <when test='CUST_CD == "1000"'>
            FROM STOCUSER UR
            INNER JOIN STOCUSER CHIEF
        </when>
        <otherwise>
            FROM STOCCVUR UR
            INNER JOIN STOCCVUR CHIEF
        </otherwise>
    </choose>
           ON (UR.GATE_CD = CHIEF.GATE_CD
           AND UR.CHIEF_USER_ID = CHIEF.USER_ID)
         WHERE UR.GATE_CD = #{ses.gateCd}
           AND UR.USER_ID = #{ses.userId}
           AND UR.DEL_FLAG = '0'
    <choose>
        <when test='CUST_CD == "1000"'>AND 1 = 1</when>
        <otherwise>AND <include refid="com.sql.nvl"/>(CHIEF.APROVAL_USER_FLAG, '0') = '1'</otherwise>
    </choose>

    </select>

    <select id="getAppLinesInCust" parameterType="hashMap" resultType="hashMap">
        <![CDATA[
        SELECT
             'E' AS SIGN_REQ_TYPE
            ,UR.USER_ID AS SIGN_USER_ID
            ,UR.USER_NM AS SIGN_USER_NM
            ,'' AS SIGN_USER_NM_IMG
            ,UR.DUTY_NM AS POSITION_NM
            ,<include refid="com.sql.dbo"/>GETDEPTNAME(UR.GATE_CD, UR.COMPANY_CD, UR.DEPT_CD, #{ses.langCd}) AS DEPT_NM
            ,UR.DEPT_CD
            ,UR.DUTY_NM
          FROM STOCCVUR UR
          INNER JOIN (SELECT A.GATE_CD
                            ,<include refid="com.sql.subStr"/>(Split.a.value('.', 'NVARCHAR(100)'), 2, LEN(Split.a.value('.', 'NVARCHAR(100)'))) AS USER_ID
                            ,<include refid="com.sql.subStr"/>(Split.a.value('.', 'NVARCHAR(100)'), 1, 1) AS SORT_SQ
                        FROM (
                             SELECT
                                  A.GATE_CD
                                 ,CAST ('<M>' + REPLACE(A.TEXT2, ',', '</M><M>') + '</M>' AS XML) AS USER_ID
                              FROM STOCCODD A
                             WHERE A.GATE_CD = #{ses.gateCd}
                               AND A.CODE_TYPE = 'MP030'
                               AND A.CODE = #{CODE}
                               AND A.USE_FLAG = '1'
                               AND A.DEL_FLAG = '0'
                         ) AS A CROSS APPLY USER_ID.nodes ('/M') AS Split(a)) B
           ON (UR.GATE_CD = B.GATE_CD
           AND UR.USER_ID = B.USER_ID)
         WHERE UR.GATE_CD = #{ses.gateCd}
           AND UR.COMPANY_CD = #{CUST_CD}
           AND UR.DEL_FLAG = '0'
         ORDER BY B.SORT_SQ
        ]]>
    </select>

    <select id="getAppLinesTeamLeader" parameterType="hashMap" resultType="hashMap">

        SELECT
        	 'E' AS SIGN_REQ_TYPE
        	,UR.USER_ID AS SIGN_USER_ID
            ,UR.USER_NM AS SIGN_USER_NM
            ,'' AS SIGN_USER_NM_IMG
            ,UR.DUTY_NM AS POSITION_NM
            ,<include refid="com.sql.dbo"/>GETDEPTNAME(UR.GATE_CD, UR.COMPANY_CD, UR.DEPT_CD, #{ses.langCd}) AS DEPT_NM
            ,UR.DEPT_CD
            ,UR.DUTY_NM
          FROM STOCCVUR UR
          INNER JOIN (SELECT A.GATE_CD, A.CHIEF_USER_ID AS USER_ID
        				FROM STOCCVUR A
                       WHERE A.GATE_CD = #{ses.gateCd}
                         AND A.USER_ID = #{REG_USER_ID}
                         AND A.COMPANY_CD = #{CUST_CD}
                         AND A.DEL_FLAG = '0') A
           ON (UR.GATE_CD = A.GATE_CD
           AND UR.USER_ID = A.USER_ID)
         WHERE UR.GATE_CD = #{ses.gateCd}
           AND UR.COMPANY_CD = #{CUST_CD}
           AND UR.DEL_FLAG = '0'

    </select>

	<select id="doSearchSync" resultType="hashMap">

	    SELECT *
	      FROM (
		<if test="USER_IDS != '' and USER_IDS != null">
			<foreach collection="list" item="item" index="index" separator="UNION ALL" open="(" close=")">
	        SELECT
	        	#{item.SIGN_TYPE} AS SIGN_REQ_TYPE,
	        	#{item.SIGN_PATH_SQ} AS SIGN_PATH_SQ,
				UR.USER_ID AS SIGN_USER_ID,
				UR.USER_NM AS SIGN_USER_NM,
				UR.DEPT_CD,
				<include refid="com.sql.dbo"/>getUserDeptInfo(#{ses.gateCd}, UR.USER_ID, #{ses.langCd}) AS DEPT_NM
				UR.POSITION_NM
			 FROM STOCUSER UR
			WHERE UR.GATE_CD   = #{ses.gateCd}
			  AND UR.USER_TYPE = 'B'
	          AND UR.USER_ID   = #{item.USER_ID}
			  AND UR.DEL_FLAG  = '0'
			</foreach>
		</if>
			)
		 WHERE 1 = 1
		 ORDER BY TO_NUMBER(SIGN_PATH_SQ)
    </select>

    <select id="getMyPath" parameterType="hashMap" resultType="hashMap">

        SELECT
            RULM.PATH_NUM
          FROM STOCRULM RULM <include refid="com.sql.noLock"/>
         WHERE RULM.GATE_CD = #{ses.gateCd}
           AND RULM.PATH_USER_ID = #{ses.userId}
           AND RULM.MAIN_PATH_FLAG = '1'
           AND RULM.DEL_FLAG = '0'

    </select>

    <select id="getMyPathList" parameterType="hashMap" resultType="hashMap">

        SELECT
            <include refid="com.sql.nvl"/>(LULP.SIGN_REQ_STATUS, 'E') AS SIGN_REQ_TYPE
            ,LULP.SIGN_USER_ID
            ,<include refid="com.sql.dbo"/>getUserName(LULP.GATE_CD, LULP.SIGN_USER_ID, #{ses.langCd}) AS SIGN_USER_NM
            ,'' AS SIGN_USER_NM_IMG
            ,<include refid="com.sql.dbo"/>getUserDeptInfo(LULP.GATE_CD, LULP.SIGN_USER_ID, #{ses.langCd}) AS DEPT_NM
            ,USERTB.DEPT_CD
            ,USERTB.DUTY_NM
            ,USERTB.POSITION_NM
            ,LULP.PATH_SQ AS SORT_SQ
            ,<include refid="com.sql.dbo"/>GETCOMPANYNAME(USERTB.GATE_CD, USERTB.COMPANY_CD, #{ses.langCd})  AS COMPANY_NM
          FROM STOCLULP LULP <include refid="com.sql.noLock"/>
          JOIN USERCVUR_VW USERTB <include refid="com.sql.noLock"/>
           ON (LULP.SIGN_USER_ID = USERTB.USER_ID
           AND LULP.GATE_CD = USERTB.GATE_CD)
         WHERE LULP.GATE_CD = #{ses.gateCd}
           AND LULP.PATH_NUM = #{PATH_NUM}
           AND LULP.DEL_FLAG = '0'
         ORDER BY LULP.PATH_SQ

    </select>

    <select id="getSendReceiveBoxList" parameterType="hashmap" resultType="hashMap">

        SELECT DISTINCT
        SCTM.APP_DOC_NUM,
        SCTM.APP_DOC_CNT,
        SCTM.SUBJECT,
        SCTM.SIGN_STATUS,
        SCTM.DOC_TYPE,
        <if test="_databaseId == 'oracle'">
            <include refid="com.sql.dbo"/>getGmtDate(SCTM.REG_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateFormat}<include refid="com.sql.stringMerge"/>' hh24:mi:ss')  AS RFA_DATE_TIME,
        </if>
        <if test="_databaseId == 'mssql'">
            <include refid="com.sql.dbo"/>getGmtDate(SCTM.REG_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateFormat}+' hh24:mi:ss')  AS RFA_DATE_TIME,
        </if>

        <include refid="com.sql.dbo"/>GETUSERNAME(SCTM.GATE_CD, SCTM.REG_USER_ID, #{ses.langCd}) AS REG_USER_ID,

        <if test="_databaseId == 'oracle'">
            (SELECT COUNT(*)
            FROM STOCSCTP SCTP
            WHERE SCTP.GATE_CD = SCTM.GATE_CD
            AND SCTP.APP_DOC_NUM = SCTM.APP_DOC_NUM
            AND SCTP.APP_DOC_CNT = SCTM.APP_DOC_CNT
            AND SCTP.DEL_FLAG = '0') AS VIEW_CNT,
        </if>
        <if test="_databaseId == 'mssql'">
            (SELECT CAST(COUNT(*) AS VARCHAR)
            FROM STOCSCTP SCTP
            WHERE SCTP.GATE_CD = SCTM.GATE_CD
            AND SCTP.APP_DOC_NUM = SCTM.APP_DOC_NUM
            AND SCTP.APP_DOC_CNT = SCTM.APP_DOC_CNT
            AND SCTP.DEL_FLAG = '0') AS VIEW_CNT,
        </if>

        SCTM.GATE_CD,
        <if test="_databaseId == 'oracle'">
            TO_CHAR(SCTM.REG_DATE, <include refid="com.sql.dateFormat"/>) AS REG_DATE
        </if>
        <if test="_databaseId == 'mssql'">
            <include refid="com.sql.toDateChar"/>(SCTM.REG_DATE, 'yyyyMMdd') AS REG_DATE
        </if>
        FROM STOCSCTM SCTM INNER JOIN STOCSCTP SCTP
        ON (SCTM.GATE_CD = SCTP.GATE_CD
        AND SCTM.APP_DOC_NUM = SCTP.APP_DOC_NUM
        AND SCTM.APP_DOC_CNT = SCTP.APP_DOC_CNT)
        WHERE SCTM.GATE_CD = #{ses.gateCd}
        AND SCTM.DEL_FLAG = '0'
        AND SCTP.DEL_FLAG = '0'
        AND (( SCTP.SIGN_USER_ID = #{ses.userId} AND SCTM.NEXT_SIGN_USER_ID = #{ses.userId} ) OR ( SCTM.REG_USER_ID = #{ses.userId} ) )

        <if test="regDateFrom != '' and regDateFrom != null and regDateTo != '' and regDateTo != null">
          AND SCTM.REG_DATE BETWEEN <include refid="com.sql.toDate"/>#{regDateFrom}<include refid="com.sql.dateFrom"/> AND <include refid="com.sql.toDate"/>#{regDateTo}<include refid="com.sql.dateTo"/>
        </if>

        <if test="SIGN_STATUS != '' and SIGN_STATUS != null">
            AND SCTM.SIGN_STATUS = #{SIGN_STATUS}
        </if>

        <if test="USER_NM != '' and USER_NM != null and st_USER_NM != ''">
            AND <include refid="com.sql.dbo"/>GETUSERNAME(SCTM.GATE_CD, SCTM.REG_USER_ID, #{ses.langCd}) <include refid="com.sql.likeL"/> #{USER_NM} <include refid="com.sql.likeR"/>
        </if>

        <if test="DOCUMENT_NM != '' and DOCUMENT_NM != null ">
            AND SUBJECT <include refid="com.sql.likeL"/> #{SUBJECT} <include refid="com.sql.likeR"/>
        </if>

        ORDER BY RFA_DATE_TIME DESC
    </select>

	<select id="getSendReceiveBoxListA" parameterType="hashmap" resultType="hashMap">
        SELECT DISTINCT
        	   SCTM.APP_DOC_NUM,
               SCTM.APP_DOC_CNT,
               SCTM.SUBJECT,
               SCTM.SIGN_STATUS,
               SCTM.DOC_TYPE,
               <include refid="com.sql.dbo"/>GETUSERNAME(SCTM.GATE_CD,SCTM.REG_USER_ID,#{ses.langCd}) REG_USER_ID,
               SCTM.GATE_CD,
               <if test="_databaseId == 'oracle'">
                    <include refid="com.sql.dbo"/>getGmtDate(SCTM.REG_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateFormat} <include refid="com.sql.stringMerge"/> ' hh24:mi:ss')  AS RFA_DATE_TIME,
                    TO_CHAR(SCTM.REG_DATE, <include refid="com.sql.dateFormat"/>) AS REG_DATE
			   </if>
			   <if test="_databaseId == 'mssql'">
                    <include refid="com.sql.dbo"/>getGmtDate(SCTM.REG_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateFormat}+' hh24:mi:ss')  AS RFA_DATE_TIME,
                    <include refid="com.sql.toDateChar"/>(SCTM.REG_DATE, 'yyyyMMdd') AS REG_DATE
			   </if>

          FROM STOCSCTM SCTM
         WHERE SCTM.GATE_CD = #{ses.gateCd}
           AND SCTM.DEL_FLAG = '0'

           <if test="regDateFrom != '' and regDateFrom != null and regDateTo != '' and regDateTo != null">
             AND SCTM.REG_DATE BETWEEN <include refid="com.sql.toDate"/>#{regDateFrom}<include refid="com.sql.dateFrom"/> AND <include refid="com.sql.toDate"/>#{regDateTo}<include refid="com.sql.dateTo"/>
           </if>
           <if test="SIGN_STATUS != '' and SIGN_STATUS != null">
             AND SCTM.SIGN_STATUS = #{SIGN_STATUS}
           </if>
           <if test="USER_NM != '' and USER_NM != null and st_USER_NM != ''">
               AND <include refid="com.sql.dbo"/>GETUSERNAME(SCTM.GATE_CD, SCTM.REG_USER_ID, #{ses.langCd}) <include refid="com.sql.likeL"/> #{USER_NM} <include refid="com.sql.likeR"/>
           </if>
           <if test="DOCUMENT_NM != '' and DOCUMENT_NM != null ">
               AND SUBJECT <include refid="com.sql.likeL"/> #{SUBJECT} <include refid="com.sql.likeR"/>
           </if>

            ORDER BY RFA_DATE_TIME DESC
   </select>

    <select id="getPcSmartDeviceNewRequest" parameterType="hashmap" resultType="hashmap">
    SELECT Z.*
      FROM (
        -- 팀장 결재
        SELECT 'E' AS SIGN_REQ_TYPE,
               '1' AS SIGN_PATH_SQ,
                USER_ID AS SIGN_USER_ID,
                USER_NM AS SIGN_USER_NM,
               DUTY_NM||'('||POSITION_NM||')' AS POSITION_NM,
               DEPT_NM
          FROM STOCUSER
         WHERE GATE_CD = #{ses.gateCd}
           AND USER_ID = GETLEADERUSERID(#{ses.gateCd}, #{ses.deptCd})
           AND USE_FLAG = '1'
           AND DEL_FLAG = '0'

        UNION ALL

        -- 백승진 담당 합의
        SELECT 'A',
               '2',
                USER_ID AS SIGN_USER_ID,
                USER_NM AS SIGN_USER_NM,
               DUTY_NM||'('||POSITION_NM||')' AS POSITION_NM,
               DEPT_NM
          FROM STOCUSER
         WHERE GATE_CD = #{ses.gateCd}
           AND USER_ID = '170132'
           AND USE_FLAG = '1'
           AND DEL_FLAG = '0'

        UNION ALL

        -- PC지원실 담당자, 구매팀 전원 참조
        SELECT 'CC',
               '3',
                USER_ID AS SIGN_USER_ID,
                USER_NM AS SIGN_USER_NM,
               DUTY_NM||'('||POSITION_NM||')' AS POSITION_NM,
               DEPT_NM
          FROM STOCUSER
         WHERE GATE_CD = #{ses.gateCd}
           AND USER_ID IN (SELECT CTRL_USER_ID FROM STOCBACP WHERE GATE_CD = #{ses.gateCd} AND BUYER_CD = #{ses.companyCd} AND CTRL_CD IN ('N100', 'PC01') AND DEL_FLAG = '0' AND USE_FLAG = '1')
           AND USE_FLAG = '1'
           AND DEL_FLAG = '0'
    ) Z
    ORDER BY Z.SIGN_PATH_SQ, Z.DEPT_NM, Z.SIGN_USER_NM

    </select>

    <select id="getPcSmartDeviceChangeRequest" parameterType="hashmap" resultType="hashmap">
    SELECT Z.* FROM (
        -- 팀장 결재
        SELECT 'E' AS SIGN_REQ_TYPE,
               '1' AS SIGN_PATH_SQ,
                USER_ID AS SIGN_USER_ID,
                USER_NM AS SIGN_USER_NM,
            DUTY_NM||'('||POSITION_NM||')' AS POSITION_NM,
            DEPT_NM
        FROM STOCUSER
        WHERE GATE_CD = #{ses.gateCd}
              AND USER_ID = GETLEADERUSERID(#{ses.gateCd}, #{ses.deptCd})
              AND USE_FLAG = '1'
              AND DEL_FLAG = '0'

        UNION ALL

        -- 사업지원 합의
        SELECT 'A',
               '2',
               USER_ID AS SIGN_USER_ID,
               USER_NM AS SIGN_USER_NM,
               DUTY_NM || '(' || POSITION_NM || ')' AS POSITION_NM,
               DEPT_NM
          FROM STOCUSER
         WHERE GATE_CD = #{ses.gateCd}
           AND USER_ID = (  SELECT CODE FROM STOCCODD
                             WHERE GATE_CD = #{ses.gateCd}
                               AND CODE_TYPE = 'SC0215'
                               AND LANG_CD = #{ses.langCd}
                               AND USE_FLAG = '1'
                               AND DEL_FLAG = '0'
                               AND TEXT1 = (SELECT PARENT_DEPT_CD FROM STOCOGDP
                                             WHERE GATE_CD = #{ses.gateCd}
                                               AND BUYER_CD = #{ses.companyCd}
                                               AND DEPT_CD = #{ses.deptCd}
                                               AND DEL_FLAG = '0'))
           AND USE_FLAG = '1'
           AND DEL_FLAG = '0'

        UNION ALL

        -- 백승진 담당 합의
        SELECT 'A',
               '3',
               USER_ID AS SIGN_USER_ID,
               USER_NM AS SIGN_USER_NM,
               DUTY_NM || '(' || POSITION_NM || ')' AS POSITION_NM,
               DEPT_NM
          FROM STOCUSER
         WHERE GATE_CD = #{ses.gateCd}
           AND USER_ID = '170132'
           AND USE_FLAG = '1'
           AND DEL_FLAG = '0'

        UNION ALL

        SELECT 'CC',
               '4',
               USER_ID AS SIGN_USER_ID,
               USER_NM AS SIGN_USER_NM,
               DUTY_NM || '(' || POSITION_NM || ')' AS POSITION_NM,
               DEPT_NM
        FROM STOCUSER
        WHERE GATE_CD = #{ses.gateCd}
          AND USER_ID IN (SELECT CODE FROM STOCCODD
                           WHERE GATE_CD = #{ses.gateCd}
                             AND CODE_TYPE = 'SC0216'
                             AND LANG_CD = #{ses.langCd}
                             AND USE_FLAG = '1'
        )
          AND USE_FLAG = '1'
          AND DEL_FLAG = '0'

        UNION ALL

        -- PC지원실 담당자
        SELECT 'CC',
            '5',
            USER_ID AS SIGN_USER_ID,
            USER_NM AS SIGN_USER_NM,
            DUTY_NM || '(' || POSITION_NM || ')' AS POSITION_NM,
            DEPT_NM
         FROM STOCUSER
        WHERE GATE_CD = #{ses.gateCd}
          AND USER_ID IN (SELECT CTRL_USER_ID FROM STOCBACP WHERE GATE_CD = #{ses.gateCd} AND BUYER_CD = #{ses.companyCd} AND CTRL_CD IN ('PC01') AND DEL_FLAG = '0' AND USE_FLAG = '1')
          AND USE_FLAG = '1'
          AND DEL_FLAG = '0'
      ) Z
     ORDER BY Z.SIGN_PATH_SQ, Z.DEPT_NM, Z.SIGN_USER_NM

    </select>

</mapper>