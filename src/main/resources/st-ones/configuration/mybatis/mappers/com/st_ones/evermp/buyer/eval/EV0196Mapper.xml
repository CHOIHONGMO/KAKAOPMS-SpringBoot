<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.st_ones.evermp.buyer.eval.EV0196Mapper">

<!--    SRM_196 -->
    <select id="doSearchType" parameterType="hashMap" resultType="hashMap">
		SELECT EVIM.EV_ITEM_TYPE_CD
			, <include refid="com.sql.dbo"/>GETCODENAME(#{ses.gateCd},CASE EVIM.EV_ITEM_KIND_CD WHEN 'E' THEN 'M114' WHEN 'S' THEN 'M113' ELSE 'M112' END,EVIM.EV_ITEM_TYPE_CD,#{ses.langCd}) AS EV_ITEM_TYPE_NM
			, COUNT(EVIM.EV_ITEM_NUM) AS EV_ITEM_CNT
		FROM STOCEVTM EVTM
		INNER JOIN STOCEVTD EVTD
				ON EVTM.EV_TPL_NUM 	= EVTD.EV_TPL_NUM
			   AND EVTM.GATE_CD 		= EVTD.GATE_CD
		INNER JOIN STOCEVIM EVIM
				ON EVTD.EV_ITEM_NUM 	= EVIM.EV_ITEM_NUM
			   AND EVTD.GATE_CD 			= EVIM.GATE_CD
		INNER JOIN STOCEVVM MASTER
				ON MASTER.SCRE_EV_TPL_NUM = EVTM.EV_TPL_NUM
			  AND MASTER.GATE_CD 					= EVTM.GATE_CD
		WHERE MASTER.GATE_CD 					=  #{ses.gateCd}
		AND MASTER.EV_NUM 					= #{EV_NUM}
		AND EVTM.GATE_CD 					= #{ses.gateCd}
		AND EVTM.DEL_FLAG 					= '0'
		AND MASTER.DEL_FLAG 				= '0'
		AND EVTD.DEL_FLAG 						= '0'
		GROUP BY EVIM.EV_ITEM_TYPE_CD, EVIM.EV_ITEM_KIND_CD
  		ORDER BY EVIM.EV_ITEM_TYPE_CD
    </select>

    <select id="doSearchSubject" parameterType="hashMap" resultType="hashMap">
		SELECT EVIM.EV_ITEM_TYPE_CD
			, EVIM.EV_ITEM_SUBJECT
			, EVIM.EV_ITEM_CONTENTS
			, EVTD.WEIGHT
			, CASE WHEN EVIM.EV_ITEM_NUM = 'EVI202011040031' THEN <include refid="com.sql.dbo"/>GETCODENAME(EVET.GATE_CD, 'M219', REPLACE(CONVERT(VARCHAR, EVET.RESULT_VALUE), '.000', ''), #{ses.langCd})
				   WHEN EVIM.EV_ITEM_NUM = 'EVI202011040033' THEN CONVERT(VARCHAR, ROUND(EVET.RESULT_VALUE, 2))
				   WHEN EVIM.EV_ITEM_NUM = 'EVI202011040036' THEN ( SELECT EVID.EV_ID_CONTENTS
																	FROM STOCEVID EVID
																	WHERE EVID.GATE_CD = EVIM.GATE_CD
																	AND EVID.EV_ITEM_NUM = EVIM.EV_ITEM_NUM
																	AND EVID.DEL_FLAG = '0'
																	AND EVID.EV_ID_SCORE = (   SELECT CONVERT(VARCHAR, MIN(S.EV_ID_SCORE))
																							FROM STOCEVID S
																							WHERE S.GATE_CD = EVIM.GATE_CD
																							AND S.EV_ITEM_NUM = EVIM.EV_ITEM_NUM
																							AND S.DEL_FLAG = '0'
																							AND S.EV_ID_SCORE >= (  SELECT AVG(EVUR.EV_ID_SCORE)
																													FROM STOCEVUR EVUR
																													WHERE EVUR.GATE_CD = EVIM.GATE_CD
																													AND EVUR.EV_NUM = MASTER.EV_NUM
																													AND EVUR.EV_TPL_NUM = EVTM.EV_TPL_NUM
																													AND EVUR.EV_ITEM_NUM = EVIM.EV_ITEM_NUM
																													AND EVUR.DEL_FLAG = '0')
																						)
																)
				   WHEN EVIM.EV_ITEM_NUM = 'EVI202011040034' THEN ( SELECT EVID.EV_ID_CONTENTS
																	FROM STOCEVID EVID
																	WHERE EVID.GATE_CD = EVIM.GATE_CD
																	AND EVID.EV_ITEM_NUM = EVIM.EV_ITEM_NUM
																	AND EVID.DEL_FLAG = '0'
																	AND EVID.EV_ID_SCORE = (   SELECT CONVERT(VARCHAR, MIN(S.EV_ID_SCORE))
																							FROM STOCEVID S
																							WHERE S.GATE_CD = EVIM.GATE_CD
																							AND S.EV_ITEM_NUM = EVIM.EV_ITEM_NUM
																							AND S.DEL_FLAG = '0'
																							AND S.EV_ID_SCORE >= (  SELECT AVG(EVUR.EV_ID_SCORE)
																													FROM STOCEVUR EVUR
																													WHERE EVUR.GATE_CD = EVIM.GATE_CD
																													AND EVUR.EV_NUM = MASTER.EV_NUM
																													AND EVUR.EV_TPL_NUM = EVTM.EV_TPL_NUM
																													AND EVUR.EV_ITEM_NUM = EVIM.EV_ITEM_NUM
																													AND EVUR.DEL_FLAG = '0')
																						)
																)
				   WHEN EVIM.EV_ITEM_NUM = 'EVI202011040035' THEN ( SELECT EVID.EV_ID_CONTENTS
																	FROM STOCEVID EVID
																	WHERE EVID.GATE_CD = EVIM.GATE_CD
																	AND EVID.EV_ITEM_NUM = EVIM.EV_ITEM_NUM
																	AND EVID.DEL_FLAG = '0'
																	AND EVID.EV_ID_SCORE = (   SELECT CONVERT(VARCHAR, MIN(S.EV_ID_SCORE))
																							FROM STOCEVID S
																							WHERE S.GATE_CD = EVIM.GATE_CD
																							AND S.EV_ITEM_NUM = EVIM.EV_ITEM_NUM
																							AND S.DEL_FLAG = '0'
																							AND S.EV_ID_SCORE >= (  SELECT AVG(EVUR.EV_ID_SCORE)
																													FROM STOCEVUR EVUR
																													WHERE EVUR.GATE_CD = EVIM.GATE_CD
																													AND EVUR.EV_NUM = MASTER.EV_NUM
																													AND EVUR.EV_TPL_NUM = EVTM.EV_TPL_NUM
																													AND EVUR.EV_ITEM_NUM = EVIM.EV_ITEM_NUM
																													AND EVUR.DEL_FLAG = '0')
																						)
																)
				   ELSE REPLACE(CONVERT(VARCHAR, EVET.RESULT_VALUE), '.000', '') END AS RESULT_VALUE
			, CASE WHEN EVIM.EV_ITEM_METHOD_CD = 'QTY' THEN EVET.EV_SCORE
            	   ELSE (   SELECT AVG(EVUR.EV_ID_SCORE)
							FROM STOCEVUR EVUR
							WHERE EVUR.GATE_CD = EVIM.GATE_CD
							AND EVUR.EV_NUM = MASTER.EV_NUM
							AND EVUR.EV_TPL_NUM = EVTM.EV_TPL_NUM
							AND EVUR.EV_ITEM_NUM = EVIM.EV_ITEM_NUM
							AND EVUR.DEL_FLAG = '0'
						) END AS EV_SCORE
			<if test="_databaseId == 'mssql'">
			, ( SELECT STUFF((  SELECT ',' + EVID.EV_ID_CONTENTS + ':' + REPLACE(CONVERT(VARCHAR, EVID.EV_ID_SCORE), '.00', '')
								FROM STOCEVID EVID
								WHERE EVID.GATE_CD = EVIM.GATE_CD
								AND EVID.DEL_FLAG = '0'
								AND EVID.EV_ITEM_NUM = EVIM.EV_ITEM_NUM
								ORDER BY EVID.EV_ID_ORDER
								FOR XML PATH('')), 1, 0, ''))  AS EV_ITEM_CONTENTS_ADD
			</if>
			<if test="_databaseId == 'oracle'">
			, ( SELECT (  SELECT LISTAGG(EVID.EV_ID_CONTENTS || ':' || REPLACE(TO_CHAR(EVID.EV_ID_SCORE), '.00', ''), ',')
								FROM STOCEVID EVID
								WHERE EVID.GATE_CD = EVIM.GATE_CD
								AND EVID.DEL_FLAG = '0'
								AND EVID.EV_ITEM_NUM = EVIM.EV_ITEM_NUM
								ORDER BY EVID.EV_ID_ORDER
								))  AS EV_ITEM_CONTENTS_ADD
			</if>
			, ( SELECT MAX(EVID.EV_ID_SCORE)
				FROM STOCEVID EVID
				WHERE EVID.GATE_CD = EVIM.GATE_CD
				AND EVID.DEL_FLAG = '0'
				AND EVID.EV_ITEM_NUM = EVIM.EV_ITEM_NUM) AS EV_ID_SCORE
			, ( SELECT REPLACE(CONVERT(VARCHAR, VNGL.TECH_EXP_CNT), '.00', '') + ',' + REPLACE(CONVERT(VARCHAR, VNGL.TECH_ADV_CNT), '.00', '') + ',' + REPLACE(CONVERT(VARCHAR, VNGL.TECH_INT_CNT), '.00', '')  + ',' + REPLACE(CONVERT(VARCHAR, VNGL.TECH_BEG_CNT), '.00', '')
				FROM STOCVNGL VNGL
				WHERE VNGL.GATE_CD = EVET.GATE_CD
				AND VNGL.DEL_FLAG = '0'
				AND VNGL.VENDOR_CD = EVET.VENDOR_CD)  AS RESULT_VALUE_ADD
			<if test="_databaseId == 'mssql'">
			, ( SELECT STUFF((  SELECT '@,@' + EVVU.RMK
								FROM STOCEVVU EVVU
								WHERE EVVU.GATE_CD = EVET.GATE_CD
								AND EVVU.DEL_FLAG = '0'
								AND EVVU.EV_NUM = MASTER.EV_NUM
								FOR XML PATH('')), 1, 0, ''))  AS RMK
			</if>
			<if test="_databaseId == 'oracle'">
			, (SELECT LISTAGG(EVVU.RMK, '@,@')
								FROM STOCEVVU EVVU
								WHERE EVVU.GATE_CD = EVET.GATE_CD
								AND EVVU.DEL_FLAG = '0'
								AND EVVU.EV_NUM = MASTER.EV_NUM
								)  AS RMK
			</if>
		FROM STOCEVTM EVTM
		INNER JOIN STOCEVTD EVTD
			ON (EVTM.EV_TPL_NUM = EVTD.EV_TPL_NUM
			AND EVTM.GATE_CD = EVTD.GATE_CD
			AND EVTD.DEL_FLAG = '0')
		INNER JOIN STOCEVIM EVIM
			ON (EVTD.EV_ITEM_NUM = EVIM.EV_ITEM_NUM
			AND EVTD.GATE_CD = EVIM.GATE_CD)
		INNER JOIN STOCEVVM MASTER
			ON (MASTER.SCRE_EV_TPL_NUM = EVTM.EV_TPL_NUM
			AND MASTER.GATE_CD = EVTM.GATE_CD
			AND MASTER.DEL_FLAG = '0'
			AND MASTER.EV_NUM = #{EV_NUM})
		LEFT JOIN STOCEVET EVET
            ON (EVET.GATE_CD = EVIM.GATE_CD
            AND EVET.EV_NUM = MASTER.EV_NUM
            AND EVET.EV_TPL_NUM = EVTM.EV_TPL_NUM
            AND EVET.EV_ITEM_NUM = EVIM.EV_ITEM_NUM
            AND EVET.DEL_FLAG = '0')
		WHERE EVTM.GATE_CD = #{ses.gateCd}
		AND EVTM.DEL_FLAG = '0'
		ORDER BY EVIM.EV_ITEM_TYPE_CD, EVTD.SORT_SQ
    </select>

	<select id="doSearch" parameterType="hashMap" resultType="hashMap">
		SELECT EVTM.GATE_CD
		    , EVTM.EV_TPL_NUM
		    , EVTM.EV_TPL_TYPE_CD
		    , EVTM.EV_TPL_SUBJECT
		    , EVIM.EV_ITEM_NUM
		    , EVIM.EV_ITEM_TYPE_CD
		    , <include refid="com.sql.dbo"/>GETCODENAME(#{ses.gateCd},CASE EVIM.EV_ITEM_KIND_CD WHEN 'E' THEN 'M114' WHEN 'S' THEN 'M113' ELSE 'M112' END,EVIM.EV_ITEM_TYPE_CD,#{ses.langCd}) AS EV_ITEM_TYPE_NM
		    , EVIM.EV_ITEM_SUBJECT
		    , EVIM.EV_ITEM_CONTENTS
		    , EVIM.EV_ITEM_KIND_CD
		    , EVIM.EV_ITEM_METHOD_CD
		    , EVIM.SCALE_TYPE_CD
		    , EVIM.QTY_ITEM_CD
		    , EVTD.WEIGHT
		    , EVID.EV_ID_SQ
		    , EVID.EV_ID_ORDER
		    , EVID.EV_ID_CONTENTS
		    , EVID.EV_ID_SCORE
		    , EVID.PASS_FAIL_CD
		    , EVID.EV_ID_METHOD
		    , EVID.FROM_VALUE
		    , EVID.FROM_CONDITION_CD
		    , EVID.TO_VALUE
		    , EVID.TO_CONDITION_CD
		    , CASE WHEN EVIM.EV_ITEM_METHOD_CD = 'QTY'THEN EVET.EV_ID_SQ ELSE EVUR.EV_ID_SQ END AS EV_ID_SQ2
		    , <include refid="com.sql.nvl"/>(EVUR.EV_ID_SCORE,0) AS EV_ID_SCORE2
		    , <include refid="com.sql.nvl"/>(EVUR.EV_REMARK,'') AS EV_REMARK
		FROM STOCEVTM EVTM
		INNER JOIN STOCEVTD EVTD
			ON (EVTM.EV_TPL_NUM = EVTD.EV_TPL_NUM
			AND EVTM.GATE_CD = EVTD.GATE_CD
			AND EVTD.DEL_FLAG = '0')
		INNER JOIN STOCEVIM EVIM
			ON (EVTD.EV_ITEM_NUM = EVIM.EV_ITEM_NUM
			AND EVTD.GATE_CD = EVIM.GATE_CD
			AND EVIM.DEL_FLAG = '0')
		INNER JOIN STOCEVID EVID
			ON (EVIM.EV_ITEM_NUM = EVID.EV_ITEM_NUM
			AND EVIM.GATE_CD = EVID.GATE_CD
			AND EVID.DEL_FLAG = '0')
		INNER JOIN STOCEVVM EVVM
			ON (EVVM.SITE_EV_TPL_NUM = EVTM.EV_TPL_NUM
			AND EVVM.GATE_CD = EVTM.GATE_CD
			AND EVVM.DEL_FLAG = '0')
		LEFT OUTER JOIN STOCEVUR EVUR
			ON (EVID.EV_ITEM_NUM = EVUR.EV_ITEM_NUM
			AND EVID.EV_ID_SQ = EVUR.EV_ID_SQ
			AND EVTM.EV_TPL_NUM = EVUR.EV_TPL_NUM
			AND EVID.GATE_CD = EVUR.GATE_CD
			AND EVVM.EV_NUM = EVUR.EV_NUM
			AND EVUR.EV_USER_ID = #{EV_USER_ID})
		LEFT JOIN STOCEVET EVET
            ON (EVET.GATE_CD = EVVM.GATE_CD
            AND EVET.EV_NUM = EVVM.EV_NUM
            AND EVET.VENDOR_CD = EVVM.VENDOR_CD
            AND EVET.EV_TPL_NUM = EVTM.EV_TPL_NUM
            AND EVET.EV_ITEM_NUM = EVIM.EV_ITEM_NUM
            AND EVET.DEL_FLAG = '0')
    	WHERE EVVM.GATE_CD 	= #{ses.gateCd}
		AND EVVM.EV_NUM 		= #{EV_NUM}
		AND EVTM.DEL_FLAG = '0'
		--AND EVTM.USE_FLAG = '1'
		ORDER BY EVTM.EV_TPL_NUM, EVIM.EV_ITEM_TYPE_CD, EVTD.EV_ITEM_NUM, EVID.EV_ID_ORDER

     </select>


    <select id="doSearchEvvu" parameterType="hashMap" resultType="hashMap">
    	SELECT EV_NUM
			, #{EV_TPL_NUM} AS EV_TPL_NUM
			, #{VENDOR_CD} AS VENDOR_CD
			, #{VENDOR_NM} AS VENDOR_NM
			, EV_USER_ID
			, <include refid="com.sql.dbo"/>GETUSERNAME(GATE_CD, EV_USER_ID, #{ses.langCd}) AS EV_USER_NM
			, EVAL_SCORE
			, PROGRESS_CD
			, ATT_FILE_NUM
			, RMK
    	FROM STOCEVVU
    	WHERE GATE_CD = #{ses.gateCd}
    	AND DEL_FLAG = '0'
    	AND EV_NUM = #{EV_NUM}
    	AND EV_USER_ID = #{EV_USER_ID}
    </select>

    <select id="doCheck" parameterType="hashMap" resultType="hashMap">
		SELECT CASE WHEN EVVM.COMPLETE_DATE = '' OR EVVM.COMPLETE_DATE IS NULL
			THEN '-'
			ELSE  <include refid="com.sql.toDateChar"/>(EVVM.COMPLETE_DATE,'YYYYMMDD')
			END AS COMPLETE_DATE
		    , <include refid="com.sql.nvl"/>(EVVU.PROGRESS_CD, '-') AS PROGRESS_CD
		    , EVVM.EV_NUM
		FROM STOCEVVM EVVM
		INNER JOIN STOCEVVU EVVU
			ON (EVVM.GATE_CD = EVVU.GATE_CD
			AND EVVM.EV_NUM = EVVU.EV_NUM
			AND EVVU.DEL_FLAG = '0'
			AND EVVU.EV_USER_ID = #{EV_USER_ID})
		WHERE EVVM.GATE_CD = #{ses.gateCd}
		AND EVVM.DEL_FLAG = '0'
		AND EVVM.EV_NUM = #{EV_NUM}
    </select>

    <update id="doUpdateEvur" parameterType="hashMap" >
		MERGE<include refid="com.sql.mergeInto"/>STOCEVUR TARGET
		USING (
		        SELECT #{ses.gateCd} 			AS GATE_CD
		                    ,#{EV_NUM} 				AS EV_NUM
		                    ,#{EV_USER_ID} 			AS EV_USER_ID
		                    ,#{EV_TPL_NUM} 		AS EV_TPL_NUM
		                    ,#{EV_ITEM_NUM} 		AS EV_ITEM_NUM
		                    ,#{EV_ID_SQ} 				AS EV_ID_SQ
		                    ,#{EV_ID_SCORE} 		AS EV_ID_SCORE
		                    ,#{EV_REMARK} 			AS EV_REMARK
		                    ,'0' 								AS DEL_FLAG
		                    ,<include refid="com.sql.sysdate"/> 	AS REG_DATE
		                    ,#{ses.userId} 			AS REG_USER_ID
		          <include refid="com.sql.dual"/>
		      ) SOURCE
		ON    (     TARGET.GATE_CD      		= SOURCE.GATE_CD
		        AND TARGET.EV_NUM       		= SOURCE.EV_NUM
		        AND TARGET.EV_USER_ID   		= SOURCE.EV_USER_ID
		        AND TARGET.EV_TPL_NUM   	= SOURCE.EV_TPL_NUM
		        AND TARGET.EV_ITEM_NUM  	= SOURCE.EV_ITEM_NUM )
		WHEN MATCHED THEN
		UPDATE SET
		       EV_ID_SQ     								= SOURCE.EV_ID_SQ
		      ,EV_ID_SCORE  							= SOURCE.EV_ID_SCORE
		      ,EV_REMARK  							= SOURCE.EV_REMARK
		      ,MOD_USER_ID  							= SOURCE.REG_USER_ID
		      ,MOD_DATE     							= SOURCE.REG_DATE
		WHEN NOT MATCHED THEN
		INSERT (GATE_CD, EV_NUM, EV_USER_ID, EV_TPL_NUM, EV_ITEM_NUM, EV_ID_SQ
		      , EV_ID_SCORE, EV_REMARK, DEL_FLAG, REG_DATE, REG_USER_ID, MOD_DATE, MOD_USER_ID)
		VALUES (SOURCE.GATE_CD, SOURCE.EV_NUM, SOURCE.EV_USER_ID, SOURCE.EV_TPL_NUM
		      , SOURCE.EV_ITEM_NUM, SOURCE.EV_ID_SQ, SOURCE.EV_ID_SCORE, SOURCE.EV_REMARK, SOURCE.DEL_FLAG
		      , SOURCE.REG_DATE, SOURCE.REG_USER_ID, SOURCE.REG_DATE, SOURCE.REG_USER_ID)
		<if test='_databaseId=="mssql"'>
			;
		</if>
    </update>

    <update id="doUpdateEvvu" parameterType="hashMap" >
		UPDATE STOCEVVU SET
			EVAL_SCORE = #{EVAL_SCORE}
			, ATT_FILE_NUM = #{ATT_FILE_NUM}
			, RMK = #{RMK}
			, MOD_DATE = <include refid="com.sql.sysdate"/>
			, MOD_USER_ID = #{ses.userId}
		WHERE GATE_CD = #{ses.gateCd}
		AND EV_NUM = #{EV_NUM}
		AND EV_USER_ID = #{EV_USER_ID}
    </update>

	<select id="srm196prt_searchEVVM" parameterType="hashMap" resultType="hashMap">
		SELECT EVVM.REQUEST_DATE AS REQUEST_DATE
			, EVVM.VENDOR_CD
			, <include refid="com.sql.dbo"/>GETVENDORNAME(EVVM.GATE_CD, EVVM.VENDOR_CD, #{ses.langCd}) AS VENDOR_NM
		FROM STOCEVVM EVVM
		WHERE EVVM.GATE_CD = #{ses.gateCd}
		AND EVVM.DEL_FLAG = '0'
		AND EVVM.EV_NUM = #{EV_NUM}
	</select>

</mapper>