<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.st_ones.evermp.buyer.eval.EV0250Mapper">


	<select id="getRegCombo" parameterType="hashmap" resultType="hashmap">
		SELECT  'Y'   AS value
		       ,'Yes' AS text
   <include refid="com.sql.dual"/>
		 UNION
		SELECT  'N'   AS value
		       ,'No'  AS text
   <include refid="com.sql.dual"/>
	</select>

	<select id="getEvUserCombo" parameterType="hashmap" resultType="hashmap">
		SELECT	 EVEU.EV_USER_ID AS value
			    ,<include refid="com.sql.dbo"/>GETUSERNAME(#{ses.gateCd}, EVEU.EV_USER_ID, #{ses.langCd}) AS text
		  FROM	 STOCEVEU EVEU
		 WHERE	 EVEU.GATE_CD  = #{ses.gateCd}
		   AND	 EVEU.EV_NUM   = #{EV_NUM_L}

		<if test="VENDOR_CD_L != '' and VENDOR_CD_L != null">
		   AND	EVEU.VENDOR_CD     = #{VENDOR_CD_L}
		</if>
		<if test="VENDOR_SQ_L != '' and VENDOR_SQ_L != null">
		   AND	EVEU.VENDOR_SQ     = #{VENDOR_SQ_L}
		</if>

		<!-- 평가자 -->
		<if test="RESULT_ENTER_CD == 'PERUSER' and EV_CTRL_USER_ID != ses.userId and EV_TYPE!='ESG'">
		   AND  EVEU.EV_USER_ID = #{ses.userId}
		</if>
		<!-- 대표평가자 -->
		<if test="RESULT_ENTER_CD == 'REPUSER'">
		   AND  EVEU.VENDOR_CD IN (SELECT VENDOR_CD FROM STOCEVEU WHERE GATE_CD  = EVEU.GATE_CD AND EV_NUM = EVEU.EV_NUM AND REP_FLAG = '1' AND DEL_FLAG = '0' AND EV_USER_ID = #{RESULT_ENTER_USER_ID})
		</if>
		   AND	 EVEU.DEL_FLAG = '0'
	  GROUP BY   EVEU.EV_USER_ID
	</select>

	<select id="doSearch" parameterType="hashmap" resultType="hashmap">
		SELECT DISTINCT
		 		(CASE WHEN ( SELECT COUNT(*)
		                      FROM STOCEVEE
		                     WHERE EV_NUM     = EVEU.EV_NUM
		                       AND VENDOR_CD  = EVEU.VENDOR_CD
		                       AND VENDOR_SQ  = EVEU.VENDOR_SQ
		                       AND EV_USER_ID = EVEU.EV_USER_ID
		                       AND DEL_FLAG   = '0') ='0'
		        THEN 'NO' ELSE 'YES' END) AS REG_STATUS
				,(SELECT EXEC_EV_TPL_NUM FROM STOCEVEM WHERE GATE_CD = EVEU.GATE_CD AND EV_NUM = EVEU.EV_NUM) AS EV_TPL_NUM
				,<include refid="com.sql.dbo"/>GETUSERNAME(#{ses.gateCd}, EVEU.EV_USER_ID, #{ses.langCd}) AS EV_USER
				,EVEU.EV_USER_ID
				,EVEU.EV_SCORE
				,<include refid="com.sql.toVarchar"/><include refid="com.sql.toNumber"/>(SELECT SUM(A.EV_ID_SCORE) FROM STOCEVEE A JOIN STOCEVIM B ON A.EV_ITEM_NUM = B.EV_ITEM_NUM
				 									  WHERE A.EV_NUM = EVEM.EV_NUM AND CHK_YN = '1' AND EV_USER_ID = EVEU.EV_USER_ID AND VENDOR_CD = EVEU.VENDOR_CD AND B.EV_ITEM_TYPE_CD = 'OP')))
		       		<include refid="com.sql.stringMerge"/>' / '<include refid="com.sql.stringMerge"/>
		       		<include refid="com.sql.toVarchar"/><include refid="com.sql.toNumber"/>(SELECT SUM(A.EV_ID_SCORE) FROM STOCEVEE A JOIN STOCEVIM B ON A.EV_ITEM_NUM = B.EV_ITEM_NUM
		       										    WHERE A.EV_NUM = EVEM.EV_NUM AND CHK_YN = '1' AND EV_USER_ID = EVEU.EV_USER_ID AND VENDOR_CD = EVEU.VENDOR_CD AND B.EV_ITEM_TYPE_CD = 'NP')))
		       		AS OPNP
				,EVEU.VENDOR_CD
				,<include refid="com.sql.dbo"/>getVendorName(#{ses.gateCd}, EVEU.VENDOR_CD, #{ses.langCd})  AS VENDOR_NM
				,EVEU.VENDOR_SQ
				,EVES.CONT_DESC
				,BQHD.QTA_NUM
				,BQHD.QTA_CNT
				,<include refid="com.sql.nvl"/>(EVEU.ESG_CHK_TYPE,'P') ESG_CHK_TYPE
		  FROM	 STOCEVEM EVEM
		  JOIN   STOCEVES EVES
		    ON (EVES.GATE_CD  = EVEM.GATE_CD
		   AND EVES.EV_NUM   = EVEM.EV_NUM
		<if test="VENDOR_CD_L != '' and VENDOR_CD_L != null">
		   AND	EVES.VENDOR_CD     = #{VENDOR_CD_L}
		</if>
		<if test="VENDOR_SQ_L != '' and VENDOR_SQ_L != null">
		   AND	EVES.VENDOR_SQ     = #{VENDOR_SQ_L}
		</if>
		   AND EVES.DEL_FLAG = '0')
		  JOIN  STOCEVEU EVEU
		    ON (EVEU.GATE_CD   = EVES.GATE_CD
		   AND EVEU.EV_NUM    = EVES.EV_NUM
		   AND EVEU.VENDOR_CD = EVES.VENDOR_CD
		   AND EVEU.VENDOR_SQ = EVES.VENDOR_SQ
		   AND EVEU.DEL_FLAG  = '0')

		    LEFT JOIN STOPBDVN BDVN ON BDVN.GATE_CD = EVEM.GATE_CD
	  			 				   AND BDVN.EV_NUM = EVEM.EV_NUM
	  						 	   AND BDVN.DEL_FLAG = '0'
	  						 	   AND BDVN.VENDOR_CD = EVEU.VENDOR_CD
			LEFT JOIN STOPBQHD BQHD ON BDVN.GATE_CD = BQHD.GATE_CD
							 	   AND BDVN.RFX_NUM = BQHD.RFX_NUM
								   AND BDVN.RFX_CNT  = BQHD.RFX_CNT
								   AND BDVN.VENDOR_CD = BQHD.VENDOR_CD
								   AND BQHD.QTA_CNT = '1'
								   AND BQHD.DEL_FLAG = '0'

		 WHERE 	 EVEM.GATE_CD    = #{ses.gateCd}
		   AND	 EVEM.EV_NUM     = #{EV_NUM_L}
		   AND	 EVEM.DEL_FLAG   = '0'
		<if test="REG_STATUS_L != '' and REG_STATUS_L != null">
		   AND  (CASE WHEN <include refid="com.sql.nvl"/>(EVEU.EV_SCORE, '0') ='0' THEN 'N' ELSE 'Y' END) = #{REG_STATUS_L}
		</if>
		<if test="VENDOR_NM_L != '' and VENDOR_NM_L != null">
			AND <include refid="com.sql.dbo"/>GETVENDORNAME(#{ses.gateCd}, EVEU.VENDOR_CD, #{ses.langCd}) <include refid="com.sql.likeL"/> #{VENDOR_NM_L} <include refid="com.sql.likeR"/>
		</if>
		<if test="EV_USER_NM_L != '' and EV_USER_NM_L != null">
			AND EVEU.EV_USER_ID = #{EV_USER_NM_L}
		</if>
		<!-- 평가자 -->
		<if test="RESULT_ENTER_CD == 'PERUSER' and EV_CTRL_USER_ID != ses.userId">
		   AND  EVEU.EV_USER_ID = #{ses.userId}
		</if>

		<!-- 대표평가자 -->
		<if test="RESULT_ENTER_CD == 'REPUSER'">
		   AND  EVEU.VENDOR_CD IN (SELECT VENDOR_CD FROM STOCEVEU WHERE GATE_CD  = EVEU.GATE_CD AND EV_NUM = EVEU.EV_NUM AND REP_FLAG = '1' AND DEL_FLAG = '0' AND EV_USER_ID = #{RESULT_ENTER_USER_ID})
		</if>
		   ORDER BY getVendorName('100', EVEU.VENDOR_CD, 'KO')



	</select>

	<select id="doSearchType" parameterType="hashmap" resultType="hashmap">
		    SELECT	IM.EV_ITEM_TYPE_CD
		           ,<include refid="com.sql.dbo"/>GETCODENAME(#{ses.gateCd},

		           CASE IM.EV_ITEM_KIND_CD WHEN 'E' THEN 'M114'
		                                   WHEN 'S' THEN 'M113'
			                               WHEN 'G' THEN 'P094'
		                                   ELSE 'P091' END

		           ,IM.EV_ITEM_TYPE_CD,#{ses.langCd}) AS EV_ITEM_TYPE_NM
		      FROM	STOCEVTM TM
		INNER JOIN 	STOCEVTD TD
		        ON	TM.EV_TPL_NUM 	= TD.EV_TPL_NUM
			   AND	TM.GATE_CD 		= TD.GATE_CD
		INNER JOIN	STOCEVIM IM
		        ON	TD.EV_ITEM_NUM 	= IM.EV_ITEM_NUM
			   AND	TD.GATE_CD		= IM.GATE_CD
		INNER JOIN	STOCEVEM EM
		        ON	EM.EXEC_EV_TPL_NUM = TM.EV_TPL_NUM
		       AND	EM.GATE_CD 		= TM.GATE_CD
		     WHERE	EM.GATE_CD 		= #{ses.gateCd}
		       AND	EM.EV_NUM 		= #{EV_NUM_L}
		       AND	TM.GATE_CD 		= #{ses.gateCd}
		       AND	TM.DEL_FLAG 	= '0'
		       AND	EM.DEL_FLAG 	= '0'
		       AND	TD.DEL_FLAG 	= '0'
		       AND	IM.DEL_FLAG 	= '0'
		       AND IM.EV_ITEM_METHOD_CD = 'QUA'
		  GROUP BY 	IM.EV_ITEM_TYPE_CD, EV_ITEM_KIND_CD
		  ORDER BY 	(SELECT SORT_SQ FROM STOCCODD
		  WHERE GATE_CD=#{ses.gateCd}
		  AND CODE_TYPE =
									   CASE IM.EV_ITEM_KIND_CD WHEN 'E' THEN 'M114'
									   WHEN 'S' THEN 'M113'
									   WHEN 'G' THEN 'P094'
									   ELSE 'P091' END


		  AND CODE = IM.EV_ITEM_TYPE_CD
		  )
	</select>

	<select id="doSearchSubject" parameterType="hashmap" resultType="hashmap">
		SELECT

				ROW_NUMBER() OVER(PARTITION BY IM.EV_ITEM_TYPE_CD ORDER BY
			                      --TD.EV_ITEM_NUM,
			                      TD.SORT_SQ
				) AS ROWNUMX

			   ,IM.EV_ITEM_TYPE_CD
			   ,IM.EV_ITEM_SUBJECT

				<if test='_databaseId=="mssql"'>
				   ,REPLACE(REPLACE(REPLACE(IM.EV_ITEM_CONTENTS, CHAR(13), <![CDATA['</br>'), char(10), '</br>')]]>, 'XXXXXXXXXXX' ,<![CDATA['</br>]]>') EV_ITEM_CONTENTS
				</if>
				<if test='_databaseId=="oracle"'>
				   ,REPLACE(REPLACE(REPLACE(IM.EV_ITEM_CONTENTS, CHR(13), <![CDATA['</br>'), CHR(10), '</br>')]]>, 'XXXXXXXXXXX' ,<![CDATA['</br>]]>') EV_ITEM_CONTENTS
				</if>
			   ,TD.WEIGHT
		  FROM	STOCEVTM TM
	INNER JOIN	STOCEVTD TD
		    ON	TM.EV_TPL_NUM 	= TD.EV_TPL_NUM
		   AND	TM.GATE_CD 		= TD.GATE_CD
	INNER JOIN	STOCEVIM IM
		    ON	TD.EV_ITEM_NUM	= IM.EV_ITEM_NUM
		   AND	TD.GATE_CD 		= IM.GATE_CD
	INNER JOIN	STOCEVEM EM
		    ON	EM.EXEC_EV_TPL_NUM = TM.EV_TPL_NUM
		   AND	EM.GATE_CD 		= TM.GATE_CD
		 WHERE	EM.GATE_CD 		= #{ses.gateCd}
		   AND	EM.EV_NUM		= #{EV_NUM_L}
		   AND	TM.GATE_CD		= #{ses.gateCd}
		   AND	TM.DEL_FLAG		= '0'
		   AND	EM.DEL_FLAG		= '0'
		   AND	TD.DEL_FLAG		= '0'
		   AND	IM.DEL_FLAG		= '0'
		   AND IM.EV_ITEM_METHOD_CD = 'QUA'
	  ORDER BY	--TD.EV_ITEM_NUM,
	  TD.SORT_SQ
	</select>


	<select id="doSearchDetail" parameterType="hashmap" resultType="hashmap">
		SELECT

				TM.GATE_CD
		       ,TM.EV_TPL_NUM
		       ,TM.EV_TPL_TYPE_CD
		       ,TM.EV_TPL_SUBJECT
		       ,IM.EV_ITEM_NUM
		       ,IM.EV_ITEM_TYPE_CD
		       ,<include refid="com.sql.dbo"/>GETCODENAME(#{ses.gateCd},

		        CASE IM.EV_ITEM_KIND_CD WHEN 'E' THEN 'M114'
		                                WHEN 'S' THEN 'M113'
		                                WHEN 'G' THEN 'P094'
		                                ELSE 'M112' END

		        ,IM.EV_ITEM_TYPE_CD,#{ses.langCd}) AS EV_ITEM_TYPE_NM
		       ,IM.EV_ITEM_SUBJECT
		<if test='_databaseId=="mssql"'>
			   ,REPLACE(REPLACE(REPLACE(IM.EV_ITEM_CONTENTS, CHAR(13), <![CDATA['</br>'), char(10), '</br>')]]>, 'XXXXXXXXXXX' ,<![CDATA['</br>]]>') EV_ITEM_CONTENTS
		</if>
		<if test='_databaseId=="oracle"'>
			   ,REPLACE(REPLACE(REPLACE(IM.EV_ITEM_CONTENTS, CHR(13), <![CDATA['</br>'), CHR(10), '</br>')]]>, 'XXXXXXXXXXX' ,<![CDATA['</br>]]>') EV_ITEM_CONTENTS
		</if>
		       ,IM.EV_ITEM_KIND_CD
		       ,IM.EV_ITEM_METHOD_CD
		       ,IM.SCALE_TYPE_CD
		       ,IM.QTY_ITEM_CD
		       ,TD.WEIGHT
		       ,ID.EV_ID_SQ

			   ,(
			   		SELECT MAX(EV_ID_SQ) FROM STOCEVID
			   		WHERE GATE_CD = ID.GATE_CD
			   		AND EV_ITEM_NUM 	= ID.EV_ITEM_NUM
			   		AND DEL_FLAG = '0'
				) EV_ID_SQ_FINAL

		       ,ID.EV_ID_ORDER
		       ,ID.EV_ID_CONTENTS
		       ,ID.EV_ID_SCORE
		       ,ID.PASS_FAIL_CD
		       ,ID.EV_ID_METHOD
		       ,ID.FROM_VALUE
		       ,ID.FROM_CONDITION_CD
		       ,ID.TO_VALUE
		       ,ID.TO_CONDITION_CD
		       ,EE.EV_ID_SQ AS EV_ID_SQ2
		       ,<include refid="com.sql.nvl"/>(EE.EV_ID_SCORE,0) AS EV_ID_SCORE2


			   ,REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(<include refid="com.sql.nvl"/>(
				(SELECT <include refid="com.sql.mtop1"/> EV_REMARK FROM STOCEVEE KK
				   WHERE ID.EV_ITEM_NUM 	= KK.EV_ITEM_NUM
				   AND	ID.EV_ID_SQ 	= KK.EV_ID_SQ
				   AND	TM.EV_TPL_NUM 	= KK.EV_TPL_NUM
				   AND	ID.GATE_CD 		= KK.GATE_CD
				   AND	EM.EV_NUM 		= KK.EV_NUM
				   AND	KK.EV_USER_ID 	= #{EV_USER_ID}
				   AND	KK.VENDOR_CD	= #{VENDOR_CD}
				   AND	KK.VENDOR_SQ	= #{VENDOR_SQ}
				   <include refid="com.sql.otop1"/>
				)
		<if test='_databaseId=="mssql"'>
			   ,''), CHAR(13), '\r'), char(10), '\n'), 'XXXXXXXXXXX' ,<![CDATA['\r\n]]>'),CHAR(39),''),CHAR(34),'') EV_REMARK
		</if>
		<if test='_databaseId=="oracle"'>
			   ,''), CHR(13), '\r'), CHR(10), '\n'), 'XXXXXXXXXXX' ,<![CDATA['\r\n]]>'),CHR(39),''),CHR(34),'') EV_REMARK
		</if>
				,(SELECT <include refid="com.sql.mtop1"/> ATT_FILE_NUM FROM STOCEVEE KK
				   WHERE ID.EV_ITEM_NUM 	= KK.EV_ITEM_NUM
				   AND	ID.EV_ID_SQ 	= KK.EV_ID_SQ
				   AND	TM.EV_TPL_NUM 	= KK.EV_TPL_NUM
				   AND	ID.GATE_CD 		= KK.GATE_CD
				   AND	EM.EV_NUM 		= KK.EV_NUM
				   AND	KK.EV_USER_ID 	= #{EV_USER_ID}
				   AND	KK.VENDOR_CD	= #{VENDOR_CD}
				   AND	KK.VENDOR_SQ	= #{VENDOR_SQ}
				   <include refid="com.sql.otop1"/>
				) ATT_FILE_NUM


				,<include refid="com.sql.nvl"/>((SELECT <include refid="com.sql.mtop1"/> <include refid="com.sql.dbo"/>getFileCount(KK.GATE_CD,KK.ATT_FILE_NUM) FROM STOCEVEE KK
				   WHERE ID.EV_ITEM_NUM 	= KK.EV_ITEM_NUM
				   AND	ID.EV_ID_SQ 	= KK.EV_ID_SQ
				   AND	TM.EV_TPL_NUM 	= KK.EV_TPL_NUM
				   AND	ID.GATE_CD 		= KK.GATE_CD
				   AND	EM.EV_NUM 		= KK.EV_NUM
				   AND	KK.EV_USER_ID 	= #{EV_USER_ID}
				   AND	KK.VENDOR_CD	= #{VENDOR_CD}
				   AND	KK.VENDOR_SQ	= #{VENDOR_SQ}
				   <include refid="com.sql.otop1"/>
				),0) ATT_FILE_COU

		<if test='_databaseId=="mssql"'>
			   ,ROUND(CONVERT(NUMERIC(22,5),100) / (
			   		SELECT COUNT(*)
			   		FROM STOCEVTD A JOIN STOCEVIM B ON A.GATE_CD = B.GATE_CD
			   										AND A.EV_ITEM_NUM  = B.EV_ITEM_NUM
			   										AND A.DEL_FLAG = '0'
			   										AND B.DEL_FLAG = '0'
			   		WHERE A.GATE_CD = TM.GATE_CD
			   		AND A.EV_TPL_NUM 	= TM.EV_TPL_NUM
			   		AND A.DEL_FLAG = '0'
			   		AND B.EV_ITEM_TYPE_CD = IM.EV_ITEM_TYPE_CD
			   ),5) ESG_WEIGHT
		</if>
		<if test='_databaseId=="oracle"'>
			   ,<include refid="com.sql.nvl"/>(ROUND(100 /DECODE((
		   		SELECT COUNT(*)
		   		FROM STOCEVTD A JOIN STOCEVIM B ON A.GATE_CD = B.GATE_CD
		   										AND A.EV_ITEM_NUM  = B.EV_ITEM_NUM
		   										AND A.DEL_FLAG = '0'
		   										AND B.DEL_FLAG = '0'
		   		WHERE A.GATE_CD = TM.GATE_CD
		   		AND A.EV_TPL_NUM 	= TM.EV_TPL_NUM
		   		AND A.DEL_FLAG = '0'
		   		AND B.EV_ITEM_TYPE_CD = IM.EV_ITEM_TYPE_CD
			   ),0,NULL,(SELECT COUNT(*)
			   		FROM STOCEVTD A JOIN STOCEVIM B ON A.GATE_CD = B.GATE_CD
			   										AND A.EV_ITEM_NUM  = B.EV_ITEM_NUM
			   										AND A.DEL_FLAG = '0'
			   										AND B.DEL_FLAG = '0'
			   		WHERE A.GATE_CD = TM.GATE_CD
			   		AND A.EV_TPL_NUM 	= TM.EV_TPL_NUM
			   		AND A.DEL_FLAG = '0'
			   		AND B.EV_ITEM_TYPE_CD = IM.EV_ITEM_TYPE_CD)),5),0) ESG_WEIGHT

		</if>
		  FROM	STOCEVTM TM
	INNER JOIN	STOCEVTD TD
			ON	TM.EV_TPL_NUM	= TD.EV_TPL_NUM
		   AND	TM.GATE_CD		= TD.GATE_CD
	INNER JOIN	STOCEVIM IM
			ON	TD.EV_ITEM_NUM 	= IM.EV_ITEM_NUM
		   AND	TD.GATE_CD 		= TM.GATE_CD
	INNER JOIN	STOCEVID ID
			ON	IM.EV_ITEM_NUM 	= ID.EV_ITEM_NUM
		   AND	IM.GATE_CD 		= TD.GATE_CD
	INNER JOIN	STOCEVEM EM
			ON	EM.EXEC_EV_TPL_NUM = TM.EV_TPL_NUM
		   AND	EM.GATE_CD 		= TM.GATE_CD
    LEFT OUTER JOIN	STOCEVEE EE
			ON	ID.EV_ITEM_NUM 	= EE.EV_ITEM_NUM
		   AND	ID.EV_ID_SQ 	= EE.EV_ID_SQ
		   AND	TM.EV_TPL_NUM 	= EE.EV_TPL_NUM
		   AND	ID.GATE_CD 		= EE.GATE_CD
		   AND	EM.EV_NUM 		= EE.EV_NUM
		   AND	EE.EV_USER_ID 	= #{EV_USER_ID}
		   AND	EE.VENDOR_CD	= #{VENDOR_CD}
		   AND	EE.VENDOR_SQ	= #{VENDOR_SQ}
		   AND EE.CHK_YN = '1'
		 WHERE	EM.GATE_CD 		= #{ses.gateCd}
		   AND	EM.EV_NUM 		= #{EV_NUM_L}
		   AND	EM.DEL_FLAG 	= '0'
		   AND	TD.DEL_FLAG 	= '0'
		   AND	ID.DEL_FLAG 	= '0'
		   AND	IM.DEL_FLAG 	= '0'
		   AND IM.EV_ITEM_METHOD_CD = 'QUA'

	  ORDER BY TM.EV_TPL_NUM,
		  (SELECT SORT_SQ FROM STOCCODD
		  WHERE GATE_CD=#{ses.gateCd}
		  AND CODE_TYPE ='P094'
		  AND CODE = IM.EV_ITEM_TYPE_CD
		  )
	  , TD.EV_ITEM_NUM,TD.SORT_SQ, ID.EV_ID_SQ, ID.EV_ID_ORDER
	</select>


	<select id="doSearchEveu" parameterType="hashmap" resultType="hashmap">
		SELECT EVEU.EV_NUM AS EV_NUM_L
			, #{EV_TPL_NUM} AS EV_TPL_NUM
			, #{VENDOR_CD} AS VENDOR_CD
			, #{VENDOR_NM_R} AS VENDOR_NM_R
			, VENDOR_SQ
			, EV_USER_ID
			, <include refid="com.sql.dbo"/>GETUSERNAME(EVEU.GATE_CD, EV_USER_ID, #{ses.langCd}) AS EV_USER_NM_R
			, <include refid="com.sql.nvl"/>(EV_SCORE,'-1') AS EV_SCORE_R
			, EVEU.PROGRESS_CD
			, EVEU.ATT_FILE_NUM
			, RMK

			,(SELECT RMK FROM STOCEVEM WHERE GATE_CD =EVEU.GATE_CD AND EV_NUM=#{EV_NUM_L}) RMK2
			,(SELECT ATT_FILE_NUM FROM STOCEVEM WHERE GATE_CD =EVEU.GATE_CD AND EV_NUM=#{EV_NUM_L}) BUYER_ATT_FILE_NUM
		FROM STOCEVEU EVEU
		WHERE EVEU.GATE_CD = #{ses.gateCd}
		AND EVEU.DEL_FLAG = '0'
		AND EVEU.EV_NUM = #{EV_NUM_L}
		AND EV_USER_ID = #{EV_USER_ID}
		AND VENDOR_CD = #{VENDOR_CD}
		AND VENDOR_SQ = #{VENDOR_SQ}
	</select>

	<select id="doCheck" parameterType="hashmap" resultType="hashmap">
		SELECT MASTER.COMPLETE_DATE
			, MASTER.EV_CTRL_USER_ID
			, MASTER.RESULT_ENTER_CD
			, MASTER.EV_TYPE
			, MASTER.PURCHASE_TYPE
			, EVEU.EMPTY_SCORE_CNT
			, EVEU.REP_FLAG
			, EVEU.EV_USER_ID
			, MASTER.OVER_100_FLAG
			, MASTER.EV_NUM
		FROM STOCEVEM MASTER
		INNER JOIN (SELECT GATE_CD
						, EV_NUM
						, EV_USER_ID
						, SUM(CASE WHEN EV_SCORE IS NULL OR EV_SCORE = 0 THEN 1 ELSE 0 END) AS EMPTY_SCORE_CNT
						, REP_FLAG
        			FROM STOCEVEU
                 	WHERE DEL_FLAG='0'
				   	AND EV_USER_ID = #{EV_USER_ID}
              		GROUP BY GATE_CD, EV_NUM, EV_USER_ID, REP_FLAG ) EVEU
			ON MASTER.GATE_CD = EVEU.GATE_CD
			AND MASTER.EV_NUM = EVEU.EV_NUM
			AND MASTER.DEL_FLAG = '0'
			AND MASTER.EV_NUM = #{EV_NUM}
			AND MASTER.GATE_CD = #{ses.gateCd}
	</select>

	<select id="checkProgress" parameterType="hashmap" resultType="java.lang.String">
     	SELECT	CASE WHEN COUNT(*) > 0
     			THEN 'Y'
                ELSE 'N'
       			END AS CHK
 		 FROM 	STOCEVEU
 		WHERE 	EV_NUM 		= #{EV_NUM}
 		  AND 	EV_USER_ID 	= #{EV_USER_ID}
		  AND 	<include refid="com.sql.nvl"/>(PROGRESS_CD, '100') != '200'
		  AND 	DEL_FLAG	= '0'
		  AND 	GATE_CD 	= #{ses.gateCd}
     </select>

	<select id="doRepUserCheck"  parameterType="hashmap" resultType="java.lang.Integer">
     SELECT COUNT(*) AS CNT
		FROM STOCEVEU
	  WHERE EV_NUM     	=  #{EV_NUM}
		   AND REP_FLAG   	= '1'
		   AND DEL_FLAG   	= '0'
		   AND GATE_CD    	=  #{ses.gateCd}
		   AND EV_USER_ID 	=  #{CHK_USER}
     </select>

	<update id="doUpdateEveu" parameterType="hashmap">
		UPDATE STOCEVEU SET
			EV_SCORE = CASE WHEN (	SELECT OVER_100_FLAG
			  						FROM STOCEVEM
			  						WHERE GATE_CD = #{ses.gateCd}
			  						AND EV_NUM = #{EV_NUM}
			  						AND DEL_FLAG = '0') = '1'
			  			THEN
										(	SELECT ROUND (SUM(EV_ID_SCORE),2)
											FROM STOCEVEE EVEE
										 	WHERE EVEE.EV_NUM = #{EV_NUM}
										   	AND EVEE.VENDOR_CD = #{VENDOR_CD}
										   	AND EVEE.VENDOR_SQ = #{VENDOR_SQ}
										   	AND EVEE.EV_USER_ID = #{EV_USER_ID}
										   	AND EVEE.DEL_FLAG = '0'
										   	AND EVEE.CHK_YN = '1'
										)
		<if test='_databaseId=="mssql"'>
		                ELSE #{EV_SCORE} END
		</if>
		<if test='_databaseId=="oracle"'>
		                ELSE TO_NUMBER(#{EV_SCORE}) END
		</if>
			, ATT_FILE_NUM = #{ATT_FILE_NUM}
		   	, MOD_DATE = <include refid="com.sql.sysdate"/>
		   	, MOD_USER_ID = #{ses.userId}
		   	, RMK = #{RMK}
		   	, ESG_CHK_TYPE = #{ESG_CHK_TYPE}
		WHERE GATE_CD = #{ses.gateCd}
		AND EV_NUM = #{EV_NUM}
		AND VENDOR_CD = #{VENDOR_CD}
		AND VENDOR_SQ = #{VENDOR_SQ}
		AND EV_USER_ID = #{EV_USER_ID}
	</update>


	<update id="doUpdateEvee" parameterType="hashmap">
		MERGE<include refid="com.sql.mergeInto"/>	STOCEVEE TARGET
		USING (
		        SELECT 	#{ses.gateCd} AS GATE_CD
		        	, #{EV_NUM} AS EV_NUM
		            , #{VENDOR_CD} AS VENDOR_CD
		            , #{VENDOR_SQ} AS VENDOR_SQ
		            , #{EV_USER_ID} AS EV_USER_ID
		            , #{EV_TPL_NUM} AS EV_TPL_NUM
		            , #{EV_ITEM_NUM} AS EV_ITEM_NUM
		            , #{EV_ID_SQ} AS EV_ID_SQ
		            , #{EV_ID_SCORE} AS EV_ID_SCORE
		            , #{EV_REMARK} AS EV_REMARK
		            , '0' AS DEL_FLAG
		            , <include refid="com.sql.sysdate"/> AS REG_DATE
		            , #{ses.userId} AS REG_USER_ID
		            , #{CHK_YN} CHK_YN
		            , #{ATT_FILE_NUM_EE} ATT_FILE_NUM
		       <include refid="com.sql.dual"/>
		      ) SOURCE
			ON (TARGET.GATE_CD = SOURCE.GATE_CD
		    AND TARGET.EV_NUM = SOURCE.EV_NUM
		    AND	TARGET.VENDOR_CD = SOURCE.VENDOR_CD
		    AND	TARGET.VENDOR_SQ = SOURCE.VENDOR_SQ
		    AND TARGET.EV_USER_ID = SOURCE.EV_USER_ID
		    AND TARGET.EV_TPL_NUM = SOURCE.EV_TPL_NUM
		    AND TARGET.EV_ITEM_NUM = SOURCE.EV_ITEM_NUM
		    AND TARGET.EV_ID_SQ = SOURCE.EV_ID_SQ
		    )
		WHEN MATCHED THEN
		UPDATE SET
		       --EV_ID_SQ = SOURCE.EV_ID_SQ
		       EV_ID_SCORE = SOURCE.EV_ID_SCORE
		      ,EV_REMARK = SOURCE.EV_REMARK
		      ,CHK_YN = SOURCE.CHK_YN
		      ,ATT_FILE_NUM = SOURCE.ATT_FILE_NUM
		      ,MOD_USER_ID = SOURCE.REG_USER_ID
		      ,MOD_DATE = SOURCE.REG_DATE
		WHEN NOT MATCHED THEN
		INSERT (GATE_CD, EV_NUM, VENDOR_CD, VENDOR_SQ, EV_USER_ID, EV_TPL_NUM, EV_ITEM_NUM, EV_ID_SQ
		      , EV_ID_SCORE, EV_REMARK, DEL_FLAG, REG_DATE, REG_USER_ID, MOD_DATE, MOD_USER_ID
		      , CHK_YN , ATT_FILE_NUM
		      )
		VALUES (SOURCE.GATE_CD, SOURCE.EV_NUM, SOURCE.VENDOR_CD, SOURCE.VENDOR_SQ, SOURCE.EV_USER_ID, SOURCE.EV_TPL_NUM
		      , SOURCE.EV_ITEM_NUM, SOURCE.EV_ID_SQ, SOURCE.EV_ID_SCORE, SOURCE.EV_REMARK, SOURCE.DEL_FLAG
		      , SOURCE.REG_DATE, SOURCE.REG_USER_ID, SOURCE.REG_DATE, SOURCE.REG_USER_ID
		      , SOURCE.CHK_YN , SOURCE.ATT_FILE_NUM
		      )
		<if test='_databaseId=="mssql"'>
			;
		</if>
	</update>

	<update id="doDeleteEvee" parameterType="hashmap">
		DELETE STOCEVEE
		WHERE GATE_CD = #{ses.gateCd}
		AND EV_NUM = #{EV_NUM}
		AND VENDOR_CD = #{VENDOR_CD}
		AND VENDOR_SQ = #{VENDOR_SQ}
		AND EV_USER_ID = #{EV_USER_ID}
		AND EV_TPL_NUM = #{EV_TPL_NUM}
	</update>




	<update id="doUpdateEves" parameterType="hashmap">
		UPDATE STOCEVES SET ESG_CHK_TYPE = #{ESG_CHK_TYPE}
		WHERE GATE_CD = #{ses.gateCd}
		AND EV_NUM = #{EV_NUM}
		AND VENDOR_CD = #{VENDOR_CD}
		AND VENDOR_SQ = #{VENDOR_SQ}
	</update>





</mapper>















