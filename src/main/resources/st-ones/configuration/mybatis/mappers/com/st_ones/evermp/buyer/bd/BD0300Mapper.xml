<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.st_ones.evermp.buyer.bd.BD0300Mapper">


    <!--  BD0310 -->

    <select id="doSetExcelImportItemRfx" resultType="hashmap">
		SELECT MTGL.ITEM_CD
		     , MTGL.ITEM_DESC
			 , MTGL.ITEM_SPEC
			 , MTGL.UNIT_CD
		FROM STOCMTGL MTGL
		WHERE MTGL.GATE_CD  = #{ses.gateCd}
		  AND MTGL.ITEM_CD = #{ITEM_CD}
		  AND MTGL.PROGRESS_CD != 'T'
		  AND MTGL.DEL_FLAG = '0'
	</select>


	<select id="getRfxDtDetailFromPR" resultType="hashmap">

			SELECT PRDT.ITEM_CD
				  ,PRDT.ITEM_DESC
				  ,PRDT.ITEM_SPEC
				  ,PRDT.UNIT_CD
				  ,PRDT.PR_QT
				  ,PRDT.UNIT_PRC
				  ,<include refid="com.sql.toDateChar"/>(PRDT.DELY_DATE, 'YYYYMMDD') AS DELY_DATE
				  ,PRDT.DELY_PLACE_NM
				  ,PRDT.ATT_FILE_NUM
				  ,<include refid="com.sql.dbo"/>GETFILECOUNT(PRDT.GATE_CD, PRDT.ATT_FILE_NUM) AS ATT_FILE_CNT
				  ,COUNT(PRDT.VENDOR_CD) AS VENDOR_CNT
				  ,PRDT.PR_NUM
				  ,PRDT.PR_SQ
				  ,PRDT.DEPT_CD
	          FROM STOPPRDT PRDT
			 WHERE PRDT.GATE_CD = #{ses.gateCd}
			   AND PRDT.PR_NUM = #{PR_NUM}
			   AND PRDT.PR_DEV = #{PR_DEV}

	</select>

    <insert id="insertBDHD">
            INSERT INTO STOPBDHD (
                           GATE_CD
                         , BUYER_CD
                         , RFX_NUM
                         , RFX_CNT
                         , REG_DATE
                         , REG_USER_ID
                         , MOD_DATE
                         , MOD_USER_ID
                         , DEL_FLAG
                         , RFX_TYPE
                         , RFX_SUBJECT
                         , RFX_DATE
                         , PR_TYPE
                         , PR_REQ_TYPE
                         , CTRL_USER_ID
                         , CTRL_USER_NM
                         , RFX_FROM_DATE
                         , RFX_TO_DATE
                         , RFX_BF_DAY1
                         , RFX_BF_DAY2
                         , VENDOR_OPEN_TYPE
                         , VENDOR_SLT_TYPE
                         , PRC_SLT_TYPE
                         , CUR
                         , RFX_AMT
                         , SHIPPER_TYPE
                         , DELY_TERMS
                         , PAY_TERMS
                         , PRIVATE_RMK
                         , RMK
                         , RMK_IN
                         , ATT_FILE_NUM
                         , ATT_FILE_NUM_IN
                  <if test="APP_DOC_NUM != null and APP_DOC_NUM != ''">
                         , APP_DOC_NUM
                         , APP_DOC_CNT
                    </if>
                         , SIGN_STATUS
                         , SIGN_DATE
                         , PROGRESS_CD
                         , PRC_PERCENT
                         , NPRC_PERCENT
                         , ANN_FLAG
                         , BID_PREQ_RMK
                         ,OPEN_BID_USER_ID
                        )
                    VALUES (
                          #{ses.gateCd}
                        , #{BUYER_CD}
                        , #{RFX_NUM}
                        , #{RFX_CNT}
                        , <include refid="com.sql.sysdate"/>
                        , #{CTRL_USER_ID}
                        , <include refid="com.sql.sysdate"/>
                        , #{ses.userId}
                        , '0'
                        , #{RFX_TYPE}
                        , #{RFX_SUBJECT}
                        , <include refid="com.sql.sysdate"/>
                        , #{PR_TYPE}
                        , #{PR_REQ_TYPE}
                        , #{CTRL_USER_ID}
                        , #{CTRL_USER_NM}

                        <if test="_databaseId == 'oracle'">
                            , <include refid="com.sql.toDate"/>#{RFX_FROM_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_FROM_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_FROM_MIN} <include refid="com.sql.stringMerge"/> ':00', 'YYYYMMDD HH24:MI:SS')
                            , <include refid="com.sql.toDate"/>#{RFX_TO_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_TO_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_TO_MIN} <include refid="com.sql.stringMerge"/>  ':00', 'YYYYMMDD HH24:MI:SS')
                         	, <include refid="com.sql.toDate"/>#{RFX_BF_DAY1} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_BF_HOUR1} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_BF_MIN1} <include refid="com.sql.stringMerge"/> ':00', 'YYYYMMDD HH24:MI:SS')
                            , <include refid="com.sql.toDate"/>#{RFX_BF_DAY2} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_BF_HOUR2} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_BF_MIN2} <include refid="com.sql.stringMerge"/>  ':00', 'YYYYMMDD HH24:MI:SS')
                        </if>

                        <if test="_databaseId == 'mssql'">
                            , <include refid="com.sql.toDate"/>#{RFX_FROM_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_FROM_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_FROM_MIN})
                            , <include refid="com.sql.toDate"/>#{RFX_TO_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_TO_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_TO_MIN})
                        	, <include refid="com.sql.toDate"/>#{RFX_FROM_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_FROM_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_FROM_MIN})
                            , <include refid="com.sql.toDate"/>#{RFX_TO_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_TO_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_TO_MIN})
                        </if>

                        , #{VENDOR_OPEN_TYPE}
                        , #{VENDOR_SLT_TYPE}
                        , #{PRC_SLT_TYPE}
                        , 'KRW'
                        , #{RFX_AMT}
                        , #{SHIPPER_TYPE}
                        , #{DELY_TERMS}
                        , #{PAY_TERMS}
                        , #{PRIVATE_RMK}
                        , #{RMK}
                        , #{RMK_IN}
                        , #{ATT_FILE_NUM}
                        , #{ATT_FILE_NUM_IN}
                    <if test="APP_DOC_NUM != null and APP_DOC_NUM != ''">
                        , #{APP_DOC_NUM}
                        , CASE WHEN #{APP_DOC_CNT} = '' THEN NULL ELSE #{APP_DOC_CNT} END   --APP_DOC_CNT
                    </if>
                        , #{SIGN_STATUS}
                        , <include refid="com.sql.sysdate"/>
                        , #{PROGRESS_CD}
                        , #{PRC_PERCENT}
                        , #{NPRC_PERCENT}
                        , #{ANN_FLAG}
                        , #{BID_PREQ_RMK}
                        , #{OPEN_BID_USER_ID}
                    )
    </insert>


    <update id="saveBDVO">
        MERGE<include refid="com.sql.mergeInto"/>STOPBDVO<include refid="com.sql.mergeAs"/>A
                USING (SELECT
                          #{ses.gateCd} AS GATE_CD
                        , #{RFX_NUM} AS RFX_NUM
                        , #{RFX_CNT} AS RFX_CNT
                        , #{VENDOR_CD} AS VENDOR_CD
                        , #{QTA_CNT} AS QTA_CNT
                        <include refid="com.sql.dual"/>)<include refid="com.sql.mergeAs"/>B
                 ON (A.GATE_CD = B.GATE_CD
                 AND A.RFX_NUM = B.RFX_NUM
                 AND A.RFX_CNT = B.RFX_CNT
                 AND A.VENDOR_CD = B.VENDOR_CD
                 AND A.QTA_CNT = B.QTA_CNT
                    )
        WHEN MATCHED THEN
            UPDATE SET
                   BUYER_CD = #{BUYER_CD}
                 , MOD_DATE = <include refid="com.sql.sysdate"/>
                 , MOD_USER_ID = #{ses.userId}
                 , DEL_FLAG = '0'
                 <if test="_databaseId == 'mssql'">
                    , RFX_FROM_DATE = <include refid="com.sql.toDate"/>#{RFX_FROM_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_FROM_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_FROM_MIN})
                    , RFX_TO_DATE = <include refid="com.sql.toDate"/>#{RFX_TO_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_TO_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_TO_MIN})
                 </if>
                 <if test="_databaseId == 'oracle'">
                     , RFX_FROM_DATE = <include refid="com.sql.toDate"/>#{RFX_FROM_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_FROM_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_FROM_MIN} <include refid="com.sql.stringMerge"/> ':00', 'YYYYMMDD HH24:MI:SS')
                     , RFX_TO_DATE = <include refid="com.sql.toDate"/>#{RFX_TO_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_TO_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_TO_MIN} <include refid="com.sql.stringMerge"/>  ':00', 'YYYYMMDD HH24:MI:SS')
                 </if>
        WHEN NOT MATCHED THEN
            INSERT  (
                    GATE_CD
                  , BUYER_CD
                  , RFX_NUM
                  , RFX_CNT
                  , VENDOR_CD
                  , QTA_CNT
                  , REG_DATE
                  , REG_USER_ID
                  , MOD_DATE
                  , MOD_USER_ID
                  , DEL_FLAG
                  , RFX_FROM_DATE
                  , RFX_TO_DATE
            ) VALUES (
                    #{ses.gateCd}
                  , #{BUYER_CD}
                  , #{RFX_NUM}
                  , #{RFX_CNT}
                  , #{VENDOR_CD}
                  , #{QTA_CNT}
                  , <include refid="com.sql.sysdate"/>
                  , #{ses.userId}
                  , <include refid="com.sql.sysdate"/>
                  , #{ses.userId}
                  , '0'

                  <if test="_databaseId == 'oracle'">
                     , <include refid="com.sql.toDate"/>#{RFX_FROM_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_FROM_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_FROM_MIN} <include refid="com.sql.stringMerge"/> ':00', 'YYYYMMDD HH24:MI:SS')
                     , <include refid="com.sql.toDate"/>#{RFX_TO_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_TO_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_TO_MIN} <include refid="com.sql.stringMerge"/>  ':00', 'YYYYMMDD HH24:MI:SS')
                  </if>

                  <if test="_databaseId == 'mssql'">
                     , <include refid="com.sql.toDate"/>#{RFX_FROM_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_FROM_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_FROM_MIN})
                     , <include refid="com.sql.toDate"/>#{RFX_TO_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_TO_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_TO_MIN})
                  </if>
            <include refid="com.sql.mergeEnd"/>
    </update>

    <delete id="deleteBDVO">
        DELETE FROM STOPBDVO
              WHERE GATE_CD = #{ses.gateCd}
                AND RFX_NUM = #{RFX_NUM}
                AND RFX_CNT = #{RFX_CNT}
                AND QTA_CNT = '1'
    </delete>


    <update id="updateBDHD">
                UPDATE STOPBDHD
                   SET MOD_DATE = <include refid="com.sql.sysdate"/>
                     , MOD_USER_ID = #{ses.userId}
                     , RFX_TYPE = #{RFX_TYPE}
                     , RFX_SUBJECT = #{RFX_SUBJECT}
                     , RFX_DATE = <include refid="com.sql.sysdate"/>
                     , PR_TYPE = #{PR_TYPE}
                     , PR_REQ_TYPE = #{PR_REQ_TYPE}
                     , CTRL_USER_ID = #{CTRL_USER_ID}
                     , CTRL_USER_NM = #{CTRL_USER_NM}
                     , OPEN_BID_USER_ID =#{OPEN_BID_USER_ID}

                      <if test="_databaseId == 'oracle'">
                        , RFX_FROM_DATE = <include refid="com.sql.toDate"/>#{RFX_FROM_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_FROM_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_FROM_MIN} <include refid="com.sql.stringMerge"/> ':00', 'YYYYMMDD HH24:MI:SS')
                        , RFX_TO_DATE = <include refid="com.sql.toDate"/>#{RFX_TO_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_TO_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_TO_MIN} <include refid="com.sql.stringMerge"/>  ':00', 'YYYYMMDD HH24:MI:SS')
                        , RFX_BF_DAY1 = <include refid="com.sql.toDate"/>#{RFX_BF_DAY1} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_BF_HOUR1} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_BF_MIN1} <include refid="com.sql.stringMerge"/> ':00', 'YYYYMMDD HH24:MI:SS')
                        , RFX_BF_DAY2 = <include refid="com.sql.toDate"/>#{RFX_BF_DAY2} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_BF_HOUR2} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_BF_MIN2} <include refid="com.sql.stringMerge"/>  ':00', 'YYYYMMDD HH24:MI:SS')

                      </if>

                      <if test="_databaseId == 'mssql'">
                        , RFX_FROM_DATE = <include refid="com.sql.toDate"/>#{RFX_FROM_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_FROM_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_FROM_MIN})
                        , RFX_TO_DATE = <include refid="com.sql.toDate"/>#{RFX_TO_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_TO_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_TO_MIN})
                      </if>

                     , VENDOR_OPEN_TYPE = #{VENDOR_OPEN_TYPE}
                     , VENDOR_SLT_TYPE = #{VENDOR_SLT_TYPE}
                     , PRC_SLT_TYPE = #{PRC_SLT_TYPE}
                     , CUR = 'KRW'
                     , RFX_AMT = #{RFX_AMT}
                     , SHIPPER_TYPE = #{SHIPPER_TYPE}
                     , DELY_TERMS = #{DELY_TERMS}
                     , PAY_TERMS = #{PAY_TERMS}
                     , PRIVATE_RMK = #{PRIVATE_RMK}
                     , ATT_FILE_NUM = #{ATT_FILE_NUM}
                     , ATT_FILE_NUM_IN = #{ATT_FILE_NUM_IN}
                     , RMK_IN = #{RMK_IN}
                     , RMK = #{RMK}
                     , APP_DOC_NUM = #{APP_DOC_NUM}
                     , APP_DOC_CNT = CASE WHEN #{APP_DOC_CNT} = '' THEN NULL ELSE #{APP_DOC_CNT} END   --APP_DOC_CNT
                     , SIGN_STATUS = #{SIGN_STATUS}
                     , SIGN_DATE = <include refid="com.sql.sysdate"/>
                     , PROGRESS_CD = #{PROGRESS_CD}
                     , PRC_PERCENT = #{PRC_PERCENT}
                     , NPRC_PERCENT = #{NPRC_PERCENT}
                     , ANN_FLAG = #{ANN_FLAG}
                     , BID_PREQ_RMK = #{BID_PREQ_RMK}
                 WHERE GATE_CD = #{ses.gateCd}
                   AND BUYER_CD = #{BUYER_CD}
                   AND RFX_NUM = #{RFX_NUM}
                   AND RFX_CNT = #{RFX_CNT}
    </update>

    <delete id="updateBDHDDEL">
           UPDATE STOPBDHD SET DEL_FLAG = '1'
                             , MOD_DATE = <include refid="com.sql.sysdate"/>
                             , MOD_USER_ID = #{ses.userId}
            WHERE GATE_CD = #{ses.gateCd}
              AND BUYER_CD = #{BUYER_CD}
              AND RFX_NUM = #{RFX_NUM}
              AND RFX_CNT = #{RFX_CNT}
    </delete>

    <delete id="deleteBDAN">
        DELETE FROM STOPBDAN
              WHERE GATE_CD = #{ses.gateCd}
                AND BUYER_CD = #{BUYER_CD}
                AND RFX_NUM = #{RFX_NUM}
                AND RFX_CNT = #{RFX_CNT}
    </delete>

    <insert id="insertBDAN">
        INSERT INTO STOPBDAN(
                          GATE_CD
                        , BUYER_CD
                        , RFX_NUM
                        , RFX_CNT
                        , ANN_ATTEND_FLAG
                        , ANN_FROM_DATE
                        , ANN_TO_DATE
                        , ANN_PLACE_NM
                        , ANN_USER_NM
                        , ANN_USER_TEL_NM
                        , ANN_RMK
                )VALUES(
                          #{ses.gateCd}
                        , #{BUYER_CD}
                        , #{RFX_NUM}
                        , #{RFX_CNT}
                        , #{ANN_ATTEND_FLAG}
                        <if test="_databaseId == 'mssql'">
                        , <include refid="com.sql.toDate"/> #{ANN_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{ANN_FROM_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{ANN_FROM_MIN} <include refid="com.sql.stringMerge"/> ':00')
                        , <include refid="com.sql.toDate"/> #{ANN_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{ANN_TO_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{ANN_TO_MIN} <include refid="com.sql.stringMerge"/> ':00')
                        </if>
                        <if test="_databaseId == 'oracle'">
                        , <include refid="com.sql.toDate"/> #{ANN_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{ANN_FROM_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{ANN_FROM_MIN} <include refid="com.sql.stringMerge"/> ':00' ,'YYYYMMDD  HH24:MI:SS')
                        , <include refid="com.sql.toDate"/> #{ANN_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{ANN_TO_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{ANN_TO_MIN} <include refid="com.sql.stringMerge"/> ':00' ,'YYYYMMDD  HH24:MI:SS')
                        </if>
                        , #{ANN_PLACE_NM}
                        , #{ANN_USER_NM}
                        , #{ANN_USER_TEL_NM}
                        , #{ANN_RMK}
                )

    </insert>

    <delete id="deleteBDDT">
          DELETE FROM STOPBDDT
                WHERE GATE_CD = #{ses.gateCd}
                  AND BUYER_CD = #{BUYER_CD}
                  AND RFX_NUM = #{RFX_NUM}
                  AND RFX_CNT = #{RFX_CNT}
    </delete>

    <insert id="insertBDDT">
                INSERT INTO STOPBDDT(
                                 GATE_CD
                               , BUYER_CD
                               , RFX_NUM
                               , RFX_CNT
                               , RFX_SQ
                               , REG_DATE
                               , REG_USER_ID
                               , MOD_DATE
                               , MOD_USER_ID
                               , DEL_FLAG
                               , PR_NUM
                               , PR_SQ
                               , PROGRESS_CD
                               , ITEM_CD
                               , ITEM_DESC
                               , ITEM_SPEC
                               , UNIT_CD
                               , CUR
                               , RFX_QT
                               , UNIT_PRC
                               , RFX_AMT
                               , MAKER_CD
                               , MAKER_NM
                               , MAKER_PART_NO
                               , ORIGIN_CD
                               , PLANT_CD
                               , ATT_FILE_NUM
                               , DELY_DATE
                               , DELY_PLACE_NM
                               , RMK
                               , PR_BUYER_CD
                               , WH_CD
                               , CTRL_CD
                               , VALID_FROM_DATE
                               , VALID_TO_DATE
                               , PR_PLANT_CD
                               , DELY_TYPE
                               , BRAND_NM
                               , DEAL_CD
                        ) VALUES (
                                 #{ses.gateCd}
                               , #{BUYER_CD}
                               , #{RFX_NUM}
                               , #{RFX_CNT}
                               , (SELECT COUNT(*) + 1 FROM STOPBDDT WHERE GATE_CD = #{ses.gateCd} AND BUYER_CD = #{BUYER_CD}  AND RFX_NUM = #{RFX_NUM} AND RFX_CNT =  #{RFX_CNT}) --RFX_SQ
                               ,  <include refid="com.sql.sysdate"/>
                               , #{ses.userId}
                               ,  <include refid="com.sql.sysdate"/>
                               , #{ses.userId}
                               , '0'
                               , #{PR_NUM}
                               , #{PR_SQ}
                               , #{PROGRESS_CD}
                               , #{ITEM_CD}
                               , #{ITEM_DESC}
                               , #{ITEM_SPEC}
                               , #{UNIT_CD}
                               , #{CUR}
                               , #{RFX_QT}
                               , #{UNIT_PRC}
                               , #{RFX_AMT}
                               , #{MAKER_CD}
                               , #{MAKER_NM}
                               , #{MAKER_PART_NO}
                               , #{ORIGIN_CD}
                               , #{PLANT_CD}
                               , #{ATT_FILE_NUM}
                               , #{DELY_DATE}
                               , #{DELY_PLACE_NM}
                               , #{RMK}
                               , #{PR_BUYER_CD}
                               , #{WH_CD}
                               , #{CTRL_CD}
                               , #{VALID_FROM_DATE}
                               , #{VALID_TO_DATE}
                               , #{PR_PLANT_CD}
                               , #{DELY_TYPE}
                               , #{BRAND_NM}
                               , #{DEAL_CD}
                        )
        </insert>

        <delete id="updateBDDTDEL">
           UPDATE STOPBDDT SET DEL_FLAG = '1'
                             , MOD_DATE = <include refid="com.sql.sysdate"/>
                             , MOD_USER_ID = #{ses.userId}
            WHERE GATE_CD = #{ses.gateCd}
              AND BUYER_CD = #{BUYER_CD}
              AND RFX_NUM = #{RFX_NUM}
              AND RFX_CNT = #{RFX_CNT}

        </delete>

        <update id="updateRerfxBdhd">
                UPDATE STOPBDHD
                   SET MOD_DATE = <include refid="com.sql.sysdate"/>
                     , MOD_USER_ID = #{ses.userId}
                     , PROGRESS_CD = '2950'
                 WHERE GATE_CD = #{ses.gateCd}
                   AND BUYER_CD = #{BUYER_CD}
                   AND RFX_NUM = #{RFX_NUM}
                   AND RFX_CNT = #{RFX_CNT}
        </update>

        <update id="updateRerfxBddt">
                UPDATE STOPBDDT
                   SET MOD_DATE = <include refid="com.sql.sysdate"/>
                     , MOD_USER_ID = #{ses.userId}
                     , PROGRESS_CD = '2950'
                 WHERE GATE_CD = #{ses.gateCd}
                   AND BUYER_CD = #{BUYER_CD}
                   AND RFX_NUM = #{RFX_NUM}
                   AND RFX_CNT = #{RFX_CNT}
        </update>


        <select id="getVendorListFromVnglCvur" resultType="hashMap">
			    SELECT <include refid="com.sql.mtop1"/>
			            VNGL.VENDOR_CD
                     , VNGL.VENDOR_NM
                     , VNGL.CEO_USER_NM
                     , VNGL.IRS_NO
                     , CVUR.USER_NM
                     , CVUR.TEL_NUM
                     , CVUR.CELL_NUM
                     , CVUR.EMAIL
                     , CVUR.USER_ID
                  FROM STOCVNGL VNGL
       LEFT OUTER JOIN STOCCVUR CVUR
                   ON (VNGL.GATE_CD = CVUR.GATE_CD
                   AND VNGL.VENDOR_CD = CVUR.COMPANY_CD
                   AND CVUR.DEL_FLAG = 0)
                 WHERE VNGL.GATE_CD = #{ses.gateCd}
                   AND VNGL.VENDOR_CD = #{VENDOR_CD}
                   <if test="_databaseId == 'oracle'">
                   AND ROWNUM = 1
                   </if>
        </select>

        <delete id="updateBDVNDEL">
           UPDATE STOPBDVN SET DEL_FLAG = '1'
                             , MOD_DATE = <include refid="com.sql.sysdate"/>
                             , MOD_USER_ID = #{ses.userId}
            WHERE GATE_CD = #{ses.gateCd}
              AND BUYER_CD = #{BUYER_CD}
              AND RFX_NUM = #{RFX_NUM}
              AND RFX_CNT = #{RFX_CNT}

        </delete>

        <delete id="deleteBDVN">
               DELETE FROM STOPBDVN
                     WHERE GATE_CD = #{ses.gateCd}
                       AND BUYER_CD = #{BUYER_CD}
                       AND RFX_NUM = #{RFX_NUM}
                       AND RFX_CNT = #{RFX_CNT}
        </delete>

        <insert id="insertBDVN">
            <selectKey keyProperty="RFX_SQ_KEY" resultType="int" order="BEFORE">
                SELECT MAX(RFX_SQ) FROM STOPBDDT
                  WHERE GATE_CD  = #{ses.gateCd}
                    AND RFX_NUM  = #{RFX_NUM}
                    AND RFX_CNT  = #{RFX_CNT}
            </selectKey>

                INSERT INTO STOPBDVN(
                            GATE_CD
                          , BUYER_CD
                          , RFX_NUM
                          , RFX_CNT
                          , RFX_SQ
                          , VENDOR_CD
                          , REG_DATE
                          , REG_USER_ID
                          , MOD_DATE
                          , MOD_USER_ID
                          , DEL_FLAG
                          , PROGRESS_CD
                          , VENDOR_USER_ID
                          , VENDOR_CELL_NUM
                          , VENDOR_EMAIL
                ) VALUES (
                           #{ses.gateCd}
                          , #{BUYER_CD}
                          , #{RFX_NUM}
                          , #{RFX_CNT}
                         <if test="RFX_SQ != null and RFX_SQ != ''">
                            , #{RFX_SQ}
                         </if>
                         <if test="RFX_SQ == null or RFX_SQ == ''">
                            , #{RFX_SQ_KEY}
                         </if>
                          , #{VENDOR_CD}
                          , <include refid="com.sql.sysdate"/>
                          , #{ses.userId}
                          , <include refid="com.sql.sysdate"/>
                          , #{ses.userId}
                          , '0'
                          , #{PROGRESS_CD}
                          , #{USER_ID}
                          , #{CELL_NUM}
                          , #{EMAIL}
                )
        </insert>
		
		<!-- 2023.01.17 : 입찰대기(2650)도 삭제 가능 -->
        <select id="getSignStatus" resultType="string">
			SELECT CASE WHEN SIGN_STATUS = 'E' THEN
							 CASE WHEN PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[<]]> RFX_FROM_DATE THEN 'T'
			              		  ELSE 'E'
			              	 END
						ELSE SIGN_STATUS
				   END AS SIGN_STATUS
			  FROM STOPBDHD
			 WHERE GATE_CD  = #{ses.gateCd}
			   AND BUYER_CD = #{BUYER_CD}
			   AND RFX_NUM  = #{RFX_NUM}
			   AND RFX_CNT  = #{RFX_CNT}
        </select>

        <update id="updatePrdtProgress">
			UPDATE STOUPODT
			   SET PROGRESS_CD = #{PROGRESS_CD}
			     , MOD_DATE = <include refid="com.sql.sysdate"/>
			     , MOD_USER_ID = #{ses.userId}
			 WHERE GATE_CD = #{ses.gateCd}
			   AND CUST_CD = #{PR_BUYER_CD}
			   AND CPO_NO  = #{PR_NUM}
			   AND CPO_SEQ = #{PR_SQ}
        </update>


        <!--BD0310-->
        <select id="getBdHdDetail" resultType="hashmap">
            SELECT
                  A.GATE_CD
                 ,A.BUYER_CD
                 ,A.RFX_NUM
                 ,A.RFX_CNT
                 ,<include refid="com.sql.dbo"/>getGmtDate(A.RFX_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS RFX_DATE
                 ,A.REG_USER_ID
                 ,A.MOD_DATE
                 ,A.MOD_USER_ID
                 ,A.DEL_FLAG
                 ,A.RFX_TYPE
                 ,A.RFX_SUBJECT
                 ,A.RFX_DATE
                 ,A.PR_TYPE
                 ,A.PR_REQ_TYPE
                 ,A.CTRL_USER_ID
                 ,A.CTRL_USER_NM
                 <if test="_databaseId == 'mssql'">
                     ,<include refid="com.sql.dbo"/>getGmtDate(A.RFX_FROM_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) RFX_FROM_DATE
                     ,SUBSTRING(LEFT(CONVERT(NVARCHAR(20),  A.RFX_FROM_DATE, 108), 5),1,2) RFX_FROM_HOUR
                     ,SUBSTRING(LEFT(CONVERT(NVARCHAR(20),  A.RFX_FROM_DATE, 108), 5),4,2) RFX_FROM_MIN
                     ,<include refid="com.sql.dbo"/>getGmtDate(A.RFX_TO_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) RFX_TO_DATE
                     ,SUBSTRING(LEFT(CONVERT(NVARCHAR(20),  A.RFX_TO_DATE, 108), 5),1,2) RFX_TO_HOUR
                     ,SUBSTRING(LEFT(CONVERT(NVARCHAR(20),  A.RFX_TO_DATE, 108), 5),4,2) RFX_TO_MIN
                 </if>
                 <if test="_databaseId == 'oracle'">
                     ,<include refid="com.sql.dbo"/>getGmtDate(A.RFX_FROM_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) RFX_FROM_DATE
                     ,TO_CHAR(A.RFX_FROM_DATE, 'HH24') AS RFX_FROM_HOUR
                     ,TO_CHAR(A.RFX_FROM_DATE, 'MI') AS RFX_FROM_MIN
                     ,<include refid="com.sql.dbo"/>getGmtDate(A.RFX_TO_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) RFX_TO_DATE
                     ,TO_CHAR(A.RFX_TO_DATE, 'HH24') AS RFX_TO_HOUR
                     ,TO_CHAR(A.RFX_TO_DATE, 'MI') AS RFX_TO_MIN
                     ,<include refid="com.sql.dbo"/>getGmtDate(A.RFX_BF_DAY1, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) RFX_BF_DAY1
                     ,TO_CHAR(A.RFX_BF_DAY1, 'HH24') AS RFX_BF_HOUR1
                     ,TO_CHAR(A.RFX_BF_DAY1, 'MI') AS RFX_BF_MIN1
                     ,<include refid="com.sql.dbo"/>getGmtDate(A.RFX_BF_DAY2, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) RFX_BF_DAY2
                     ,TO_CHAR(A.RFX_BF_DAY2, 'HH24') AS RFX_BF_HOUR2
                     ,TO_CHAR(A.RFX_BF_DAY2, 'MI') AS RFX_BF_MIN2
                 </if>
                 ,A.VENDOR_OPEN_TYPE
                 ,A.VENDOR_SLT_TYPE
                 ,A.PRC_SLT_TYPE
                 ,A.CUR
                 ,A.RFX_AMT
                 ,A.SHIPPER_TYPE
                 ,A.DELY_TERMS
                 ,A.PAY_TERMS
                 ,A.PRIVATE_RMK
                 ,A.RMK
                 ,A.RMK_IN
                 ,A.ATT_FILE_NUM
                 ,A.ATT_FILE_NUM_IN
                 ,A.APP_DOC_NUM
                 ,A.APP_DOC_CNT
                 ,A.SIGN_STATUS
                 ,A.SIGN_DATE
                 ,A.FROM_MOD_RMK
                 ,A.TO_EXTEND_RMK
                 ,A.FORCE_CLOSE_RMK
                 ,CASE WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_FROM_DATE  AND <include refid="com.sql.sysdate"/> <![CDATA[<]]> A.RFX_TO_DATE THEN '2700'
              		   WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_TO_DATE THEN '2750'  ELSE A.PROGRESS_CD END AS PROGRESS_CD
                 ,<include refid="com.sql.dbo"/>GETDEPTNAME(A.GATE_CD, A.BUYER_CD, B.DEPT_CD, #{ses.langCd}) AS CTRL_USER_DEPT
                 ,B.POSITION_NM
                 ,CASE WHEN A.PR_REQ_TYPE = '02' THEN '1' ELSE '0' END AS CONT_REQ_FLAG
                 ,A.PRC_PERCENT
                 ,A.NPRC_PERCENT
                 ,A.ANN_FLAG
                 ,A.BID_PREQ_RMK
                 ,<include refid="com.sql.toDateChar"/>(A.RFX_FROM_DATE, 'YYYY-MM-DD HH24:MI') RFX_FROM_DATE2
                 ,<include refid="com.sql.toDateChar"/>(A.RFX_TO_DATE, 'YYYY-MM-DD HH24:MI') RFX_TO_DATE2
                 ,C.ANN_ATTEND_FLAG
                 , <include refid="com.sql.toDateChar"/>(C.ANN_FROM_DATE, 'yyyyMMdd') AS ANN_DATE
                 ,TO_CHAR(C.ANN_FROM_DATE, 'HH24') AS ANN_FROM_HOUR
                 ,TO_CHAR(C.ANN_FROM_DATE, 'MI') AS ANN_FROM_MIN
                 ,TO_CHAR(C.ANN_TO_DATE, 'HH24') AS ANN_TO_HOUR
                 ,TO_CHAR(C.ANN_TO_DATE, 'MI') AS ANN_TO_MIN
                 ,C.ANN_PLACE_NM
                 ,C.ANN_USER_NM
                 ,C.ANN_USER_TEL_NM
                 ,C.ANN_RMK
                 ,C.RSLT_ATT_FILE_NUM
                 ,C.RSLT_RMK
                 ,(CASE WHEN D.ELCT_CONFM_IF_SEQ IS NULL OR ELCT_CONFM_STAT_CD = '9' THEN 'N' ELSE 'Y' END) AS GW_FLAG	-- 대명소노 DGNS G/W 결재여부
             	 ,OPEN_BID_USER_ID
             FROM STOPBDHD A
             JOIN STOCUSER B ON (A.GATE_CD  = B.GATE_CD
                             AND A.BUYER_CD = B.COMPANY_CD
                             AND A.CTRL_USER_ID = B.USER_ID)
             LEFT JOIN STOPBDAN C ON (A.GATE_CD = C.GATE_CD
                             AND A.BUYER_CD = C.BUYER_CD
                             ANd A.RFX_NUM  = C.RFX_NUM
                             AND A.RFX_CNT  = C.RFX_CNT)
             LEFT JOIN COM_ELCT_CONFM_IF D
	  			  ON A.APP_DOC_NUM||A.APP_DOC_CNT = D.ELCT_CONFM_IF_SEQ
			 WHERE A.GATE_CD  = #{ses.gateCd}
			   AND A.DEL_FLAG = '0'

       		<if test="APP_DOC_NUM == '' or APP_DOC_NUM == null">
               AND A.BUYER_CD = #{ses.companyCd}
               AND A.RFX_NUM = #{RFX_NUM}
               AND A.RFX_CNT = #{RFX_CNT}
       		</if>
       		<if test="APP_DOC_NUM != '' and APP_DOC_NUM != null">
               AND A.APP_DOC_NUM2 = #{APP_DOC_NUM}
               AND A.APP_DOC_CNT2 = #{APP_DOC_CNT}
       		</if>
        </select>

        <select id="getBdDtDetail" resultType="hashmap">
                        SELECT
                              A.GATE_CD
                            , A.BUYER_CD
                            , MTGB.CUST_ITEM_CD
                            , <include refid="com.sql.dbo"/>GETBUYERINFO(A.GATE_CD, A.PR_BUYER_CD, 'CUST_NM') AS PR_BUYER_NM
							, <include refid="com.sql.dbo"/>GETPLANTNAME(A.GATE_CD, A.PR_BUYER_CD,A.PR_PLANT_CD , #{ses.langCd}) AS PR_PLANT_NM
                            , A.PR_PLANT_CD
                            , A.RFX_NUM
                            , A.RFX_CNT
                            , A.RFX_SQ
                            , A.REG_DATE
                            , A.REG_USER_ID
                            , A.MOD_DATE
                            , A.MOD_USER_ID
                            , A.DEL_FLAG
                            , A.PR_BUYER_CD
                            , A.PR_NUM
                            , A.PR_SQ
                            , A.PROGRESS_CD
                            , A.ITEM_CD
                            , A.ITEM_DESC
                            , A.ITEM_SPEC
                            , A.UNIT_CD
                            , A.CUR
                            , A.RFX_QT
                            , A.UNIT_PRC
                            , A.RFX_AMT
                            , A.MAKER_CD
                            , A.MAKER_NM
                            , A.MAKER_PART_NO
                            , A.ORIGIN_CD
                            , A.PLANT_CD
                            , A.ATT_FILE_NUM
                            , <include refid="com.sql.dbo"/>GETFILECOUNT(A.GATE_CD, A.ATT_FILE_NUM) AS ATT_FILE_CNT
                            ,  <include refid="com.sql.toDateChar"/>(A.DELY_DATE, 'YYYYMMDD') AS DELY_DATE
                            , A.DELY_PLACE_NM
                            , A.RMK
                            , (SELECT COUNT(*) FROM STOPBDVN D WHERE D.GATE_CD = A.GATE_CD AND D.BUYER_CD = A.BUYER_CD AND D.RFX_NUM = A.RFX_NUM AND D.RFX_CNT = A.RFX_CNT AND D.RFX_SQ = A.RFX_SQ AND D.DEL_FLAG = '0'
                                <if test="ReBid_OB != null and ReBid_OB != ''">
                                    AND D.VENDOR_CD = #{ReBid_OB}
                                </if>
                                ) AS VENDOR_CNT
                            , A.WH_CD
                            , A.CTRL_CD
						    , null  AS WH_NM
						    , <include refid="com.sql.dbo"/>GETTOCHAR(A.VALID_FROM_DATE,'YYYYMMDD') AS VALID_FROM_DATE
						    , <include refid="com.sql.dbo"/>GETTOCHAR(A.VALID_TO_DATE,'YYYYMMDD') AS VALID_TO_DATE
						    , A.DEAL_CD
							, A.DELY_TYPE
							, A.ORIGIN_CD
							, GETCOMCODE(A.GATE_CD, 'M004', A.ORIGIN_CD, '0', #{ses.langCd}) AS ORIGIN_NM
							, A.BRAND_NM
                        FROM STOPBDDT A
						LEFT JOIN STOCMTGB MTGB
					   	     ON (A.GATE_CD     = MTGB.GATE_CD
						     AND A.ITEM_CD     = MTGB.ITEM_CD
						     AND A.PR_BUYER_CD = MTGB.CUST_CD
						     AND MTGB.DEL_FLAG = '0')
	                 <if test="ses.userType eq 'S'.toString()">
	                    JOIN STOPBDVN C
		                     ON (A.GATE_CD  = C.GATE_CD
		                     AND A.BUYER_CD = C.BUYER_CD
		                     AND A.RFX_NUM  = C.RFX_NUM
		                     AND A.RFX_CNT  = C.RFX_CNT
		                     AND A.RFX_SQ   = C.RFX_SQ
		                     AND C.VENDOR_CD = #{ses.companyCd})
	                 </if>
                       WHERE A.GATE_CD = #{ses.gateCd}
                         AND A.BUYER_CD = #{ses.companyCd}
                         AND A.RFX_NUM = #{RFX_NUM}
                         AND A.RFX_CNT = CASE WHEN #{RFX_CNT} = '' THEN NULL ELSE  #{RFX_CNT} END
                         AND A.DEL_FLAG = '0'
                    ORDER BY A.RFX_SQ
        </select>

	    <select id="getVendorListByBdRfx" resultType="hashmap">
					SELECT BDVN.VENDOR_CD
						  ,<include refid="com.sql.dbo"/>GETVENDORNAME(BDVN.GATE_CD, BDVN.VENDOR_CD, #{ses.langCd}) AS VENDOR_NM
						  ,BDVN.VENDOR_USER_ID AS USER_ID
						  ,<include refid="com.sql.dbo"/>GETUSERNAME(BDVN.GATE_CD, BDVN.VENDOR_USER_ID, #{ses.langCd}) AS USER_NM
						  ,BDVN.VENDOR_CELL_NUM AS CELL_NUM
						  ,BDVN.VENDOR_EMAIL AS EMAIL
						  ,BDVN.RFX_SQ
						  ,VNGL.CEO_USER_NM
						  ,VNGL.INDUSTRY_TYPE
						  ,VNGL.BUSINESS_TYPE
						  ,VNGL.MAJOR_ITEM_NM
						  ,VNGL.MAKER_NM
						  ,getSgInfoByVendor(VNGL.GATE_CD, VNGL.VENDOR_CD, 'NUM') AS SG_NUM
	 					  ,getSgInfoByVendor(VNGL.GATE_CD, VNGL.VENDOR_CD, 'NM')  AS SG_TXT
						  ,VNGL.IRS_NO
						  ,CVUR.TEL_NUM
						  ,VNGL.MAKER_NM
					FROM STOPBDVN BDVN  JOIN STOCVNGL VNGL ON (BDVN.GATE_CD = VNGL.GATE_CD
													       AND BDVN.VENDOR_CD = VNGL.VENDOR_CD
												           AND VNGL.DEL_FLAG = '0')
										JOIN STOCCVUR CVUR ON (CVUR.GATE_CD = VNGL.GATE_CD
										                   AND CVUR.COMPANY_CD = VNGL.VENDOR_CD
										                   AND CVUR.USER_ID = BDVN.VENDOR_USER_ID)
					WHERE BDVN.GATE_CD = #{ses.gateCd}
				      AND BDVN.DEL_FLAG = '0'
					  AND BDVN.BUYER_CD = #{BUYER_CD}
					  AND BDVN.RFX_NUM = #{RFX_NUM}
					<if test="_databaseId == 'mssql'">
					  AND CONVERT(VARCHAR,BDVN.RFX_CNT) = #{RFX_CNT}
					</if>
					<if test="_databaseId == 'oracle'">
					  AND TO_CHAR(BDVN.RFX_CNT) = #{RFX_CNT}
					</if>
					  <if test="ReBid_OB != null and ReBid_OB != ''">
                        AND BDVN.VENDOR_CD = #{ReBid_OB}
                      </if>

		</select>

        <select id="getBdvnByItem" resultType="hashmap">
                    SELECT BDVN.VENDOR_CD
                    	 , <include refid="com.sql.dbo"/>GETVENDORNAME(#{ses.gateCd}, BDVN.VENDOR_CD, #{ses.langCd}) AS VENDOR_NM
                    	 , BDVN.VENDOR_USER_ID AS USER_ID
                    	 ,<include refid="com.sql.dbo"/>GETUSERNAME(BDVN.GATE_CD, BDVN.VENDOR_USER_ID, #{ses.langCd}) AS USER_NM
                         , BDVN.VENDOR_CELL_NUM AS CELL_NUM
                         , BDVN.VENDOR_EMAIL AS EMAIL
                      FROM STOPBDVN BDVN
                     WHERE BDVN.GATE_CD = #{ses.gateCd}
                       AND BDVN.BUYER_CD = #{BUYER_CD}
                       AND BDVN.RFX_NUM = #{RFX_NUM}
                       AND BDVN.RFX_CNT = #{RFX_CNT}
                       AND BDVN.RFX_SQ = #{RFX_SQ}
                       AND BDVN.DEL_FLAG = '0'
        </select>

        <update id="updateBdSignStatus">
            UPDATE STOPBDHD
               SET SIGN_STATUS = #{SIGN_STATUS}
                  ,SIGN_DATE = CASE WHEN #{SIGN_STATUS} = 'E' THEN <include refid="com.sql.sysdate"/> ELSE SIGN_DATE END
            WHERE GATE_CD = #{ses.gateCd}
            AND APP_DOC_NUM = #{APP_DOC_NUM}
            AND APP_DOC_CNT = #{APP_DOC_CNT}
        </update>

        <update id="updateBdSignStatus2">
            UPDATE STOPBDHD
               SET SIGN_STATUS2 = #{SIGN_STATUS}
                  ,SIGN_DATE2 = CASE WHEN #{SIGN_STATUS} = 'E' THEN <include refid="com.sql.sysdate"/> ELSE SIGN_DATE2 END
            WHERE GATE_CD = #{ses.gateCd}
            AND APP_DOC_NUM2 = #{APP_DOC_NUM}
            AND APP_DOC_CNT2 = #{APP_DOC_CNT}
        </update>

        <update id="sendBD">
            UPDATE STOPBDDT
               SET PROGRESS_CD = '2650'
            WHERE GATE_CD = #{ses.gateCd}
            AND BUYER_CD = #{BUYER_CD}
            AND RFX_NUM = #{RFX_NUM}
            AND RFX_CNT = #{RFX_CNT}
            ANd DEL_FLAG = '0'
        </update>

		<!-- 소싱관리 > 입찰관리 > 입찰시행 현황 (BD0320) -->
		<select id="getBdHdList" parameterType="hashMap" resultType="hashMap">
			SELECT DISTINCT
			<if test="_databaseId == 'mssql'">
			     (SELECT STUFF((SELECT ',' + PR_BUYER_NM FROM
			                   (SELECT DISTINCT <include refid="com.sql.dbo"/>getBuyerName(GATE_CD, PR_BUYER_CD, #{ses.langCd}) AS PR_BUYER_NM
			                    FROM STOPBDDT WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) RQDT FOR XML PATH('')),1,1,'')) AS PR_BUYER_NM
			</if>
			<if test="_databaseId == 'oracle'">
			    (SELECT LISTAGG(PR_BUYER_NM, ',')  FROM
			                        (SELECT DISTINCT <include refid="com.sql.dbo"/>GETCOMPANYNAME(GATE_CD, PR_BUYER_CD, #{ses.langCd}) AS PR_BUYER_NM

			                         FROM STOPBDDT WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) RQDT) AS PR_BUYER_NM
			</if>
			<if test="_databaseId == 'oracle'">
				,(SELECT DISTINCT  <include refid="com.sql.dbo"/>GETPLANTNAME(GATE_CD, PR_BUYER_CD,PR_PLANT_CD, #{ses.langCd}) AS PR_PLANT_NM
								 FROM STOPBDDT WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) AS PR_PLANT_NM
			</if>
				,A.GATE_CD
				,A.BUYER_CD
				,A.RFX_NUM
				,A.RFX_CNT
				,A.REG_DATE
				,A.REG_USER_ID
				,A.MOD_DATE
				,A.MOD_USER_ID
				,A.DEL_FLAG
				,A.RFX_TYPE
				,A.RFX_SUBJECT
				<if test="_databaseId == 'mssql'">
				    ,REPLACE(CONVERT(NVARCHAR(20),  A.RFX_DATE, 111) + ' ' + LEFT(CONVERT(NVARCHAR(20),  A.RFX_DATE, 108), 5), '/', '-') RFX_DATE
                </if>
				<if test="_databaseId == 'oracle'">
				    ,<include refid="com.sql.toDateChar"/>(A.RFX_DATE, 'YYYY-MM-DD HH24:MI') RFX_DATE
				</if>
				,A.PR_TYPE
				,A.PR_REQ_TYPE
				,A.CTRL_USER_ID
				,A.CTRL_USER_NM
				<if test="_databaseId == 'mssql'">
					,REPLACE(CONVERT(NVARCHAR(20),  A.RFX_FROM_DATE, 111) + ' ' + LEFT(CONVERT(NVARCHAR(20),  A.RFX_FROM_DATE, 108), 5), '/', '-') RFX_FROM_DATE
					,REPLACE(CONVERT(NVARCHAR(20),  A.RFX_TO_DATE, 111) + ' ' + LEFT(CONVERT(NVARCHAR(20),  A.RFX_TO_DATE, 108), 5), '/', '-') RFX_TO_DATE
				</if>
				<if test="_databaseId == 'oracle'">
					,<include refid="com.sql.toDateChar"/>(A.RFX_FROM_DATE,'YYYY-MM-DD HH24:MI') RFX_FROM_DATE
					,<include refid="com.sql.toDateChar"/>(A.RFX_TO_DATE,'YYYY-MM-DD HH24:MI') RFX_TO_DATE
				</if>
				,A.RFX_BF_DAY1
				,A.RFX_BF_DAY2
				,A.VENDOR_OPEN_TYPE
				,A.VENDOR_SLT_TYPE
				,A.PRC_SLT_TYPE
				,A.CUR
				,A.SHIPPER_TYPE
				,A.DELY_TERMS
				,A.PAY_TERMS
				,A.PRIVATE_RMK
				,A.RMK
				,A.ATT_FILE_NUM
				,A.ATT_FILE_NUM_IN
				,A.APP_DOC_NUM
				,A.APP_DOC_CNT
				,CASE WHEN ELCT_CONFM_IF_SEQ IS NULL  THEN A.SIGN_STATUS
				 WHEN ELCT_CONFM_IF_SEQ IS NOT NULL AND (ELCT_CONFM_STAT_CD ='1' OR ELCT_CONFM_STAT_CD ='2') THEN 'P'
				 WHEN ELCT_CONFM_IF_SEQ IS NOT NULL AND ELCT_CONFM_STAT_CD ='3' THEN 'E'
				 ELSE A.SIGN_STATUS
				 END SIGN_STATUS
				,A.SIGN_STATUS2
				,A.SIGN_DATE
				,A.FROM_MOD_RMK
				,A.TO_EXTEND_RMK
				,A.FORCE_CLOSE_RMK
				,(
					SELECT <include refid="com.sql.toVarchar"/>COUNT(DISTINCT VENDOR_CD)) FROM STOPBDVN WHERE GATE_CD = A.GATE_CD
													AND BUYER_CD = A.BUYER_CD
													AND RFX_NUM = A.RFX_NUM
													AND RFX_CNT = A.RFX_CNT
													AND PROGRESS_CD IN ('150', '300') -- 포기, 제출
													AND DEL_FLAG = '0'
				 ) <include refid="com.sql.stringMerge"/> ' / ' <include refid="com.sql.stringMerge"/>
				 (
					SELECT <include refid="com.sql.toVarchar"/>COUNT(DISTINCT VENDOR_CD)) FROM STOPBDVN WHERE GATE_CD = A.GATE_CD
													AND BUYER_CD = A.BUYER_CD
													AND RFX_NUM = A.RFX_NUM
													AND RFX_CNT = A.RFX_CNT
													AND DEL_FLAG = '0'
				 ) AS VENDOR_CNT
				,(
					SELECT COUNT(DISTINCT VENDOR_CD) FROM STOPBQDT WHERE GATE_CD = A.GATE_CD
													AND BUYER_CD = A.BUYER_CD
													AND RFX_NUM = A.RFX_NUM
													AND RFX_CNT = A.RFX_CNT
													AND PROGRESS_CD = '300'
													AND DEL_FLAG = '0'
				 ) AS SUBMIT_VENDOR_CNT
				,CASE WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_FROM_DATE  AND <include refid="com.sql.sysdate"/> <![CDATA[<]]> A.RFX_TO_DATE THEN '2700'
			          WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_TO_DATE THEN '2750'
			          WHEN ELCT_CONFM_IF_SEQ IS NOT NULL AND (ELCT_CONFM_STAT_CD ='1' OR ELCT_CONFM_STAT_CD ='2' OR ELCT_CONFM_STAT_CD ='3')  THEN '2650'
			          ELSE A.PROGRESS_CD
			          END AS PROGRESS_CD
			    ,A.RFX_DATE
			    ,A.OPEN_BID_USER_ID
			    ,GETUSERINFO(A.GATE_CD,A.OPEN_BID_USER_ID,'USER_NM') AS OPEN_BID_USER_NM
			FROM STOPBDHD A
            <if test="(VENDOR_CD != '' and VENDOR_CD != null) or (VENDOR_NM != '' and VENDOR_NM != null)">
			JOIN (SELECT DISTINCT RFX_NUM
								, RFX_CNT
							 FROM STOPBDVN BDVN
							 JOIN STOCVNGL VNGL
							   ON BDVN.GATE_CD = VNGL.GATE_CD
							  AND BDVN.VENDOR_CD = VNGL.VENDOR_CD
							 <if test="VENDOR_CD != '' and VENDOR_CD != null">
							  AND BDVN.VENDOR_CD <include refid="com.sql.likeL"/> #{VENDOR_CD} <include refid="com.sql.likeR"/>
							 </if>
							 <if test="VENDOR_NM != '' and VENDOR_NM != null">
							  AND UPPER(VNGL.VENDOR_NM) <include refid="com.sql.likeL"/> #{VENDOR_NM} <include refid="com.sql.likeR"/>
							 </if>
							WHERE BDVN.GATE_CD = #{ses.gateCd}
							  AND BDVN.DEL_FLAG = '0')  B   ON (A.RFX_NUM = B.RFX_NUM
															AND A.RFX_CNT = B.RFX_CNT)
            </if>
            LEFT JOIN COM_ELCT_CONFM_IF C
						 	  ON A.APP_DOC_NUM||A.APP_DOC_CNT =C.ELCT_CONFM_IF_SEQ
			WHERE A.GATE_CD = #{ses.gateCd}
			  AND A.DEL_FLAG = '0'
            <if test="(PR_BUYER_CD != null and PR_BUYER_CD != '') or (PR_BUYER_NM != null and PR_BUYER_NM != '') ">
                AND EXISTS (SELECT 1 FROM STOPBDDT
                WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT AND DEL_FLAG = '0'
                <if test="PR_BUYER_CD != '' and PR_BUYER_CD != null">
                    AND PR_BUYER_CD =#{PR_BUYER_CD}
                </if>
                <if test="PR_BUYER_NM != '' and PR_BUYER_NM != null">
                    AND <include refid="com.sql.dbo"/>getBuyerName(A.GATE_CD, PR_BUYER_CD, #{ses.langCd}) <include refid="com.sql.likeL"/> #{PR_BUYER_NM} <include refid="com.sql.likeR"/>
                </if>
                )
            </if>
            <if test="(PR_PLANT_CD != null and PR_PLANT_CD != '') or (PR_PLANT_NM != null and PR_PLANT_NM != '') ">
                AND EXISTS (SELECT 1 FROM STOPBDDT
                WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT AND DEL_FLAG = '0'
                <if test="PR_PLANT_CD != '' and PR_PLANT_CD != null">
                    AND PR_PLANT_CD =#{PR_PLANT_CD}
                </if>
                <if test="PR_PLANT_NM != '' and PR_PLANT_NM != null">
                    AND ${PR_PLANT_NM_L}<include refid="com.sql.dbo"/>getPlantName(#{ses.gateCd}, PR_BUYER_CD, PR_PLANT_CD, #{ses.langCd}) ${PR_PLANT_NM_R}
                </if>
                )
            </if>
			<if test="DATE_FROM != '' and DATE_FROM != null">
			   AND
						<choose>
						  <when test='TYPE == "REG_DATE"'> A.RFX_DATE </when>
						  <when test='TYPE == "RFX_TO_DATE"'> A.RFX_TO_DATE </when>
						  <when test='TYPE == "RFX_FROM_DATE"'> A.RFX_FROM_DATE </when>
						</choose>
					   <![CDATA[>=]]> <include refid="com.sql.toDate"/> #{DATE_FROM}<include refid="com.sql.dateFrom"/>
			</if>
			<if test="DATE_TO != '' and DATE_TO != null">
			   AND
						<choose>
						  <when test='TYPE == "REG_DATE"'> A.RFX_DATE </when>
						  <when test='TYPE == "RFX_TO_DATE"'> A.RFX_TO_DATE </when>
						  <when test='TYPE == "RFX_FROM_DATE"'> A.RFX_FROM_DATE </when>
						</choose>
						<![CDATA[<=]]> <include refid="com.sql.toDate"/> #{DATE_TO}<include refid="com.sql.dateTo"/>
			</if>

			<if test="PR_TYPE != '' and PR_TYPE != null">
			   AND A.PR_TYPE = #{PR_TYPE}
			</if>
			<if test="BUYER_CD != '' and BUYER_CD != null">
			   AND A.BUYER_CD = #{ses.companyCd}
			</if>
			<if test="RFX_NUM != '' and RFX_NUM != null">
			   AND UPPER(A.RFX_NUM) <include refid="com.sql.likeL"/> #{RFX_NUM} <include refid="com.sql.likeR"/>
			</if>
			<if test="RFX_SUBJECT != '' and RFX_SUBJECT != null">
			  AND UPPER(A.RFX_SUBJECT) <include refid="com.sql.likeL"/>#{RFX_SUBJECT}<include refid="com.sql.likeR"/>
			</if>
			<if test="CTRL_USER_ID != '' and CTRL_USER_ID != null">
			   AND UPPER(A.CTRL_USER_ID) <include refid="com.sql.likeL"/>#{CTRL_USER_ID}<include refid="com.sql.likeR"/>
			</if>
			<if test="CTRL_USER_NM != '' and CTRL_USER_NM != null">
			   AND UPPER(A.CTRL_USER_NM) <include refid="com.sql.likeL"/>#{CTRL_USER_NM}<include refid="com.sql.likeR"/>
			</if>
			<if test="PROGRESS_CD != '' and PROGRESS_CD != null">
			   AND CASE WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_FROM_DATE  AND <include refid="com.sql.sysdate"/> <![CDATA[<]]> A.RFX_TO_DATE THEN '2700'
			            WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_TO_DATE THEN '2750'  ELSE A.PROGRESS_CD END IN
				<foreach item="item" index="index" collection="PROGRESS_CD_LIST" open="(" separator="," close=")">
             		#{item}
           		</foreach>
			</if>
			<if test="VENDOR_OPEN_TYPE != '' and VENDOR_OPEN_TYPE != null">
			   AND A.VENDOR_OPEN_TYPE = #{VENDOR_OPEN_TYPE}
			</if>
			<if test="VENDOR_SLT_TYPE != '' and VENDOR_SLT_TYPE != null">
			   AND A.VENDOR_SLT_TYPE = #{VENDOR_SLT_TYPE}
			</if>

			ORDER BY A.RFX_NUM DESC
						 ,A.RFX_CNT DESC

		</select>

    	<update id="transferBdCtrlUser" parameterType="hashMap">
            UPDATE STOPBDHD SET
                 MOD_DATE = <include refid="com.sql.sysdate"/>
                ,MOD_USER_ID = #{ses.userId}
                <if test="CTRL_USER_ID != '' and CTRL_USER_ID != null">
                ,CTRL_USER_ID = #{CTRL_USER_ID}
                ,CTRL_USER_NM = #{CTRL_USER_NM}
                </if>
                <if test="OPEN_BID_USER_ID != '' and OPEN_BID_USER_ID != null">
                ,OPEN_BID_USER_ID = #{OPEN_BID_USER_ID}
                </if>
            WHERE GATE_CD=#{ses.gateCd}
            AND BUYER_CD = #{BUYER_CD}
            AND RFX_NUM = #{RFX_NUM}
            AND RFX_CNT = #{RFX_CNT}
	    </update>


        <!--BD0320P01-->
       <select id="getRfqQtaList" parameterType="hashMap" resultType="hashMap">
                SELECT
                     A.VENDOR_CD
                    ,<include refid="com.sql.dbo"/>GETVENDORNAME(A.GATE_CD, A.VENDOR_CD, #{ses.langCd}) AS VENDOR_NM
                    ,(CASE WHEN A.PROGRESS_CD = '300' THEN 'Y' ELSE 'N' END) AS QTA_YN
                    ,(CASE B.SETTLE_YN WHEN '1' THEN 'Y' WHEN '0' THEN 'N' ELSE <include refid="com.sql.nvl"/>(B.SETTLE_YN,'N') END) AS SETTLE_YN
                    ,B.VENDOR_USER_NM
                    ,B.VENDOR_USER_TEL_NUM
                    ,B.QTA_NUM
                    ,B.QTA_CNT
                    ,CASE WHEN C.OPEN_BID_DATE IS NULL THEN 0
                    	  ELSE CASE WHEN A.PROGRESS_CD = '300' THEN B.QTA_AMT ELSE 0 END
                     END AS QTA_AMT
                    ,<include refid="com.sql.dbo"/>GETTOCHAR(D.RECEIPT_DATE,'YYYYMMDD') RECEIPT_DATE
                    ,<include refid="com.sql.dbo"/>GETTOCHAR(B.SUBMIT_DATE,'YYYY-MM-DD HH24:MI:SS') SUBMIT_DATE
                    ,(CASE WHEN A.PROGRESS_CD = '150' OR A.GIVEUP_FLAG = '1' THEN 'Y' ELSE 'N' END) AS GIVE_UP_YN
                    ,B.REG_IP_ADDR IP_ADDR
                    ,C.PROGRESS_CD
                    ,A.NEGO_RESULT_TYPE
                    ,A.GIVEUP_RMK
                    <if test="_databaseId == 'mssql'">
                           ,<include refid="com.sql.dbo"/>getGmtDate(D.RFX_FROM_DATE, #{ses.userGmt}, #{ses.systemGmt}, 'yyyy-MM-dd')
                            <include refid="com.sql.stringMerge"/> ' '
                            <include refid="com.sql.stringMerge"/>SUBSTRING(LEFT(CONVERT(NVARCHAR(20),  D.RFX_FROM_DATE, 108), 5),1,2) <include refid="com.sql.stringMerge"/> ':'
                            <include refid="com.sql.stringMerge"/>SUBSTRING(LEFT(CONVERT(NVARCHAR(20),  D.RFX_FROM_DATE, 108), 5),4,2)
                            <include refid="com.sql.stringMerge"/> ' ~ ' <include refid="com.sql.stringMerge"/>
                            <include refid="com.sql.dbo"/>getGmtDate(D.RFX_TO_DATE, #{ses.userGmt}, #{ses.systemGmt}, 'yyyy-MM-dd')
                            <include refid="com.sql.stringMerge"/> ' '
                            <include refid="com.sql.stringMerge"/>SUBSTRING(LEFT(CONVERT(NVARCHAR(20),  D.RFX_TO_DATE, 108), 5),1,2) <include refid="com.sql.stringMerge"/> ':'
                            <include refid="com.sql.stringMerge"/>SUBSTRING(LEFT(CONVERT(NVARCHAR(20),  D.RFX_TO_DATE, 108), 5),4,2) AS QTA_RFX_FROM_TO_DATE
                    </if>
                FROM (
                     SELECT
                         A.GATE_CD
                        ,A.BUYER_CD
                        ,A.RFX_NUM
                        ,A.RFX_CNT
                        ,A.VENDOR_CD
                        ,MAX(A.PROGRESS_CD)  AS PROGRESS_CD
                        ,MAX(A.GIVEUP_FLAG)  AS GIVEUP_FLAG
                        ,MAX(A.RECEIPT_DATE) AS RECEIPT_DATE
                        ,MAX(A.GIVEUP_DATE)  AS GIVEUP_DATE
                        ,MAX(A.NEGO_RESULT_TYPE) AS NEGO_RESULT_TYPE
                        ,MAX(A.GIVEUP_RMK)   AS GIVEUP_RMK
                     FROM STOPBDVN A
                     WHERE A.GATE_CD=#{ses.gateCd}
                     AND A.BUYER_CD = #{ses.companyCd}
                     AND A.RFX_NUM = #{RFX_NUM}
                     AND A.RFX_CNT = #{RFX_CNT}
                     AND A.DEL_FLAG = '0'
                     GROUP BY A.GATE_CD
                        ,A.BUYER_CD
                        ,A.RFX_NUM
                        ,A.RFX_CNT
                        ,A.VENDOR_CD
                     ) A LEFT OUTER JOIN ( SELECT A.VENDOR_CD
                                                 ,MAX(A.VENDOR_USER_NM) VENDOR_USER_NM
                                                 ,MAX(A.VENDOR_USER_TEL_NUM) VENDOR_USER_TEL_NUM
                                                 ,MAX(A.QTA_NUM) QTA_NUM
                                                 ,A.QTA_CNT
                                                 ,MAX(A.REG_DATE) REG_DATE
                                                 ,MAX(A.SUBMIT_DATE) SUBMIT_DATE
                                                 ,SUM(B.QTA_AMT) QTA_AMT
                                                 ,MAX(B.SLT_FLAG) SETTLE_YN
                                                 ,MAX(A.REG_IP_ADDR) REG_IP_ADDR
                                            FROM STOPBQHD A JOIN STOPBQDT B ON A.GATE_CD = B.GATE_CD
                                                                           AND A.BUYER_CD = B.BUYER_CD
                                                                           AND A.QTA_NUM = B.QTA_NUM
                                                                           AND A.QTA_CNT = B.QTA_CNT
                                                                           AND A.DEL_FLAG = '0'
                                                                           AND B.DEL_FLAG = '0'
                                                                           AND B.PROGRESS_CD = '300'
                                            WHERE A.GATE_CD = #{ses.gateCd}
                                            AND A.BUYER_CD = #{ses.companyCd}
                                            AND A.RFX_NUM = #{RFX_NUM}
                                            AND A.RFX_CNT = #{RFX_CNT}
                                            GROUP BY A.VENDOR_CD
                                                   , A.QTA_CNT                  ) B ON A.VENDOR_CD = B.VENDOR_CD
                                 JOIN STOPBDHD C ON A.GATE_CD = C.GATE_CD
                                                 AND A.BUYER_CD = C.BUYER_CD
                                                 AND A.RFX_NUM = C.RFX_NUM
                                                 AND A.RFX_CNT = C.RFX_CNT
                                 LEFT OUTER JOIN STOPBDVO D ON D.GATE_CD = A.GATE_CD
										                   AND D.RFX_NUM = A.RFX_NUM
										                   AND D.RFX_CNT = A.RFX_CNT
										                   AND D.VENDOR_CD = A.VENDOR_CD
							   			                   AND D.DEL_FLAG = '0'
							   			                   AND D.QTA_CNT = B.QTA_CNT
       </select>



	<!-- BD0330 -->
    <select id="getBqList" resultType="hashmap">
        SELECT DISTINCT
			<if test="_databaseId == 'mssql'">
			     (SELECT STUFF((SELECT ',' + PR_BUYER_NM FROM
			                   (SELECT DISTINCT <include refid="com.sql.dbo"/>getBuyerName(GATE_CD, PR_BUYER_CD, #{ses.langCd}) AS PR_BUYER_NM
			                    FROM STOPBDDT WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) RQDT FOR XML PATH('')),1,1,'')) AS PR_BUYER_NM
			</if>
			<if test="_databaseId == 'oracle'">
			   (SELECT LISTAGG(PR_BUYER_NM, ',')  FROM
								(SELECT DISTINCT  GETCOMPANYNAME(GATE_CD, PR_BUYER_CD, #{ses.langCd}) AS PR_BUYER_NM

								 FROM STOPBDDT WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) RQDT) AS PR_BUYER_NM
			,(SELECT DISTINCT   GETPLANTNAME(GATE_CD, PR_BUYER_CD,PR_PLANT_CD, #{ses.langCd}) AS PR_PLANT_NM
							 FROM STOPBDDT WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) AS PR_PLANT_NM
			</if>
             , B.RFX_NUM
             , B.RFX_CNT
             , A.RFX_SUBJECT
             , A.RFX_TYPE
             , A.PR_REQ_TYPE
             , A.VENDOR_OPEN_TYPE
             , A.VENDOR_SLT_TYPE
             , A.PRC_SLT_TYPE
             , B.VENDOR_CD
             , <include refid="com.sql.dbo"/>GETVENDORNAME(#{ses.gateCd},B.VENDOR_CD,#{ses.langCd}) AS VENDOR_NM
             , B.QTA_NUM
             , B.QTA_CNT
             , B.QTA_AMT
             , <include refid="com.sql.dbo"/>GETTOCHAR(B.SUBMIT_DATE, 'YYYY-MM-DD HH24:MI') AS SUBMIT_DATE
             , <include refid="com.sql.dbo"/>GETTOCHAR(B.VALID_TO_DATE,'YYYYMMDD') AS VALID_TO_DATE
             , A.CTRL_USER_NM
             , CASE WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_TO_DATE THEN '2750'  ELSE A.PROGRESS_CD END AS PROGRESS_CD
             , A.BUYER_CD
			 , A.PROGRESS_CD
			 , A.SIGN_STATUS
			 , A.SIGN_STATUS2
			 , <include refid="com.sql.dbo"/>GETTOCHAR(A.RFX_DATE,'YYYY-MM-DD HH24:MI') RFX_DATE
			 , A.PR_TYPE
          FROM STOPBDHD A
          JOIN STOPBQHD B ON (A.GATE_CD = B.GATE_CD
          					AND A.BUYER_CD = B.BUYER_CD
          					AND A.RFX_NUM = B.RFX_NUM
          					AND A.RFX_CNT = B.RFX_CNT
          					AND B.DEL_FLAG = 0)
          JOIN STOPBDVN C ON (C.GATE_CD = B.GATE_CD
	  				        AND C.RFX_NUM = B.RFX_NUM
	  				        AND C.RFX_CNT = B.RFX_CNT
	  				        AND C.VENDOR_CD = B.VENDOR_CD
	  				        AND C.DEL_FLAG = 0)
          JOIN STOPBDDT D ON (D.GATE_CD = A.GATE_CD
          				  AND D.RFX_NUM = A.RFX_NUM
          				  AND D.RFX_CNT = A.RFX_CNT
          				  AND D.DEL_FLAG = 0)
          JOIN STOPBQDT E ON (E.GATE_CD = C.GATE_CD
	                      AND E.RFX_NUM = C.RFX_NUM
	                      AND E.RFX_CNT = C.RFX_CNT
	                      AND E.RFX_SQ = C.RFX_SQ
	                      AND E.VENDOR_CD = C.VENDOR_CD
	                      AND E.QTA_NUM = B.QTA_NUM
					      AND E.QTA_CNT = B.QTA_CNT
	                      AND E.PROGRESS_CD = '300'
	                      AND E.DEL_FLAG = '0')
         WHERE A.GATE_CD = #{ses.gateCd}
           AND A.DEL_FLAG = '0'
           AND CASE WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_TO_DATE THEN '2750' ELSE A.PROGRESS_CD END IN ('2750','2800','2850','2900','2950','1400')
        <if test="(PR_BUYER_CD != null and PR_BUYER_CD != '') or (PR_BUYER_NM != null and PR_BUYER_NM != '') ">
            AND EXISTS (SELECT 1 FROM STOPBDDT
            WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT AND DEL_FLAG = '0'
            <if test="PR_BUYER_CD != '' and PR_BUYER_CD != null">
                AND PR_BUYER_CD =#{PR_BUYER_CD}
            </if>
            <if test="PR_BUYER_NM != '' and PR_BUYER_NM != null">
                AND <include refid="com.sql.dbo"/>getBuyerName(A.GATE_CD, PR_BUYER_CD, #{ses.langCd}) <include refid="com.sql.likeL"/> #{PR_BUYER_NM} <include refid="com.sql.likeR"/>
            </if>
            )
        </if>
        <if test="(PR_PLANT_CD != null and PR_PLANT_CD != '') or (PR_PLANT_NM != null and PR_PLANT_NM != '') ">
            AND EXISTS (SELECT 1 FROM STOPBDDT
            WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT AND DEL_FLAG = '0'
            <if test="PR_PLANT_CD != '' and PR_PLANT_CD != null">
                AND PR_PLANT_CD =#{PR_PLANT_CD}
            </if>
            <if test="PR_PLANT_NM != '' and PR_PLANT_NM != null">
                AND ${PR_PLANT_NM_L}<include refid="com.sql.dbo"/>getPlantName(#{ses.gateCd}, PR_BUYER_CD, PR_PLANT_CD, #{ses.langCd}) ${PR_PLANT_NM_R}
            </if>
            )
        </if>
		<!-- 조회조건 : 구매요청유형-->
		<if test="PR_TYPE != '' and PR_TYPE != null">
            AND A.PR_TYPE <include refid="com.sql.likeL"/> #{PR_TYPE} <include refid="com.sql.likeR"/>
        </if>
		<!-- 조회조건 : 협력사 코드 -->
		<if test="VENDOR_CD != '' and VENDOR_CD != null">
            AND B.VENDOR_CD <include refid="com.sql.likeL"/> #{VENDOR_CD} <include refid="com.sql.likeR"/>
        </if>
		<!-- 조회조건 : 협력사 명 -->
		<if test="VENDOR_NM != '' and VENDOR_NM != null">
            AND <include refid="com.sql.dbo"/>GETVENDORNAME(#{ses.gateCd},B.VENDOR_CD,#{ses.langCd}) <include refid="com.sql.likeL"/> #{VENDOR_NM} <include refid="com.sql.likeR"/>
        </if>
		<!-- 조회조건 : 요청일 -->
        <if test="TYPE != '' and TYPE != null and TYPE == 'REQ'.toString()">
            <if test="FROM_DATE != '' and FROM_DATE != null">
                AND A.RFX_DATE <![CDATA[>=]]> <include refid="com.sql.toDate"/>#{FROM_DATE}<include refid="com.sql.dateFrom"/>
            </if>
            <if test="TO_DATE != '' and TO_DATE != null">
                AND A.RFX_DATE <![CDATA[<=]]> <include refid="com.sql.toDate"/>#{TO_DATE}<include refid="com.sql.dateTo"/>
            </if>
        </if>
        <!-- 조회조건 : 종료일 -->
        <if test="TYPE != '' and TYPE != null and TYPE == 'END'.toString()">
            <if test="FROM_DATE != '' and FROM_DATE != null">
                AND A.RFQ_TO_DATE <![CDATA[>=]]> <include refid="com.sql.toDate"/>#{FROM_DATE}<include refid="com.sql.dateFrom"/>
            </if>
            <if test="TO_DATE != '' and TO_DATE != null">
                AND A.RFQ_TO_DATE <![CDATA[<=]]> <include refid="com.sql.toDate"/>#{TO_DATE}<include refid="com.sql.dateTo"/>
            </if>
        </if>
        <!-- 조회조건 : 시작일 -->
        <if test="TYPE != '' and TYPE != null and TYPE == 'STR'.toString()">
            <if test="FROM_DATE != '' and FROM_DATE != null">
                AND A.RFQ_FROM_DATE <![CDATA[>=]]> <include refid="com.sql.toDate"/>#{FROM_DATE}<include refid="com.sql.dateFrom"/>
            </if>
            <if test="TO_DATE != '' and TO_DATE != null">
                AND A.RFQ_FROM_DATE <![CDATA[<=]]> <include refid="com.sql.toDate"/>#{TO_DATE}<include refid="com.sql.dateTo"/>
            </if>
        </if>
        <!-- 조회조건 : 오청번호-->
        <if test="RFX_NUM != '' and RFX_NUM != null">
            AND A.RFX_NUM <include refid="com.sql.likeL"/> #{RFX_NUM} <include refid="com.sql.likeR"/>
        </if>
        <!-- 조회조건 : 요청명-->
        <if test="RFX_SUBJECT != '' and RFX_SUBJECT != null">
            AND A.RFX_SUBJECT <include refid="com.sql.likeL"/> #{RFX_SUBJECT} <include refid="com.sql.likeR"/>
        </if>
        <!-- 조회조건 : 구매담당자 ID-->
        <if test="CTRL_USER_ID != '' and CTRL_USER_ID != null">
            AND A.CTRL_USER_ID <include refid="com.sql.likeL"/> #{CTRL_USER_ID} <include refid="com.sql.likeR"/>
        </if>
        <!-- 조회조건 : 구매담당자명-->
        <if test="CTRL_USER_NM != '' and CTRL_USER_NM != null">
            AND A.CTRL_USER_NM <include refid="com.sql.likeL"/> #{CTRL_USER_NM} <include refid="com.sql.likeR"/>
        </if>
        <!-- 조회조건 : 진행상태-->
        <!-- <if test="PROGRESS_CD != '' and PROGRESS_CD != null">
           AND CASE WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_TO_DATE THEN '2750' ELSE A.PROGRESS_CD END = #{PROGRESS_CD}
        </if> -->
        <if test="PROGRESS_CD != '' and PROGRESS_CD != null">
           AND CASE WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_TO_DATE THEN '2750' ELSE A.PROGRESS_CD END IN
            <foreach item="item" index="index" collection="PROGRESS_CD_LIST" open="(" separator="," close=")">
             #{item}
           </foreach>
        </if>
        <!-- 조회조건 : 지명방식-->
        <if test="VENDOR_OPEN_TYPE != '' and VENDOR_OPEN_TYPE != null">
            AND A.VENDOR_OPEN_TYPE = #{VENDOR_OPEN_TYPE}
        </if>
		<!-- 조회조건 : 지명방식-->
		<if test="VENDOR_SLT_TYPE != '' and VENDOR_SLT_TYPE != null">
            AND A.VENDOR_SLT_TYPE = #{VENDOR_SLT_TYPE}
        </if>
        ORDER BY <include refid="com.sql.dbo"/>GETTOCHAR(A.RFX_DATE,'YYYY-MM-DD HH24:MI') DESC, B.RFX_NUM DESC, B.RFX_CNT DESC, B.VENDOR_CD
    </select>



	<!-- BD0340 -->
    <select id="getBdOpenSettleTargetList" resultType="hashmap">
		SELECT DISTINCT
			<if test="_databaseId == 'mssql'">
			     (SELECT STUFF((SELECT ',' + PR_BUYER_NM FROM
			                   (SELECT DISTINCT <include refid="com.sql.dbo"/>getBuyerName(GATE_CD, PR_BUYER_CD, #{ses.langCd}) AS PR_BUYER_NM
			                    FROM STOPBDDT WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) RQDT FOR XML PATH('')),1,1,'')) AS PR_BUYER_NM
			</if>
			<if test="_databaseId == 'oracle'">
			    (SELECT LISTAGG(PR_BUYER_NM, ',')  FROM
			                        (SELECT DISTINCT <include refid="com.sql.dbo"/>GETCOMPANYNAME(GATE_CD, PR_BUYER_CD, #{ses.langCd}) AS PR_BUYER_NM

			                         FROM STOPBDDT WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) RQDT) AS PR_BUYER_NM
			</if>
			<if test="_databaseId == 'oracle'">
				,(SELECT DISTINCT  <include refid="com.sql.dbo"/>GETPLANTNAME(GATE_CD, PR_BUYER_CD,PR_PLANT_CD, #{ses.langCd}) AS PR_PLANT_NM
								 FROM STOPBDDT WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) AS PR_PLANT_NM
			</if>
			,A.GATE_CD
			,A.BUYER_CD
			,A.RFX_NUM
			,A.RFX_CNT
			,A.REG_DATE
			,A.REG_USER_ID
			,A.MOD_DATE
			,A.MOD_USER_ID
			,A.DEL_FLAG
			,A.RFX_TYPE
			,A.RFX_SUBJECT
			,A.RFX_DATE
			,A.PR_TYPE
			,A.PR_REQ_TYPE
			,A.CTRL_USER_ID
			,A.CTRL_USER_NM
			<if test="_databaseId == 'mssql'">
				,<include refid="com.sql.toDateChar"/>(CASE WHEN E.RFX_FROM_DATE IS NULL THEN A.RFX_FROM_DATE ELSE E.RFX_FROM_DATE END,'YYYY-MM-DD HH:MM') RFX_FROM_DATE
				,<include refid="com.sql.toDateChar"/>(CASE WHEN E.RFX_TO_DATE IS NULL THEN A.RFX_TO_DATE ELSE E.RFX_TO_DATE END,'YYYY-MM-DD HH:MM') RFX_TO_DATE
			</if>
			<if test="_databaseId == 'oracle'">
				,<include refid="com.sql.toDateChar"/>(CASE WHEN E.RFX_FROM_DATE IS NULL THEN A.RFX_FROM_DATE ELSE E.RFX_FROM_DATE END,'YYYY-MM-DD HH24:MI') RFX_FROM_DATE
				,<include refid="com.sql.toDateChar"/>(CASE WHEN E.RFX_TO_DATE IS NULL THEN A.RFX_TO_DATE ELSE E.RFX_TO_DATE END,'YYYY-MM-DD HH24:MI') RFX_TO_DATE
				,<include refid="com.sql.toDateChar"/>(A.RFX_BF_DAY1,'YYYY-MM-DD HH24:MI') RFX_TO_DATE
				,<include refid="com.sql.toDateChar"/>(A.RFX_BF_DAY2,'YYYY-MM-DD HH24:MI') RFX_TO_DATE
			</if>
			,A.VENDOR_OPEN_TYPE
			,A.VENDOR_SLT_TYPE
			,A.PRC_SLT_TYPE
			,A.CUR
			,A.SHIPPER_TYPE
			,A.DELY_TERMS
			,A.PAY_TERMS
			,A.PRIVATE_RMK
			,A.RMK
			,A.ATT_FILE_NUM
			,A.ATT_FILE_NUM_IN
			,A.APP_DOC_NUM
			,A.APP_DOC_NUM2
			,A.APP_DOC_CNT
			,A.APP_DOC_CNT2
			,A.SIGN_STATUS
			,A.SIGN_STATUS2
			,A.SIGN_DATE
			,A.SIGN_DATE2
			,A.FROM_MOD_RMK
			,A.TO_EXTEND_RMK
			,A.FORCE_CLOSE_RMK
			,CASE WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_FROM_DATE  AND <include refid="com.sql.sysdate"/> <![CDATA[<]]> A.RFX_TO_DATE THEN '2700'
			      WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_TO_DATE THEN '2750'  ELSE A.PROGRESS_CD END AS PROGRESS_CD

			<if test="_databaseId == 'mssql'">
			,(
				SELECT CONVERT(VARCHAR,COUNT(DISTINCT VENDOR_CD)) FROM STOPBQDT WHERE GATE_CD = A.GATE_CD
				                                AND BUYER_CD = A.BUYER_CD
				                                AND RFX_NUM = A.RFX_NUM
				                                AND RFX_CNT = A.RFX_CNT
				                                AND PROGRESS_CD = '300'
				                                AND DEL_FLAG = '0'
			 ) <include refid="com.sql.stringMerge"/> ' / ' <include refid="com.sql.stringMerge"/>
			 (
				SELECT CONVERT(VARCHAR,COUNT(DISTINCT VENDOR_CD)) FROM STOPBDVN WHERE GATE_CD = A.GATE_CD
				                                AND BUYER_CD = A.BUYER_CD
				                                AND RFX_NUM = A.RFX_NUM
				                                AND RFX_CNT = A.RFX_CNT
				                                AND DEL_FLAG = '0'
			 )
			 VENDOR_CNT
			</if>
			<if test="_databaseId == 'oracle'">
			,(
				SELECT TO_CHAR(COUNT(DISTINCT VENDOR_CD)) FROM STOPBDVN WHERE GATE_CD = A.GATE_CD
				                                AND BUYER_CD = A.BUYER_CD
				                                AND RFX_NUM = A.RFX_NUM
				                                AND RFX_CNT = A.RFX_CNT
				                                AND PROGRESS_CD IN ('150', '300') -- 포기, 제출
				                                AND DEL_FLAG = '0'
			 ) <include refid="com.sql.stringMerge"/> ' / ' <include refid="com.sql.stringMerge"/>
			 (
				SELECT TO_CHAR(COUNT(DISTINCT VENDOR_CD)) FROM STOPBDVN WHERE GATE_CD = A.GATE_CD
				                                AND BUYER_CD = A.BUYER_CD
				                                AND RFX_NUM = A.RFX_NUM
				                                AND RFX_CNT = A.RFX_CNT
				                                AND DEL_FLAG = '0'
			 )
			 VENDOR_CNT
			</if>
			, (
				SELECT COUNT(DISTINCT VENDOR_CD) FROM STOPBQDT WHERE GATE_CD = A.GATE_CD
				                                AND BUYER_CD = A.BUYER_CD
				                                AND RFX_NUM = A.RFX_NUM
				                                AND RFX_CNT = A.RFX_CNT
				                                AND PROGRESS_CD = '300'
				                                AND DEL_FLAG = '0'
			 ) AS SUBMIT_VENDOR_CNT

			 , (
                 SELECT COUNT(DISTINCT VENDOR_CD) FROM STOPBDVN WHERE GATE_CD = A.GATE_CD
                                                    AND BUYER_CD = A.BUYER_CD
                                                    AND RFX_NUM = A.RFX_NUM
                                                    AND RFX_CNT = A.RFX_CNT
                                                    AND DEL_FLAG = '0'

             ) AS TOTAL_VENDOR_CNT

            ,CASE WHEN A.PROGRESS_CD = '2650' THEN 'N' WHEN A.PROGRESS_CD = '2850' AND C.NEGO_RESULT_TYPE = '06' THEN 'N' ELSE 'Y' END AS QTOPEN_YN
            ,C.EV_NUM
            ,CASE WHEN D.PROGRESS_CD IS NULL AND A.PRC_SLT_TYPE = 'NGO' THEN '050' ELSE D.PROGRESS_CD END AS EV_STATUS
			,A.OPEN_BID_USER_ID
			,GETUSERINFO(A.GATE_CD,A.OPEN_BID_USER_ID,'USER_NM') AS OPEN_BID_USER_NM
		FROM STOPBDHD A
		JOIN (SELECT DISTINCT EV_NUM
								    ,GATE_CD
								    ,RFX_NUM
								    ,RFX_CNT
								    ,MAX(NEGO_RESULT_TYPE) NEGO_RESULT_TYPE
							   FROM STOPBDVN BDVN WHERE DEL_FLAG = '0'
							   <if test="VENDOR_CD != '' and VENDOR_CD != null">
								  AND BDVN.VENDOR_CD <include refid="com.sql.likeL"/> #{VENDOR_CD} <include refid="com.sql.likeR"/>
							   </if>
							   <if test="VENDOR_NM != '' and VENDOR_NM != null">
								  AND UPPER(GETVENDORNAME(BDVN.GATE_CD,BDVN.VENDOR_CD, #{ses.langCd})) <include refid="com.sql.likeL"/> #{VENDOR_NM} <include refid="com.sql.likeR"/>
							   </if>
							   GROUP BY EV_NUM,GATE_CD,RFX_NUM,RFX_CNT) C ON (C.GATE_CD = A.GATE_CD
											  					          AND C.RFX_NUM = A.RFX_NUM
															   	          AND C.RFX_CNT = A.RFX_CNT)
						LEFT OUTER JOIN STOCEVEM D ON (D.GATE_CD = C.GATE_CD
						                           AND D.EV_NUM = C.EV_NUM
						                           AND D.DEL_FLAG = '0')
						JOIN STOPBDVO E ON E.GATE_CD = A.GATE_CD
										    	  AND E.RFX_NUM = C.RFX_NUM
											      AND E.RFX_CNT = C.RFX_CNT
										    	  AND E.REG_DATE = (SELECT MAX(REG_DATE) FROM STOPBDVO WHERE GATE_CD = E.GATE_CD AND RFX_NUM = E.RFX_NUM AND RFX_CNT = E.RFX_CNT AND DEL_FLAG = '0')
										    	  AND E.DEL_FLAG = '0'
		WHERE A.GATE_CD = #{ses.gateCd}
	  	AND A.DEL_FLAG = '0'
		AND CASE WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_FROM_DATE  AND <include refid="com.sql.sysdate"/> <![CDATA[<]]> A.RFX_TO_DATE THEN '2700'
			     WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_TO_DATE THEN '2750'  ELSE A.PROGRESS_CD END IN ('2750','2800','2850','2900','2950','1400')
        <if test="(PR_BUYER_CD != null and PR_BUYER_CD != '') or (PR_BUYER_NM != null and PR_BUYER_NM != '') ">
            AND EXISTS (SELECT 1 FROM STOPBDDT
            WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT AND DEL_FLAG = '0'
            <if test="PR_BUYER_CD != '' and PR_BUYER_CD != null">
                AND PR_BUYER_CD =#{PR_BUYER_CD}
            </if>
            <if test="PR_BUYER_NM != '' and PR_BUYER_NM != null">
                AND <include refid="com.sql.dbo"/>getBuyerName(A.GATE_CD, PR_BUYER_CD, #{ses.langCd}) <include refid="com.sql.likeL"/> #{PR_BUYER_NM} <include refid="com.sql.likeR"/>
            </if>
            )
        </if>
        <if test="(PR_PLANT_CD != null and PR_PLANT_CD != '') or (PR_PLANT_NM != null and PR_PLANT_NM != '') ">
            AND EXISTS (SELECT 1 FROM STOPBDDT
            WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT AND DEL_FLAG = '0'
            <if test="PR_PLANT_CD != '' and PR_PLANT_CD != null">
                AND PR_PLANT_CD =#{PR_PLANT_CD}
            </if>
            <if test="PR_PLANT_NM != '' and PR_PLANT_NM != null">
                AND ${PR_PLANT_NM_L}<include refid="com.sql.dbo"/>getPlantName(#{ses.gateCd}, PR_BUYER_CD, PR_PLANT_CD, #{ses.langCd}) ${PR_PLANT_NM_R}
            </if>
            )
        </if>
        <if test="DATE_FROM != '' and DATE_FROM != null">
		   AND
					<choose>
					  <when test='TYPE == "REG_DATE"'> A.RFX_DATE </when>
					  <when test='TYPE == "RFX_TO_DATE"'> A.RFX_TO_DATE </when>
					  <when test='TYPE == "RFX_FROM_DATE"'> A.RFX_FROM_DATE </when>
					</choose>
				   <![CDATA[>=]]> <include refid="com.sql.toDate"/> #{DATE_FROM}<include refid="com.sql.dateFrom"/>
		</if>
		<if test="DATE_TO != '' and DATE_TO != null">
		   AND
					<choose>
					  <when test='TYPE == "REG_DATE"'> A.RFX_DATE </when>
					  <when test='TYPE == "RFX_TO_DATE"'> A.RFX_TO_DATE </when>
					  <when test='TYPE == "RFX_FROM_DATE"'> A.RFX_FROM_DATE </when>
					</choose>
					<![CDATA[<=]]> <include refid="com.sql.toDate"/> #{DATE_TO}<include refid="com.sql.dateTo"/>
		</if>

        <if test="PR_TYPE != '' and PR_TYPE != null">
           AND A.PR_TYPE = #{PR_TYPE}
        </if>
        <if test="RFX_NUM != '' and RFX_NUM != null">
           AND UPPER(A.RFX_NUM) <include refid="com.sql.likeL"/> #{RFX_NUM} <include refid="com.sql.likeR"/>
        </if>
        <if test="RFX_SUBJECT != '' and RFX_SUBJECT != null">
          AND UPPER(A.RFX_SUBJECT) <include refid="com.sql.likeL"/> #{RFX_SUBJECT} <include refid="com.sql.likeR"/>
        </if>
        <if test="CTRL_USER_ID != '' and CTRL_USER_ID != null">
           AND UPPER(A.CTRL_USER_ID) <include refid="com.sql.likeL"/> #{CTRL_USER_ID} <include refid="com.sql.likeR"/>
        </if>
        <if test="CTRL_USER_NM != '' and CTRL_USER_NM != null">
           AND A.CTRL_USER_NM <include refid="com.sql.likeL"/> #{CTRL_USER_NM} <include refid="com.sql.likeR"/>
        </if>
        <if test="VENDOR_OPEN_TYPE != '' and VENDOR_OPEN_TYPE != null">
           AND A.VENDOR_OPEN_TYPE = #{VENDOR_OPEN_TYPE}
        </if>
        <if test="RFX_TYPE != '' and RFX_TYPE != null">
           AND A.RFX_TYPE = #{RFX_TYPE}
        </if>
		<!-- <if test="PROGRESS_CD != '' and PROGRESS_CD != null">
		   AND CASE WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_FROM_DATE  AND <include refid="com.sql.sysdate"/> <![CDATA[<]]> A.RFX_TO_DATE THEN '2700'
			   WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_TO_DATE THEN '2750'  ELSE A.PROGRESS_CD END = #{PROGRESS_CD}
		</if> -->
		<if test="PROGRESS_CD != '' and PROGRESS_CD != null">
		   AND CASE WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_FROM_DATE  AND <include refid="com.sql.sysdate"/> <![CDATA[<]]> A.RFX_TO_DATE THEN '2700'
			   WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_TO_DATE THEN '2750'  ELSE A.PROGRESS_CD END IN
			   <foreach item="item" index="index" collection="PROGRESS_CD_LIST" open="(" separator="," close=")">
             	#{item}
           		</foreach>
		</if>
		<if test="VENDOR_SLT_TYPE != '' and VENDOR_SLT_TYPE != null">
		   AND A.VENDOR_SLT_TYPE = #{VENDOR_SLT_TYPE}
		</if>
		<if test="BD_COMPLETION == '2900' ">
		   AND ((A.PRC_SLT_TYPE='NGO' AND D.PROGRESS_CD='300' AND A.PROGRESS_CD='2900') OR( A.PROGRESS_CD='2900' ))
		</if>

			ORDER BY A.RFX_NUM DESC
					 ,A.RFX_CNT DESC
	</select>


    <update id="saveBdOpenHd">
        UPDATE STOPBDHD
           SET PROGRESS_CD = '2800'
			  ,OPEN_BID_DATE    = <include refid="com.sql.sysdate"/>
			  ,OPEN_BID_USER_ID = #{ses.userId}
         WHERE GATE_CD = #{ses.gateCd}
           AND RFX_NUM = #{RFX_NUM}
           AND RFX_CNT = #{RFX_CNT}
    </update>

    <update id="saveBdOpenDt">
        UPDATE STOPBDDT
           SET PROGRESS_CD = '2800'
         WHERE GATE_CD = #{ses.gateCd}
           AND RFX_NUM = #{RFX_NUM}
           AND RFX_CNT = #{RFX_CNT}
    </update>


    <select id="getDecAmtVendorListForBdOpen" resultType="hashmap">
        SELECT DISTINCT A.QTA_NUM
              ,A.QTA_CNT
              ,A.BUYER_CD
              ,A.VENDOR_CD
              ,A.ENC_QTA_AMT AS HENC_QTA_AMT
        FROM STOPBQHD A JOIN STOPBQDT B ON A.GATE_CD   = B.GATE_CD
										AND A.BUYER_CD = B.BUYER_CD
										AND A.QTA_NUM  = B.QTA_NUM
										AND A.QTA_CNT = B.QTA_CNT
										AND B.DEL_FLAG = '0'
										AND B.PROGRESS_CD = '300'
        WHERE A.GATE_CD = #{ses.gateCd}
        AND A.RFX_NUM = #{RFX_NUM}
        AND A.RFX_CNT = #{RFX_CNT}
        AND A.DEL_FLAG = '0'
    </select>


    <select id="getDecAmtItemListForBdOpen" resultType="hashmap">
		SELECT
		  A.GATE_CD
		 ,A.BUYER_CD
		 ,A.QTA_NUM
		 ,A.QTA_CNT
		 ,B.QTA_SQ
		 ,A.VENDOR_CD
		 ,B.ENC_UNIT_PRC AS DENC_UNIT_PRC
		 ,B.ENC_QTA_AMT AS DHENC_QTA_AMT
		FROM STOPBQHD A JOIN STOPBQDT B ON A.GATE_CD   = B.GATE_CD
										AND A.BUYER_CD = B.BUYER_CD
										AND A.QTA_NUM  = B.QTA_NUM
										AND A.QTA_CNT = B.QTA_CNT
										AND B.DEL_FLAG = '0'
										AND B.PROGRESS_CD = '300'
		WHERE A.GATE_CD = #{ses.gateCd}
		<if test="QTA_NUM == null or QTA_NUM == ''">
            AND A.RFX_NUM   = #{RFX_NUM}
		    AND A.RFX_CNT   = #{RFX_CNT}
        </if>
		<if test="QTA_NUM != null and QTA_NUM != ''">
		    AND A.QTA_NUM   = #{QTA_NUM}
		    AND A.QTA_CNT   = #{QTA_CNT}
        </if>
		AND A.DEL_FLAG  = '0'
	</select>


    <update id="updateDecodeBqhd">
        UPDATE STOPBQHD
           SET QTA_AMT = #{HDEC_QTA_AMT}
        WHERE GATE_CD = #{ses.gateCd}
        AND QTA_NUM = #{QTA_NUM}
        AND QTA_CNT = #{QTA_CNT}
    </update>


    <update id="updateDecodeBqdt">
        UPDATE STOPBQDT
           SET UNIT_PRC = #{DDEC_UNIT_PRC}
              ,QTA_AMT = #{DDEC_QTA_AMT}
         WHERE GATE_CD = #{ses.gateCd}
           AND QTA_NUM = #{QTA_NUM}
           AND QTA_CNT = #{QTA_CNT}
           AND QTA_SQ = #{QTA_SQ}
    </update>

    <select id="getDecAmtVendorListForNego" resultType="hashmap">
        SELECT DISTINCT
               CASE WHEN A.NEGO_RESULT_TYPE = '06' AND B.RFX_TO_DATE <![CDATA[<]]> <include refid="com.sql.sysdate"/> THEN '08' ELSE A.NEGO_RESULT_TYPE END AS NEGO_RESULT_TYPE
              ,B.VENDOR_CD
              ,B.QTA_CNT
              ,C.QTA_NUM
              ,C.ENC_QTA_AMT AS HENC_QTA_AMT
        FROM STOPBDVN A JOIN STOPBDVO B ON A.GATE_CD = B.GATE_CD
                                       AND A.RFX_NUM = B.RFX_NUM
                                       AND A.RFX_CNT = B.RFX_CNT
                                       AND A.VENDOR_CD = B.VENDOR_CD
                                       AND B.QTA_CNT = (SELECT MAX(QTA_CNT) FROM STOPBDVO WHERE GATE_CD = B.GATE_CD AND RFX_NUM = B.RFX_NUM AND RFX_CNT = B.RFX_CNT AND VENDOR_CD = B.VENDOR_CD AND DEL_FLAG = '0')
                                       AND B.DEL_FLAG = '0'
                        LEFT JOIN STOPBQHD C ON C.GATE_CD = B.GATE_CD
                                       AND C.RFX_NUM = B.RFX_NUM
                                       AND C.RFX_CNT = B.RFX_CNT
                                       AND C.VENDOR_CD = B.VENDOR_CD
                                       AND C.QTA_CNT = B.QTA_CNT
                                       AND C.DEL_FLAG = '0'
        WHERE A.GATE_CD = #{ses.gateCd}
        AND A.RFX_NUM = #{RFX_NUM}
        AND A.RFX_CNT = #{RFX_CNT}
        AND A.DEL_FLAG = '0'
        AND CASE WHEN A.NEGO_RESULT_TYPE = '06' AND B.RFX_TO_DATE <![CDATA[<]]> <include refid="com.sql.sysdate"/> THEN '08' ELSE A.NEGO_RESULT_TYPE END = '08'
    </select>



    <!-- BD0340P01 -->
    <select id="getBqDocVendorListByBd" resultType="hashmap">
		SELECT *
		  FROM (
			SELECT
				 A.VENDOR_CD
				,<include refid="com.sql.dbo"/>GETVENDORNAME(A.GATE_CD, A.VENDOR_CD, #{ses.langCd}) AS VENDOR_NM
				,DENSE_RANK() OVER (ORDER BY (CASE WHEN A.PROGRESS_CD = '300' THEN C.QTA_AMT ELSE 99999999999999999999 END) ASC) RANK
				,(CASE WHEN A.PROGRESS_CD = '300' THEN C.QTA_NUM ELSE NULL END) AS QTA_NUM
				,(CASE WHEN A.PROGRESS_CD = '300' THEN C.QTA_CNT ELSE NULL END) AS QTA_CNT
				,B.CUR
				,B.RFX_AMT
				,CASE WHEN A.PROGRESS_CD = '300' THEN C.QTA_AMT ELSE 0 END AS QTA_AMT
				,D.SLT_FLAG
				,D.SLT_RMK
				,CASE WHEN A.PROGRESS_CD = '150' OR A.GIVEUP_FLAG = '1' THEN 'Y' ELSE 'N' END AS GIVE_UP_YN
				,CASE WHEN A.PROGRESS_CD = '300' THEN 'Y' ELSE 'N' END AS QTA_YN
				,A.GIVEUP_RMK
			FROM (
					SELECT
						 DISTINCT
						 GATE_CD
						,BUYER_CD
						,RFX_NUM
						,RFX_CNT
						,VENDOR_CD
	                    ,GIVEUP_FLAG
	                    ,GIVEUP_RMK
	                    ,PROGRESS_CD
					FROM STOPBDVN A
					WHERE A.GATE_CD = #{ses.gateCd}
					AND A.DEL_FLAG  = '0'
				  ) A LEFT JOIN STOPBDHD B ON A.GATE_CD = B.GATE_CD
			                         AND A.BUYER_CD = B.BUYER_CD
			                         AND A.RFX_NUM = B.RFX_NUM
			                         AND A.RFX_CNT = B.RFX_CNT
			                         AND B.DEL_FLAG = '0'
				      LEFT JOIN STOPBQHD C ON A.GATE_CD = C.GATE_CD
			                         AND A.BUYER_CD = C.BUYER_CD
			                         AND A.RFX_NUM = C.RFX_NUM
			                         AND A.RFX_CNT = C.RFX_CNT
			                         AND A.VENDOR_CD = C.VENDOR_CD
			                         AND C.DEL_FLAG = '0'
					 LEFT JOIN (
	                        SELECT
	                             GATE_CD
	                            ,BUYER_CD
	                            ,RFX_NUM
	                            ,RFX_CNT
	                            ,VENDOR_CD
	                            ,MAX(SLT_FLAG) SLT_FLAG
	                            ,MAX(SLT_RMK) SLT_RMK
	                        FROM STOPBQDT
	                        WHERE GATE_CD = #{ses.gateCd}
	                        GROUP BY GATE_CD
	                                ,BUYER_CD
	                                ,RFX_NUM
	                                ,RFX_CNT
	                                ,VENDOR_CD
	                        ) D ON A.GATE_CD = D.GATE_CD
	                           AND A.BUYER_CD = D.BUYER_CD
	                           AND A.RFX_NUM = D.RFX_NUM
	                           AND A.RFX_CNT = D.RFX_CNT
	                           AND A.VENDOR_CD = D.VENDOR_CD
			WHERE A.GATE_CD = #{ses.gateCd}
	        <if test="APP_DOC_NUM == null or APP_DOC_NUM == '' ">
	            AND A.RFX_NUM   = #{RFX_NUM}
			    AND A.RFX_CNT   = #{RFX_CNT}
	        </if>
	        <if test="APP_DOC_NUM != null and APP_DOC_NUM != '' ">
	            AND B.APP_DOC_NUM2   = #{APP_DOC_NUM}
			    AND B.APP_DOC_CNT2   = #{APP_DOC_CNT}
	        </if>
		  )
		 WHERE 1 = 1
		 ORDER BY RANK, QTA_AMT
	</select>



    <select id="getBqDocItemListByBq" resultType="hashmap">

		SELECT
			 A.GIVEUP_FLAG
			,B.ITEM_CD
			,B.ITEM_DESC
			,B.ITEM_SPEC
			,B.RFX_QT
			,B.UNIT_CD
			,B.CUR
			,B.UNIT_PRC AS RQ_UNIT_PRC
			,B.RFX_AMT
			,C.SLT_FLAG
			,A.VENDOR_CD
			,<include refid="com.sql.dbo"/>GETVENDORNAME(A.GATE_CD, A.VENDOR_CD, #{ses.langCd}) AS VENDOR_NM
			,(CASE WHEN A.PROGRESS_CD = '300' THEN C.UNIT_PRC ELSE 0 END) AS UNIT_PRC
			,(CASE WHEN A.PROGRESS_CD = '300' THEN C.QTA_AMT  ELSE 0 END) AS QTA_AMT
			,C.SLT_RMK
			,(CASE WHEN A.PROGRESS_CD = '300' THEN C.QTA_NUM  ELSE NULL END) AS QTA_NUM
			,(CASE WHEN A.PROGRESS_CD = '300' THEN C.QTA_CNT  ELSE NULL END) AS QTA_CNT
			,<include refid="com.sql.toDateChar"/>(B.DELY_DATE, 'YYYYMMDD')  AS DELY_DATE
			,B.ATT_FILE_NUM BATT_FILE_NUM
			,(CASE WHEN A.PROGRESS_CD = '300' THEN C.ATT_FILE_NUM ELSE NULL END) AS SATT_FILE_NUM
			,<include refid="com.sql.dbo"/>GETFILECOUNT(B.GATE_CD, B.ATT_FILE_NUM) AS BATT_FILE_CNT
			,(CASE WHEN A.PROGRESS_CD = '300' THEN <include refid="com.sql.dbo"/>GETFILECOUNT(C.GATE_CD, C.ATT_FILE_NUM) ELSE '0' END) AS SATT_FILE_CNT
			,B.RMK AS BRMK
			,(CASE WHEN A.PROGRESS_CD = '300' THEN C.RMK ELSE NULL END) AS SRMK
			,B.PR_BUYER_CD
		FROM STOPBDVN A JOIN STOPBDDT B ON A.GATE_CD = B.GATE_CD
		                                AND A.BUYER_CD = B.BUYER_CD
		                                AND A.RFX_NUM = B.RFX_NUM
		                                AND A.RFX_CNT = B.RFX_CNT
		                                AND A.RFX_SQ = B.RFX_SQ
		                                AND B.DEL_FLAG = '0'
					    JOIN STOPBQDT C ON A.GATE_CD = C.GATE_CD
		                                AND A.BUYER_CD = C.BUYER_CD
		                                AND A.RFX_NUM = C.RFX_NUM
		                                AND A.RFX_CNT = C.RFX_CNT
		                                AND A.RFX_SQ = C.RFX_SQ
		                                AND A.VENDOR_CD = C.VENDOR_CD
		                                AND C.DEL_FLAG = '0'
		                                AND C.QTA_NUM = #{QTA_NUM}
		                                AND C.QTA_CNT = #{QTA_CNT}
		WHERE A.GATE_CD = #{ses.gateCd}
		AND A.RFX_NUM   = #{RFX_NUM}
		AND A.RFX_CNT   = #{RFX_CNT}
		AND A.DEL_FLAG  = '0'
        ORDER BY B.RFX_SQ
	</select>

     <select id="getSignStatus2FromBD" resultType="string">
        SELECT SIGN_STATUS2
          FROM STOPBDHD
         WHERE GATE_CD = #{ses.gateCd}
           ANd RFX_NUM = #{RFX_NUM}
           AND RFX_CNT = #{RFX_CNT}
           AND DEL_FLAG = '0'
    </select>

    <update id="updateBdhdProgress">
        UPDATE STOPBDHD
           SET PROGRESS_CD = #{PROGRESS_CD}
         WHERE GATE_CD = #{ses.gateCd}
           AND RFX_NUM = #{RFX_NUM}
           AND RFX_CNT = #{RFX_CNT}
    </update>

    <update id="updateBddtProgress">
        UPDATE STOPBDDT
           SET PROGRESS_CD = #{PROGRESS_CD}
         WHERE GATE_CD = #{ses.gateCd}
           AND RFX_NUM = #{RFX_NUM}
           AND RFX_CNT = #{RFX_CNT}
    </update>

    <update id="rejectBq">
        UPDATE STOPBQDT
           SET SLT_FLAG = null
			  ,SLT_PRC = null
			  ,SLT_RMK = null
		 WHERE GATE_CD = #{ses.gateCd}
           AND QTA_NUM = #{QTA_NUM}
           AND QTA_CNT = #{QTA_CNT}
           AND SLT_FLAG = 1
    </update>




    <!-- BD0340P02 -->
    <select id="getSettleItemListByBd" resultType="hashmap">
    	SELECT *
    	  FROM (
			SELECT
				 A.GIVEUP_FLAG
				,B.ITEM_CD
				,B.ITEM_DESC
				,B.ITEM_SPEC
				,B.RFX_QT
				,B.UNIT_CD
				,B.CUR
				,<include refid="com.sql.nvl"/>(B.UNIT_PRC,0) AS RFX_PRC
				,B.RFX_AMT
				,C.SLT_FLAG
				,DENSE_RANK() OVER (PARTITION BY B.RFX_SQ ORDER BY (CASE WHEN A.PROGRESS_CD = '300' THEN C.QTA_AMT ELSE 99999999999999999999 END) ASC) RANK
				,A.VENDOR_CD
				,<include refid="com.sql.dbo"/>GETVENDORNAME(A.GATE_CD, A.VENDOR_CD, #{ses.langCd}) AS VENDOR_NM
				,(CASE WHEN A.PROGRESS_CD = '300' THEN C.UNIT_PRC ELSE 0 END) AS UNIT_PRC
				,(CASE WHEN A.PROGRESS_CD = '300' THEN C.QTA_AMT  ELSE 0 END) AS QTA_AMT
				,C.SLT_RMK
				,(CASE WHEN A.PROGRESS_CD = '300' THEN C.QTA_NUM ELSE NULL END) AS QTA_NUM
				,(CASE WHEN A.PROGRESS_CD = '300' THEN C.QTA_CNT ELSE NULL END) AS QTA_CNT
				,<include refid="com.sql.toDateChar"/>(B.DELY_DATE, 'YYYYMMDD') AS DELY_DATE
				,B.ATT_FILE_NUM BATT_FILE_NUM
				,(CASE WHEN A.PROGRESS_CD = '300' THEN C.ATT_FILE_NUM ELSE NULL END) AS SATT_FILE_NUM
				,<include refid="com.sql.dbo"/>GETFILECOUNT(B.GATE_CD, B.ATT_FILE_NUM) AS BATT_FILE_CNT
				,(CASE WHEN A.PROGRESS_CD = '300' THEN <include refid="com.sql.dbo"/>GETFILECOUNT(C.GATE_CD, C.ATT_FILE_NUM) ELSE '0' END) AS SATT_FILE_CNT
				,B.RMK BRMK
				,(CASE WHEN A.PROGRESS_CD = '300' THEN C.RMK ELSE NULL END) SRMK
				,B.BUYER_CD
				,B.RFX_NUM
				,B.RFX_CNT
				,B.RFX_SQ
				,(CASE WHEN A.PROGRESS_CD = '300' THEN C.QTA_SQ ELSE NULL END) AS QTA_SQ
	            ,B.PR_BUYER_CD
	            ,(CASE WHEN A.PROGRESS_CD = '150' OR A.GIVEUP_FLAG = '1' THEN 'Y' ELSE 'N' END) AS GIVE_UP_YN
				,(CASE WHEN A.PROGRESS_CD = '300' THEN 'Y' ELSE 'N' END) AS QTA_YN
				,A.GIVEUP_RMK
			FROM STOPBDVN A LEFT JOIN STOPBDDT B ON A.GATE_CD = B.GATE_CD
			                                AND A.BUYER_CD = B.BUYER_CD
			                                AND A.RFX_NUM = B.RFX_NUM
			                                AND A.RFX_CNT = B.RFX_CNT
			                                AND A.RFX_SQ = B.RFX_SQ
			                                AND B.DEL_FLAG = '0'
						    LEFT JOIN STOPBQDT C ON A.GATE_CD = C.GATE_CD
			                                AND A.BUYER_CD = C.BUYER_CD
			                                AND A.RFX_NUM = C.RFX_NUM
			                                AND A.RFX_CNT = C.RFX_CNT
			                                AND A.RFX_SQ = C.RFX_SQ
			                                AND A.VENDOR_CD = C.VENDOR_CD
			                                AND C.DEL_FLAG = '0'
	
	
			WHERE A.GATE_CD = #{ses.gateCd}
			AND A.BUYER_CD  = #{BUYER_CD}
			AND A.RFX_NUM   = #{RFX_NUM}
			AND A.RFX_CNT   = #{RFX_CNT}
			AND A.DEL_FLAG  = '0'
		  )
		 WHERE 1 = 1
		 ORDER BY RFX_SQ, RANK, QTA_AMT
	</select>


    <update id="setDocSettleBqdt">
        UPDATE STOPBQDT
           SET SLT_FLAG = #{SLT_FLAG}
			  ,SLT_DATE = <include refid="com.sql.sysdate"/>
			  ,SLT_RMK = #{SLT_RMK}
         WHERE GATE_CD = #{ses.gateCd}
           AND QTA_NUM = #{QTA_NUM}
           AND QTA_CNT = #{QTA_CNT}
    </update>


    <update id="setItemSettleBqdt">
        UPDATE STOPBQDT
           SET SLT_FLAG = #{SLT_FLAG}
			  ,SLT_DATE = <include refid="com.sql.sysdate"/>
			  ,SLT_RMK = #{SLT_RMK}
         WHERE GATE_CD = #{ses.gateCd}
           AND QTA_NUM = #{QTA_NUM}
           AND QTA_CNT = #{QTA_CNT}
           AND QTA_SQ = #{QTA_SQ}
    </update>

    <update id="updateBdhdSignStatus2">
        UPDATE STOPBDHD
           SET SIGN_STATUS2 = #{SIGN_STATUS}
           <if test="APP_DOC_NUM != null and APP_DOC_NUM != ''">
              ,APP_DOC_NUM2 = #{APP_DOC_NUM}
              ,APP_DOC_CNT2 = #{APP_DOC_CNT}
           </if>
              ,PROGRESS_CD = #{PROGRESS_CD}
         WHERE GATE_CD = #{ses.gateCd}
           AND RFX_NUM = #{RFX_NUM}
           AND RFX_CNT = #{RFX_CNT}
    </update>

    <select id="getBqNumListByBdNum" resultType="hashmap">
        SELECT DISTINCT B.QTA_NUM,B.QTA_CNT, B.BUYER_CD
          FROM STOPBDHD A JOIN STOPBQHD B ON (B.GATE_CD = A.GATE_CD
                                                AND B.RFX_NUM = A.RFX_NUM
                                                AND B.RFX_CNT = A.RFX_CNT
                                                AND B.DEL_FLAG = '0')
         WHERE A.GATE_CD = #{ses.gateCd}
           AND A.DEL_FLAG = '0'
        <if test="APP_DOC_NUM == null or APP_DOC_NUM == '' ">
            AND A.RFX_NUM   = #{RFX_NUM}
		    AND A.RFX_CNT   = #{RFX_CNT}
        </if>
        <if test="APP_DOC_NUM != null and APP_DOC_NUM != '' ">
           AND A.APP_DOC_NUM2 = #{APP_DOC_NUM}
           AND A.APP_DOC_CNT2 = #{APP_DOC_CNT}
        </if>
    </select>

    <update id="updateBqSltDate">
        UPDATE STOPBQDT
           SET SLT_DATE = <include refid="com.sql.sysdate"/>
         WHERE GATE_CD = #{ses.gateCd}
           AND QTA_NUM = #{QTA_NUM}
           AND QTA_CNT = #{QTA_CNT}
           AND SLT_FLAG = '1'
    </update>





    <update id="setCancelPrdt">
        UPDATE STOUPODT
           SET PROGRESS_CD = '2100'
              ,MOD_DATE = <include refid="com.sql.sysdate"/>
              ,MOD_USER_ID = #{ses.userId}
         WHERE GATE_CD = #{ses.gateCd}
         <if test="_databaseId == 'oracle'">
           AND (CPO_NO, CPO_SEQ) IN (
                SELECT
                	 PR_NUM AS CPO_NO
                	,PR_SQ AS CPO_SEQ
                FROM STOPBDDT
                WHERE GATE_CD = #{ses.gateCd}
                AND RFX_NUM   = #{RFX_NUM}
                AND RFX_CNT   = #{RFX_CNT}
            )
         </if>
         <if test="_databaseId == 'mssql'">
          AND EXISTS ( SELECT 1
					   FROM STOPBDDT A
					   WHERE A.GATE_CD = #{ses.gateCd}
					   AND A.RFX_NUM = #{RFX_NUM}
					   AND A.RFX_CNT = #{RFX_CNT}
					   AND A.PR_NUM = STOPPRDT.PR_NUM
					   AND A.PR_SQ = STOPPRDT.PR_SQ
					)
         </if>
    </update>

    <!-- 입찰비교(BD0340P03) -->
    <select id="getAdditionalColumnInfos" resultType="hashmap">
    	SELECT *
    	  FROM (
			SELECT
				 BDVN.VENDOR_CD
			   ,<include refid="com.sql.dbo"/>GETVENDORNAME(BDVN.GATE_CD, BDVN.VENDOR_CD, 'KO') AS VENDOR_NM
			   , CROS.COLUMN_NM
			   , CROS.TEMPLATE_ID
			   , CROS.TEMPLATE_TYPE
			   , CROS.TEMPLATE_CNT
			   , 'V'<include refid="com.sql.stringMerge"/>BDVN.VENDOR_CD<include refid="com.sql.stringMerge"/>'_'<include refid="com.sql.stringMerge"/>TEMPLATE_ID AS COLUMN_ID
			   ,(CASE WHEN BDVN.PROGRESS_CD = '300' THEN TO_CHAR(SUM((SELECT QTA_AMT FROM STOPBQDT
														    		   WHERE GATE_CD = BDVN.GATE_CD
																	     AND RFX_NUM = BDVN.RFX_NUM
																	     AND RFX_CNT = BDVN.RFX_CNT
																	     AND RFX_SQ  = BDVN.RFX_SQ
																	     AND VENDOR_CD = BDVN.VENDOR_CD
																	     AND QTA_CNT = B.QTA_CNT))) ELSE NULL END) AS QTA_AMT
		   	   , TO_CHAR(B.QTA_CNT) AS QTA_CNT
		   	   , <include refid="com.sql.nvl"/>(MAX((SELECT SLT_FLAG FROM STOPBQDT
										    		  WHERE GATE_CD = BDVN.GATE_CD
													    AND RFX_NUM = BDVN.RFX_NUM
													    AND RFX_CNT = BDVN.RFX_CNT
													    AND RFX_SQ  = BDVN.RFX_SQ
													    AND VENDOR_CD = BDVN.VENDOR_CD
													    AND QTA_CNT = B.QTA_CNT)), '0') AS SLT_FLAG
			FROM(
				SELECT BDVO.GATE_CD
					  ,BDVO.RFX_NUM
					  ,BDVO.RFX_CNT
					  ,MAX(BDVO.QTA_CNT) AS QTA_CNT
					  ,BDVO.VENDOR_CD
				  FROM STOPBDVO BDVO
				 WHERE BDVO.GATE_CD  = #{ses.gateCd}
				   AND BDVO.RFX_NUM  = #{RFX_NUM}
				   AND BDVO.RFX_CNT  = #{RFX_CNT}
				   AND BDVO.DEL_FLAG = '0'
				 GROUP BY BDVO.GATE_CD
						, BDVO.RFX_NUM
						, BDVO.RFX_CNT
						, BDVO.VENDOR_CD
				) B
			JOIN STOPBDVN BDVN
			    ON (B.GATE_CD   = BDVN.GATE_CD
			    AND B.RFX_NUM   = BDVN.RFX_NUM
				AND B.RFX_CNT   = BDVN.RFX_CNT
				AND B.VENDOR_CD = BDVN.VENDOR_CD)
			CROSS JOIN (
				SELECT 'FINAL_PRC'  AS TEMPLATE_ID, 'PRC'  AS TEMPLATE_TYPE, 'FINAL' AS TEMPLATE_CNT, '최종단가' AS COLUMN_NM FROM DUAL
			  	UNION ALL
			    SELECT 'FINAL_AMT'  AS TEMPLATE_ID, 'AMT'  AS TEMPLATE_TYPE, 'FINAL' AS TEMPLATE_CNT, '최종금액' AS COLUMN_NM FROM DUAL
			   	UNION ALL
			    SELECT 'FINAL_RATE' AS TEMPLATE_ID, 'RATE' AS TEMPLATE_TYPE, 'FINAL' AS TEMPLATE_CNT, '예산대비' AS COLUMN_NM FROM DUAL
			   ) CROS
		 GROUP BY BDVN.GATE_CD
			    , BDVN.VENDOR_CD
			    , BDVN.PROGRESS_CD
			    , CROS.COLUMN_NM
			    , CROS.TEMPLATE_ID
			    , CROS.TEMPLATE_TYPE
			    , CROS.TEMPLATE_CNT
	   			, B.QTA_CNT
		)
		WHERE 1 = 1
		ORDER BY SLT_FLAG DESC
				,QTA_AMT
				,VENDOR_CD
				,(CASE WHEN TEMPLATE_ID = 'FINAL_RATE' THEN '3' ELSE TEMPLATE_ID END) DESC
    </select>

    <select id="doSearchComparisonTable" resultType="hashmap">
		SELECT A.RFX_SQ
             , A.ITEM_CD
             , A.ITEM_DESC
             , A.ITEM_SPEC
             , A.UNIT_CD
             , A.RFX_QT
             , A.UNIT_CD AS UNIT_CD1
             , A.RFX_QT AS RFX_QT1
             , A.VENDOR_NM
             , A.UNIT_PRC
			 , A.RFX_AMT
     <if test="_databaseId == 'oracle'">
         <foreach item="additionalColumnInfo" collection="additionalColumnInfoList">
             ,<include refid="com.sql.nvl"/>(RTRIM(TO_CHAR(${additionalColumnInfo.COLUMN_ID}.AMT, 'FM999,999,999,999,990.9999'),'.'),'0') AS ${additionalColumnInfo.COLUMN_ID}
         </foreach>
     </if>
     <if test="_databaseId == 'mssql'">
        <foreach item="additionalColumnInfo" collection="additionalColumnInfoList">
             ,<include refid="com.sql.nvl"/>(FORMAT(${additionalColumnInfo.COLUMN_ID}.AMT, '#,##0.######'), '0') AS ${additionalColumnInfo.COLUMN_ID}
         </foreach>
     </if>
		  FROM (
			SELECT BDDT.GATE_CD
                 , BDDT.BUYER_CD
                 , BDDT.RFX_NUM
                 , BDDT.RFX_CNT
                 , BDDT.RFX_SQ
                 , BDDT.ITEM_CD
                 , BDDT.ITEM_DESC
                 , BDDT.ITEM_SPEC
                 , BDDT.UNIT_CD
                 , BDDT.RFX_QT
                 , BDDT.DEL_FLAG
                 , BDDT.UNIT_PRC
 	  			 , BDDT.RFX_AMT
                 , <include refid="com.sql.dbo"/>GETVENDORNAME(#{ses.gateCd}, BQDT.VENDOR_CD, #{ses.langCd}) AS  VENDOR_NM
			  FROM STOPBQDT BQDT
 			  JOIN STOPBDDT BDDT
				   ON (BDDT.GATE_CD = BQDT.GATE_CD
				   AND BDDT.RFX_NUM = BQDT.RFX_NUM
				   AND BDDT.RFX_CNT = BQDT.RFX_CNT
				   AND BDDT.RFX_SQ  = BQDT.RFX_SQ
				   AND SLT_FLAG     = '1')
			) A
		<foreach item="additionalColumnInfo" collection="additionalColumnInfoList">
			LEFT OUTER JOIN (
                SELECT DISTINCT BQDT.GATE_CD
                      ,BQDT.RFX_NUM
                      ,BQDT.RFX_SQ
                      ,BQDT.RFX_CNT
                      ,BQDT.RFX_QT
                      ,BQDT.VENDOR_CD
                      ,BQDT.QTA_CNT
                      ,CASE #{additionalColumnInfo.TEMPLATE_TYPE} WHEN 'PRC' THEN BQDT.UNIT_PRC
                      											  WHEN 'AMT' THEN BQDT.QTA_AMT
                      											  ELSE ROUND((BQDT.QTA_AMT/BDDT.RFX_AMT) * 100, 1)
                      	END AS AMT
                FROM STOPBQDT BQDT
                JOIN STOPBDDT BDDT
					 ON BQDT.RFX_NUM = BDDT.RFX_NUM
					 AND BQDT.RFX_CNT = BDDT.RFX_CNT
					 AND BQDT.RFX_SQ  = BDDT.RFX_SQ
					 AND BQDT.QTA_CNT =(SELECT MAX(QTA_CNT) AS QTA_CNT
										  FROM STOPBQDT A
										 WHERE A.RFX_NUM = BDDT.RFX_NUM
										   AND A.RFX_CNT = BDDT.RFX_CNT
										   AND A.RFX_SQ  = BDDT.RFX_SQ
										   AND A.QTA_CNT = #{additionalColumnInfo.QTA_CNT}
										   AND BQDT.VENDOR_CD = #{additionalColumnInfo.VENDOR_CD})
				WHERE BQDT.VENDOR_CD = #{additionalColumnInfo.VENDOR_CD}
                  AND BQDT.DEL_FLAG  = '0'
			) ${additionalColumnInfo.COLUMN_ID}
	            ON (A.GATE_CD = ${additionalColumnInfo.COLUMN_ID}.GATE_CD
	            AND A.RFX_NUM = ${additionalColumnInfo.COLUMN_ID}.RFX_NUM
	            AND A.RFX_CNT = ${additionalColumnInfo.COLUMN_ID}.RFX_CNT
	            AND A.RFX_SQ  = ${additionalColumnInfo.COLUMN_ID}.RFX_SQ)
		</foreach>
		WHERE A.GATE_CD  = #{ses.gateCd}
          AND A.BUYER_CD = #{ses.companyCd}
          AND A.RFX_NUM  = #{RFX_NUM}
          AND A.RFX_CNT  = #{RFX_CNT}
          AND A.DEL_FLAG = '0'
        ORDER BY A.RFX_SQ
    </select>


    <!-- BD0340P04 -->
    <select id="BD0340P04_getVendorListForBDEV" resultType="hashmap">
        	SELECT DISTINCT
				 A.VENDOR_CD
				,C.VENDOR_NM
				,C.CEO_USER_NM
				,A.VENDOR_USER_ID AS USER_ID
				,<include refid="com.sql.dbo"/>getUserName(A.GATE_CD, A.VENDOR_USER_ID, #{ses.langCd}) AS USER_NM
				,A.VENDOR_EMAIL AS EMAIL
			FROM STOPBDVN A JOIN STOPBDHD B ON B.GATE_CD = A.GATE_CD
										   AND B.BUYER_CD = A.BUYER_CD
										   AND B.RFX_NUM = A.RFX_NUM
										   AND B.RFX_CNT = A.RFX_CNT
										   AND B.DEL_FLAG = '0'
						    JOIN STOCVNGL C ON C.GATE_CD = A.GATE_CD
						                   AND C.VENDOR_CD = A.VENDOR_CD
	 	WHERE A.GATE_CD = #{ses.gateCd}
		  AND A.RFX_NUM = #{RFX_NUM}
		  AND A.RFX_CNT = #{RFX_CNT}
		  AND A.DEL_FLAG = '0'
		  AND A.PROGRESS_CD = '300'

    </select>


    <select id="getEveuListForBD" resultType="hashmap">
            SELECT USERS.GATE_CD
                 , USERS.USER_ID  AS USER_ID
                 , <include refid="com.sql.dbo"/>GETUSERNAME(USERS.GATE_CD, USERS.USER_ID, #{ses.langCd}) AS USER_NM
                 , USERS.POSITION_NM
                 ,(SELECT  <include refid="com.sql.nvl"/> (BUYER_NM, BUYER_NM_ENG) FROM STOCOGCM WHERE GATE_CD = USERS.GATE_CD AND BUYER_CD = USERS.COMPANY_CD AND LANG_CD=#{ses.langCd}) AS COMPANY_NM
                 , <include refid="com.sql.dbo"/>GETDEPTNAME(USERS.GATE_CD, USERS.COMPANY_CD, USERS.DEPT_CD, #{ses.langCd}) AS DEPT_NM
              FROM STOCUSER USERS
             WHERE USERS.GATE_CD = #{ses.gateCd}
               AND USERS.DEL_FLAG = '0'
               AND USERS.USER_TYPE = 'B'
    </select>

    <select id="insertEVEN">
        MERGE<include refid="com.sql.mergeInto"/>STOCEVEM<include refid="com.sql.mergeAs"/>A
                USING (SELECT
                          #{ses.gateCd} AS GATE_CD
                        , #{EV_NUM} AS EV_NUM
                        <include refid="com.sql.dual"/>)<include refid="com.sql.mergeAs"/>B
                 ON (A.GATE_CD = B.GATE_CD
                     AND A.EV_NUM = B.EV_NUM
                    )
        WHEN MATCHED THEN
            UPDATE SET
                    MOD_DATE = <include refid="com.sql.sysdate"/>
                  , MOD_USER_ID = #{ses.userId}
                  , DEL_FLAG = '0'
                  , PROGRESS_CD = #{PROGRESS_CD}
                  , EV_NM = #{EV_TPL_SUBJECT}
                  , EV_CTRL_USER_ID = CASE WHEN #{EV_CTRL_USER_ID} != null and #{EV_CTRL_USER_ID} != '' THEN #{EV_CTRL_USER_ID} ELSE EV_CTRL_USER_ID END
                  , EXEC_EV_TPL_NUM = #{EXEC_EV_TPL_NUM}
                  , START_DATE = #{START_DATE}
                  , CLOSE_DATE = #{CLOSE_DATE}
                  , EG_NUM = #{EG_NUM}
                  , ATT_FILE_NUM = #{ATT_FILE_NUM}
                  , EV_TYPE = #{EV_TYPE}
        WHEN NOT MATCHED THEN
            INSERT  (
                    GATE_CD
                  , EV_NUM
                  , REG_DATE
                  , REG_USER_ID
                  , MOD_DATE
                  , MOD_USER_ID
                  , DEL_FLAG
                  , PROGRESS_CD
                  , EV_NM
                  , EV_CTRL_USER_ID
                  , EXEC_EV_TPL_NUM
                  , START_DATE
                  , CLOSE_DATE
                  , EG_NUM
                  , RESULT_ENTER_CD
                  , REQUEST_DATE
                  , COMPLETE_DATE
                  , ATT_FILE_NUM
                  , EV_TYPE
                  , PURCHASE_TYPE
                  , OVER_100_FLAG
            ) VALUES (
                    #{ses.gateCd}
                  , #{EV_NUM}
                  , <include refid="com.sql.sysdate"/>
                  , #{ses.userId}
                  , <include refid="com.sql.sysdate"/>
                  , #{ses.userId}
                  , '0'
                  , #{PROGRESS_CD}
                  , #{EV_TPL_SUBJECT}
                  , #{ses.userId} -- EV_CTRL_USER_ID
                  , #{EXEC_EV_TPL_NUM}
                  , #{START_DATE}
                  , #{CLOSE_DATE}
                  , null -- EG_NUM
                  , null -- RESULT_ENTER_CD
                  , null -- REQUEST_DATE
                  , null -- COMPLETE_DATE
                  , #{ATT_FILE_NUM}
                  , #{EV_TYPE}
                  , null -- PURCHASE_TYPE
                  , '0'
            <include refid="com.sql.mergeEnd"/>
    </select>

    <delete id="deleteEVEU">
        DELETE FROM STOCEVEU
              WHERE GATE_CD = #{ses.gateCd}
                AND EV_NUM = #{EV_NUM}
    </delete>

    <insert id="insertEVEU">
        INSERT INTO STOCEVEU(
                  GATE_CD
                , EV_NUM
                , VENDOR_CD
                , VENDOR_SQ
                , EV_USER_ID
                , REG_DATE
                , REG_USER_ID
                , MOD_DATE
                , MOD_USER_ID
                , DEL_FLAG
                , REP_FLAG
                , EV_SCORE
                , PROGRESS_CD
                , ATT_FILE_NUM
                , RMK
        ) VALUES (
                  #{ses.gateCd}
                , #{EV_NUM}
                , #{VENDOR_CD}
                , 1
                , #{USER_ID}
                , <include refid="com.sql.sysdate"/>
                , #{ses.userId}
                , <include refid="com.sql.sysdate"/>
                , #{ses.userId}
                , '0'
                , #{REP_FLAG}
                , 0
                , #{PROGRESS_CD}
                , #{ATT_FILE_NUM}
                , #{RMK}
        )
    </insert>

    <select id="getVendorDistinctByBD" resultType="hashmap">
        SELECT DISTINCT A.VENDOR_CD
        FROM STOPBDVN A
        WHERE A.GATE_CD = #{ses.gateCd}
        AND A.BUYER_CD =#{BUYER_CD}
        AND A.DEL_FLAG = '0'
        AND A.RFX_NUM = #{RFX_NUM}
        AND A.RFX_CNT = #{RFX_CNT}
    </select>

    <update id="updateEvNumtoBDVN">
        UPDATE STOPBDVN
           SET EV_NUM = #{EV_NUM}
        WHERE GATE_CD = #{ses.gateCd}
        AND BUYER_CD = #{BUYER_CD}
        AND DEL_FLAG = '0'
        AND RFX_NUM = #{RFX_NUM}
        AND RFX_CNT = #{RFX_CNT}
    </update>

    <select id="getEveuByBD" resultType="hashmap">
        SELECT DISTINCT A.EV_USER_ID
                ,  <include refid="com.sql.dbo"/>GETUSERNAME(B.GATE_CD, B.USER_ID, #{ses.langCd}) AS USER_NM
                 , B.POSITION_NM
                 ,(SELECT
                 	<if test="_databaseId == 'mssql'">
                  	ISNULL  (BUYER_NM, BUYER_NM_ENG)
                  	</if>
                  	<if test="_databaseId == 'oracle'">
                  	  <include refid="com.sql.nvl"/>(BUYER_NM, BUYER_NM_ENG)
                  	</if>
                  FROM STOCOGCM WHERE GATE_CD = B.GATE_CD AND BUYER_CD = B.COMPANY_CD AND LANG_CD=#{ses.langCd}) AS COMPANY_NM
                 , <include refid="com.sql.dbo"/>GETDEPTNAME(B.GATE_CD, B.COMPANY_CD, B.DEPT_CD, #{ses.langCd}) AS DEPT_NM
        FROM STOCEVEU A JOIN STOCUSER B ON (A.GATE_CD = B.GATE_CD
                                        AND A.EV_USER_ID = B.USER_ID)
        WHERE A.GATE_CD = #{ses.gateCd}
        AND A.EV_NUM = #{EV_NUM}
    </select>

    <!-- BD0340P05 -->
    <select id="getBdHdForEV" resultType="hashmap">
                   SELECT
                         A.GATE_CD
                        ,A.BUYER_CD
                        ,A.RFX_NUM
                        ,A.RFX_CNT
                        ,<include refid="com.sql.dbo"/>getGmtDate(A.RFX_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS RFX_DATE
                        ,A.REG_USER_ID
                        ,A.MOD_DATE
                        ,A.MOD_USER_ID
                        ,A.DEL_FLAG
                        ,A.RFX_TYPE
                        ,A.RFX_SUBJECT
                        ,A.RFX_DATE
                        ,A.PR_TYPE
                        ,A.PR_REQ_TYPE
                        ,A.CTRL_USER_ID
                        ,A.CTRL_USER_NM
                        <if test="_databaseId == 'mssql'">
                            ,<include refid="com.sql.dbo"/>getGmtDate(A.RFX_FROM_DATE, #{ses.userGmt}, #{ses.systemGmt}, 'yyyy-MM-dd')
                                <include refid="com.sql.stringMerge"/> ' '
                                <include refid="com.sql.stringMerge"/>SUBSTRING(LEFT(CONVERT(NVARCHAR(20),  A.RFX_FROM_DATE, 108), 5),1,2) <include refid="com.sql.stringMerge"/> ':'
                                <include refid="com.sql.stringMerge"/>SUBSTRING(LEFT(CONVERT(NVARCHAR(20),  A.RFX_FROM_DATE, 108), 5),4,2) AS RFX_FROM_DATE
                            ,<include refid="com.sql.dbo"/>getGmtDate(A.RFX_TO_DATE, #{ses.userGmt}, #{ses.systemGmt}, 'yyyy-MM-dd')
                                <include refid="com.sql.stringMerge"/> ' '
                                <include refid="com.sql.stringMerge"/>SUBSTRING(LEFT(CONVERT(NVARCHAR(20),  A.RFX_TO_DATE, 108), 5),1,2) <include refid="com.sql.stringMerge"/> ':'
                                <include refid="com.sql.stringMerge"/>SUBSTRING(LEFT(CONVERT(NVARCHAR(20),  A.RFX_TO_DATE, 108), 5),4,2) AS RFX_TO_DATE
                        </if>
                        <if test="_databaseId == 'oracle'">
                            ,<include refid="com.sql.dbo"/>getGmtDate(A.RFX_FROM_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) RFX_FROM_DATE
                            ,TO_CHAR(A.RFX_FROM_DATE, 'HH24') AS RFX_FROM_HOUR
                            ,TO_CHAR(A.RFX_FROM_DATE, 'MI') AS RFX_FROM_MIN
                            ,<include refid="com.sql.dbo"/>getGmtDate(A.RFX_TO_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) RFX_TO_DATE
                            ,TO_CHAR(A.RFX_TO_DATE, 'HH24') AS RFX_TO_HOUR
                            ,TO_CHAR(A.RFX_TO_DATE, 'MI') AS RFX_TO_MIN
                            ,<include refid="com.sql.dbo"/>getGmtDate(A.RFX_BF_DAY1, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) RFX_BF_DAY1
                            ,TO_CHAR(A.RFX_BF_DAY1, 'HH24') AS RFX_BF_HOUR1
                            ,TO_CHAR(A.RFX_BF_DAY1, 'MI') AS RFX_BF_MIN1
                            ,<include refid="com.sql.dbo"/>getGmtDate(A.RFX_BF_DAY2, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) RFX_BF_DAY2
                            ,TO_CHAR(A.RFX_BF_DAY2, 'HH24') AS RFX_BF_HOUR2
                            ,TO_CHAR(A.RFX_BF_DAY2, 'MI') AS RFX_BF_MIN2
                        </if>
                        ,A.VENDOR_OPEN_TYPE
                        ,A.VENDOR_SLT_TYPE
                        ,A.PRC_SLT_TYPE
                        ,A.CUR
                        ,A.RFX_AMT
                        ,A.SHIPPER_TYPE
                        ,A.DELY_TERMS
                        ,A.PAY_TERMS
                        ,A.PRIVATE_RMK
                        ,A.RMK
                        ,A.RMK_IN
                        ,A.APP_DOC_NUM
                        ,A.APP_DOC_CNT
                        ,A.SIGN_STATUS
                        ,A.SIGN_DATE
                        ,A.FROM_MOD_RMK
                        ,A.TO_EXTEND_RMK
                        ,A.FORCE_CLOSE_RMK
                        ,CASE WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_FROM_DATE  AND <include refid="com.sql.sysdate"/> <![CDATA[<]]> A.RFX_TO_DATE THEN '2700'
			                  WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_TO_DATE THEN '2750'  ELSE A.PROGRESS_CD END AS PROGRESS_CD
                        ,<include refid="com.sql.dbo"/>GETDEPTNAME(A.GATE_CD, A.BUYER_CD, B.DEPT_CD, #{ses.langCd}) AS CTRL_USER_DEPT
                        ,B.POSITION_NM
                        ,A.PRC_PERCENT
                        ,A.NPRC_PERCENT
                        ,A.ANN_FLAG
                        ,A.BID_PREQ_RMK
                        ,C.EV_NUM
                        ,D.EXEC_EV_TPL_NUM
                        ,D.EV_NM
                        ,<include refid="com.sql.dbo"/>GETTOCHAR(D.REG_DATE,'YYYYMMDD')  AS REG_DATE
                        ,<include refid="com.sql.dbo"/>GETTOCHAR(D.START_DATE,'YYYYMMDD')  AS START_DATE
                        ,<include refid="com.sql.dbo"/>GETTOCHAR(D.CLOSE_DATE,'YYYYMMDD')  AS CLOSE_DATE
                        ,<include refid="com.sql.dbo"/>GETTOCHAR(D.REQUEST_DATE,'YYYYMMDD')  AS REQUEST_DATE
                        ,<include refid="com.sql.dbo"/>GETTOCHAR(D.COMPLETE_DATE,'YYYYMMDD')  AS COMPLETE_DATE
                        ,<include refid="com.sql.dbo"/>GETUSERNAME(D.GATE_CD, D.REG_USER_ID, #{ses.langCd})  AS REG_USER_NM
                        ,<include refid="com.sql.dbo"/>GETCOMCODE(D.GATE_CD, 'M122', D.PROGRESS_CD, '0', #{ses.langCd})  AS PROGRESS_NM
                        ,D.PURCHASE_TYPE
                        ,D.EV_TYPE
                        ,D.ATT_FILE_NUM
                        ,(SELECT EV_TPL_SUBJECT FROM STOCEVTM WHERE GATE_CD = D.GATE_CD AND DEL_FLAG = '0' AND EV_TPL_NUM = D.EXEC_EV_TPL_NUM) AS EV_TPL_SUBJECT
                    FROM STOPBDHD A JOIN STOCUSER B ON (A.GATE_CD = B.GATE_CD
                                                    AND A.BUYER_CD = B.COMPANY_CD
                                                    AND A.CTRL_USER_ID = B.USER_ID)
                                    LEFT OUTER JOIN (SELECT DISTINCT EV_NUM, RFX_NUM, RFX_CNT FROM STOPBDVN
                                                     WHERE GATE_CD = #{ses.gateCd} AND DEL_FLAG = '0') C
                                                     ON (C.RFX_NUM = A.RFX_NUM AND C.RFX_CNT = A.RFX_CNT)
                                    LEFT OUTER JOIN STOCEVEM D ON (D.GATE_CD = A.GATE_CD
                                                               AND D.EV_NUM = C.EV_NUM)
                   WHERE A.GATE_CD = #{ses.gateCd}
                    <if test="APP_DOC_NUM == '' or APP_DOC_NUM == null">
                            AND A.BUYER_CD = #{ses.companyCd}
                            AND A.RFX_NUM = #{RFX_NUM}
                            AND A.RFX_CNT = #{RFX_CNT}
                    </if>
                    <if test="APP_DOC_NUM != '' and APP_DOC_NUM != null">
                            AND A.APP_DOC_NUM2 = #{APP_DOC_NUM}
                            AND A.APP_DOC_CNT2 = #{APP_DOC_CNT}
                    </if>

    </select>

    <!--BD0340P05-->
    <select id="getVendorInfoForBDEV" resultType="hashmap">
        SELECT
			 Z.*
			,ROW_NUMBER() OVER(ORDER BY (CASE WHEN PRC_SLT_TYPE ='NGO' THEN <include refid="com.sql.nvl"/>(EV_SCORE,0) ELSE <include refid="com.sql.nvl"/>(QTA_AMT,99999999999999) END  ) DESC) RANK
		FROM(
        SELECT A.RFX_NUM
             , A.RFX_CNT
             , C.VENDOR_CD
             , <include refid="com.sql.dbo"/>GETVENDORNAME(A.GATE_CD, C.VENDOR_CD, #{ses.langCd}) VENDOR_NM
             , D.QTA_NUM
             , D.QTA_CNT
             , B.CUR
             , B.RFX_AMT
             , D.QTA_AMT
             , C.GIVE_UP_YN
			 ,(CASE WHEN C.PROGRESS_CD = '300' THEN 'Y' ELSE 'N' END) AS QTA_YN
			 , C.GIVEUP_RMK
			<if test="_databaseId == 'mssql'">
             , CONVERT(VARCHAR , CONVERT(INT, A.PRC_PERCENT)) <include refid="com.sql.stringMerge"/> ' : ' <include refid="com.sql.stringMerge"/>  CONVERT(VARCHAR , CONVERT(INT,A.NPRC_PERCENT)) AS 'PERCENT'
			</if>
			<if test="_databaseId == 'oracle'">
             , TO_CHAR(TO_NUMBER(A.PRC_PERCENT)) <include refid="com.sql.stringMerge"/> ' : ' <include refid="com.sql.stringMerge"/>  TO_CHAR(TO_NUMBER(A.NPRC_PERCENT)) AS PERCENT
			</if>

             , A.PROGRESS_CD
             , D.SLT_RMK
             , CASE WHEN C.NEGO_RESULT_TYPE = '06' THEN (
		 											CASE WHEN E.RFX_FROM_DATE <![CDATA[<]]> <include refid="com.sql.sysdate"/> AND <include refid="com.sql.sysdate"/> <![CDATA[<]]> E.RFX_TO_DATE THEN '07'
		 												 WHEN E.RFX_TO_DATE <![CDATA[<]]> <include refid="com.sql.sysdate"/> THEN '08' ELSE C.NEGO_RESULT_TYPE END
		 											)
		 											ELSE C.NEGO_RESULT_TYPE END AS NEGO_RESULT_TYPE
             , A.PRC_SLT_TYPE
			<if test="_databaseId == 'oracle'">
			,TO_CHAR(  TO_NUMBER( (SELECT SUM(A.EV_ID_SCORE)/ COUNT(DISTINCT EV_USER_ID)  FROM STOCEVEE A JOIN STOCEVIM B ON A.EV_ITEM_NUM = B.EV_ITEM_NUM
			 									  WHERE A.EV_NUM = #{EV_NUM} AND CHK_YN = '1'  AND VENDOR_CD = E.VENDOR_CD AND B.EV_ITEM_TYPE_CD = 'OP'))) PRC_SCORE
	    	, TO_CHAR(  TO_NUMBER( (SELECT SUM(A.EV_ID_SCORE)/COUNT(DISTINCT EV_USER_ID) FROM STOCEVEE A JOIN STOCEVIM B ON A.EV_ITEM_NUM = B.EV_ITEM_NUM
		  										  WHERE A.EV_NUM = #{EV_NUM} AND CHK_YN = '1'  AND VENDOR_CD = E.VENDOR_CD AND B.EV_ITEM_TYPE_CD = 'NP'))) NPRC_SCORE
			,TO_CHAR(  TO_NUMBER( (SELECT SUM(A.EV_ID_SCORE)/ COUNT(DISTINCT EV_USER_ID)  FROM STOCEVEE A JOIN STOCEVIM B ON A.EV_ITEM_NUM = B.EV_ITEM_NUM
			 									  WHERE A.EV_NUM = #{EV_NUM} AND CHK_YN = '1'  AND VENDOR_CD = E.VENDOR_CD AND B.EV_ITEM_TYPE_CD = 'OP')))
	   		+ TO_CHAR(  TO_NUMBER( (SELECT SUM(A.EV_ID_SCORE)/COUNT(DISTINCT EV_USER_ID) FROM STOCEVEE A JOIN STOCEVIM B ON A.EV_ITEM_NUM = B.EV_ITEM_NUM
		  										  WHERE A.EV_NUM = #{EV_NUM} AND CHK_YN = '1'  AND VENDOR_CD = E.VENDOR_CD AND B.EV_ITEM_TYPE_CD = 'NP'))) EV_SCORE
            </if>
            <if test="_databaseId == 'mssql'">
                ,<include refid="com.sql.dbo"/>getGmtDate(E.RFX_FROM_DATE, #{ses.userGmt}, #{ses.systemGmt}, 'yyyy-MM-dd')
                    <include refid="com.sql.stringMerge"/> ' '
                    <include refid="com.sql.stringMerge"/>SUBSTRING(LEFT(CONVERT(NVARCHAR(20),  E.RFX_FROM_DATE, 108), 5),1,2) <include refid="com.sql.stringMerge"/> ':'
                    <include refid="com.sql.stringMerge"/>SUBSTRING(LEFT(CONVERT(NVARCHAR(20),  E.RFX_FROM_DATE, 108), 5),4,2)
                    <include refid="com.sql.stringMerge"/> ' ~ ' <include refid="com.sql.stringMerge"/>
                    <include refid="com.sql.dbo"/>getGmtDate(E.RFX_TO_DATE, #{ses.userGmt}, #{ses.systemGmt}, 'yyyy-MM-dd')
                    <include refid="com.sql.stringMerge"/> ' '
                    <include refid="com.sql.stringMerge"/>SUBSTRING(LEFT(CONVERT(NVARCHAR(20),  E.RFX_TO_DATE, 108), 5),1,2) <include refid="com.sql.stringMerge"/> ':'
                    <include refid="com.sql.stringMerge"/>SUBSTRING(LEFT(CONVERT(NVARCHAR(20),  E.RFX_TO_DATE, 108), 5),4,2) AS QTA_RFX_FROM_TO_DATE
            </if>
             <if test="_databaseId == 'mssql'">
	            ,(CONVERT(VARCHAR(3),(SELECT COUNT(*)
												FROM STOCEVEU EU
											   WHERE EU.GATE_CD	 = A.GATE_CD
												 AND EU.EV_NUM	  = #{EV_NUM}
												 AND EU.VENDOR_CD   = E.VENDOR_CD
												 AND EU.VENDOR_SQ   = '1'
												 AND EU.DEL_FLAG	= '0'
												 AND EU.PROGRESS_CD = '200')) +'/'+
						  CONVERT(VARCHAR(3),(CASE WHEN
						 							   ((SELECT COUNT(*)
						 							   	   FROM STOCEVTD TD
						 							   	   INNER JOIN STOCEVIM IM
						 							   		 ON TD.EV_ITEM_NUM = IM.EV_ITEM_NUM
						 							   	  WHERE TD.EV_TPL_NUM = #{EXEC_EV_TPL_NUM}
						 							   		AND TD.GATE_CD = A.GATE_CD
						 							   		AND TD.DEL_FLAG = '0'
						 							   		AND IM.EV_ITEM_METHOD_CD = 'QUA') = 0)
						 						   THEN 0
						 						   ELSE (SELECT COUNT(*)
						 						   		   FROM STOCEVEU EU
						 						   		  WHERE EU.GATE_CD   = A.GATE_CD
						 						   			AND EU.EV_NUM	= #{EV_NUM}
						 						   			AND EU.VENDOR_CD = E.VENDOR_CD
						 						   			AND EU.VENDOR_SQ = '1'
						 						   			AND EU.DEL_FLAG  = '0')
						 						   END)
						  		 )
						 ) AS EV_RESULT
			    </if>
			    <if test="_databaseId == 'oracle'">
				     ,(TO_CHAR((SELECT COUNT(*)
													FROM STOCEVEU EU
												   WHERE EU.GATE_CD	 = A.GATE_CD
													 AND EU.EV_NUM	  = #{EV_NUM}
													 AND EU.VENDOR_CD   = E.VENDOR_CD
													 AND EU.VENDOR_SQ   = '1'
													 AND EU.DEL_FLAG	= '0'
													 AND EU.PROGRESS_CD = '200')) ||'/'||
							  TO_CHAR((CASE WHEN
							 							   ((SELECT COUNT(*)
							 							   	   FROM STOCEVTD TD
							 							   	   INNER JOIN STOCEVIM IM
							 							   		 ON TD.EV_ITEM_NUM = IM.EV_ITEM_NUM
							 							   	  WHERE TD.EV_TPL_NUM = #{EXEC_EV_TPL_NUM}
							 							   		AND TD.GATE_CD = A.GATE_CD
							 							   		AND TD.DEL_FLAG = '0'
							 							   		AND IM.EV_ITEM_METHOD_CD = 'QUA') = 0)
							 						   THEN 0
							 						   ELSE (SELECT COUNT(*)
							 						   		   FROM STOCEVEU EU
							 						   		  WHERE EU.GATE_CD   = A.GATE_CD
							 						   			AND EU.EV_NUM	= #{EV_NUM}
							 						   			AND EU.VENDOR_CD = E.VENDOR_CD
							 						   			AND EU.VENDOR_SQ = '1'
							 						   			AND EU.DEL_FLAG  = '0')
							 						   END)
							 				)
							 	) AS EV_RESULT
			    </if>
        FROM STOPBDHD A LEFT JOIN (SELECT GATE_CD
                                    ,RFX_NUM
                                    ,RFX_CNT
                                    ,SUM(RFX_AMT) AS RFX_AMT
                                    ,CUR
                                FROM STOPBDDT
                                WHERE DEL_FLAG = '0'
                                GROUP BY GATE_CD, RFX_NUM, RFX_CNT,CUR) B ON (B.GATE_CD = A.GATE_CD
                                                                            AND B.RFX_NUM = A.RFX_NUM
                                                                            AND B.RFX_CNT = A.RFX_CNT)
                        LEFT JOIN (SELECT DISTINCT GATE_CD
                                    ,RFX_NUM
                                    ,RFX_CNT
                                    ,VENDOR_CD
                                    ,PROGRESS_CD
                                    ,PRC_SCORE
                                    ,NPRC_SCORE
                                    ,NEGO_RESULT_TYPE
                                    ,CASE WHEN GIVEUP_FLAG = '1' THEN 'Y' ELSE 'N' END GIVE_UP_YN
									,GIVEUP_RMK
                                FROM STOPBDVN
                                WHERE DEL_FLAG = '0'
                         		) C ON (C.GATE_CD = B.GATE_CD
                                    AND C.RFX_NUM = B.RFX_NUM
                                    AND C.RFX_CNT = B.RFX_CNT)
                        LEFT JOIN STOPBDVO E ON (E.GATE_CD = C.GATE_CD
											   AND E.RFX_NUM = C.RFX_NUM
											   AND E.RFX_CNT = C.RFX_CNT
											   AND E.VENDOR_CD = C.VENDOR_CD
											   AND E.QTA_CNT = (SELECT MAX(QTA_CNT) FROM STOPBDVO WHERE GATE_CD = C.GATE_CD AND RFX_NUM = C.RFX_NUM AND RFX_CNT = C.RFX_CNT AND VENDOR_CD = C.VENDOR_CD AND DEL_FLAG = '0'))
                        LEFT OUTER JOIN (SELECT GATE_CD
                                            ,RFX_NUM
                                            ,RFX_CNT
                                            ,QTA_NUM
                                            ,QTA_CNT
                                            ,VENDOR_CD
                                            ,PROGRESS_CD
                                            ,SUM(QTA_AMT) AS QTA_AMT
                                            ,MAX(SLT_RMK) AS SLT_RMK
                                        FROM STOPBQDT
                                        WHERE DEL_FLAG = '0'
                                        AND PROGRESS_CD = '300'
                                        GROUP BY GATE_CD, RFX_NUM, RFX_CNT, QTA_NUM, QTA_CNT, VENDOR_CD, PROGRESS_CD) D ON (D.GATE_CD = C.GATE_CD
                                                                                                                        AND D.RFX_NUM = C.RFX_NUM
                                                                                                                        AND D.RFX_CNT = C.RFX_CNT
                                                                                                                        AND D.VENDOR_CD = C.VENDOR_CD
                                                                                                                        AND D.QTA_CNT = E.QTA_CNT)
        WHERE A.GATE_CD = #{ses.gateCd}
          AND A.DEL_FLAG = '0'
          AND A.RFX_NUM = #{RFX_NUM}
          AND A.RFX_CNT = #{RFX_CNT}
     ORDER BY EV_SCORE DESC
     )Z
    </select>

    <select id="getItemInfoForBDEV" resultType="hashmap">
         SELECT
			<if test="_databaseId == 'mssql'">
			     (SELECT STUFF((SELECT ',' + PR_BUYER_NM FROM
			                   (SELECT DISTINCT <include refid="com.sql.dbo"/>getBuyerName(GATE_CD, PR_BUYER_CD, #{ses.langCd}) AS PR_BUYER_NM
			                    FROM STOPBDDT WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) RQDT FOR XML PATH('')),1,1,'')) AS PR_BUYER_NM
			</if>
			<if test="_databaseId == 'oracle'">
			   (SELECT DISTINCT  getBuyerInfo(GATE_CD, PR_BUYER_CD, 'CUST_NM') AS PR_BUYER_NM
							FROM STOPBDDT WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) AS PR_BUYER_NM
			</if>
               ,B.PR_BUYER_CD
               ,B.ITEM_CD
               ,B.ITEM_DESC
               ,B.ITEM_SPEC
               ,B.RFX_QT
               ,B.UNIT_CD
               ,B.UNIT_PRC AS RQ_UNIT_PRC
               ,B.RFX_AMT
               ,A.UNIT_PRC
               ,A.QTA_AMT
               ,<include refid="com.sql.toDateChar"/>(B.DELY_DATE, 'YYYYMMDD') AS DELY_DATE
               ,<include refid="com.sql.dbo"/>GETFILECOUNT(B.GATE_CD, B.ATT_FILE_NUM) AS BATT_FILE_CNT
               ,B.ATT_FILE_NUM  AS BATT_FILE_NUM
               ,<include refid="com.sql.dbo"/>GETFILECOUNT(A.GATE_CD, A.ATT_FILE_NUM) AS SATT_FILE_CNT
               ,A.ATT_FILE_NUM  AS SATT_FILE_NUM
               ,B.RMK AS BRMK
               ,A.RMK AS SRMK
         FROM STOPBQDT A JOIN STOPBDDT B ON (B.GATE_CD = A.GATE_CD
                                          AND B.RFX_NUM = A.RFX_NUM
                                          AND B.RFX_CNT = A.RFX_CNT
                                          AND B.RFX_SQ = A.RFX_SQ
                                          AND B.DEL_FLAG = '0')
         WHERE A.GATE_CD = #{ses.gateCd}
           AND A.DEL_FLAG = '0'
           AND A.QTA_NUM = #{QTA_NUM}
           AND A.QTA_CNT = #{QTA_CNT}
    </select>

    <!-- BD0340P05 우선협상자선정-->
    <update id="BD0340P05_updateBDVN_NegoResultType">
       UPDATE STOPBDVN SET NEGO_RESULT_TYPE = #{NEGO_RESULT_TYPE}
        WHERE GATE_CD = #{ses.gateCd}
          AND RFX_NUM = #{RFX_NUM}
          AND RFX_CNT = #{RFX_CNT}
          <if test="VENDOR_CD != null and VENDOR_CD != ''">
            AND VENDOR_CD = #{VENDOR_CD}
          </if>
          AND DEL_FLAG = '0'
    </update>

    <update id="BD0340P05_updateBDHD_progressCd">
       UPDATE STOPBDHD SET PROGRESS_CD = #{PROGRESS_CD}
        WHERE GATE_CD = #{ses.gateCd}
          AND RFX_NUM = #{RFX_NUM}
          AND RFX_CNT = #{RFX_CNT}
          AND DEL_FLAG = '0'
    </update>

    <update id="BD0340P05_updateBDDT_progressCd">
       UPDATE STOPBDDT SET PROGRESS_CD = #{PROGRESS_CD}
        WHERE GATE_CD = #{ses.gateCd}
          AND RFX_NUM = #{RFX_NUM}
          AND RFX_CNT = #{RFX_CNT}
          AND DEL_FLAG = '0'
    </update>


    <!-- BD0340P06 우선협상자선정 후 재입찰 -->
    <update id="bd0340P06_updateBDVN_reBid">
       UPDATE STOPBDVN
          SET NEGO_RESULT_TYPE = '06'
             ,PROGRESS_CD = '100'
        WHERE GATE_CD = #{ses.gateCd}
          AND RFX_NUM = #{RFX_NUM}
          AND RFX_CNT = #{RFX_CNT}
          AND VENDOR_CD = #{VENDOR_CD}
          AND DEL_FLAG = '0'
    </update>

    <insert id="bd0340P06_insertBDVO">
        INSERT INTO STOPBDVO (
                    GATE_CD
                  , BUYER_CD
                  , RFX_NUM
                  , RFX_CNT
                  , VENDOR_CD
                  , QTA_CNT
                  , REG_DATE
                  , REG_USER_ID
                  , MOD_DATE
                  , MOD_USER_ID
                  , DEL_FLAG
                  , RFX_FROM_DATE
                  , RFX_TO_DATE
            ) VALUES (
                    #{ses.gateCd}
                  , #{BUYER_CD}
                  , #{RFX_NUM}
                  , #{RFX_CNT}
                  , #{VENDOR_CD}
                  , #{QTA_CNT}
                  , <include refid="com.sql.sysdate"/>
                  , #{ses.userId}
                  , <include refid="com.sql.sysdate"/>
                  , #{ses.userId}
                  , '0'

                  <if test="_databaseId == 'oracle'">
                     , <include refid="com.sql.toDate"/>#{RFX_FROM_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_FROM_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_FROM_MIN} <include refid="com.sql.stringMerge"/> ':00', 'YYYYMMDD HH24:MI:SS')
                     , <include refid="com.sql.toDate"/>#{RFX_TO_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_TO_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_TO_MIN} <include refid="com.sql.stringMerge"/>  ':00', 'YYYYMMDD HH24:MI:SS')
                  </if>

                  <if test="_databaseId == 'mssql'">
                     , <include refid="com.sql.toDate"/>#{RFX_FROM_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_FROM_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_FROM_MIN})
                     , <include refid="com.sql.toDate"/>#{RFX_TO_DATE} <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> #{RFX_TO_HOUR} <include refid="com.sql.stringMerge"/> ':' <include refid="com.sql.stringMerge"/> #{RFX_TO_MIN})
                  </if>
            )
    </insert>


    <!-- 카카오톡 이메일 수신 발신자 정보 -->
    <select id="getInfoForEmail" resultType="hashmap">
          SELECT DISTINCT BDVN.VENDOR_CD
  				 ,BDVN.VENDOR_USER_ID
  				 ,(SELECT <include refid="com.sql.mtop1"/> A.USER_NM FROM STOCCVUR A WHERE A.GATE_CD = BDVN.GATE_CD AND A.USER_ID = BDVN.VENDOR_USER_ID AND A.DEL_FLAG = '0'
  				 <if test="_databaseId == 'oracle'">
  				    AND ROWNUM = '1'
                 </if>
  				 ) VENDOR_USER_NM
  				 ,REPLACE(BDVN.VENDOR_CELL_NUM,'-','') AS VENDOR_CELL_NUM
  				 ,BDVN.VENDOR_EMAIL
  				 ,BDHD.CTRL_USER_ID
  				 ,USTB.USER_NM AS CTRL_USER_NM
  				 ,USTB.POSITION_NM AS CTRL_USER_POSITION
  				 ,USTB.TEL_NUM AS CTRL_USER_TEL
  				 ,USTB.CELL_NUM AS CTRL_USER_CELL
  				 ,USTB.EMAIL AS CTRL_USER_EMAIL
  				 ,BDHD.RFX_SUBJECT
  				 ,<include refid="com.sql.toDateChar"/>(BDHD.RFX_TO_DATE, 'YYYY/MM/DD HH24:MI:SS') AS RFX_TO_DATE
          FROM STOPBDHD BDHD JOIN STOPBDDT BDDT ON (BDDT.GATE_CD = BDHD.GATE_CD
                                                AND BDDT.RFX_NUM = BDHD.RFX_NUM
                                                AND BDDT.RFX_CNT = BDHD.RFX_CNT
                                                AND BDDT.DEL_FLAG = '0')
                             JOIN STOPBDVN BDVN ON (BDVN.GATE_CD = BDDT.GATE_CD
                                                AND BDVN.RFX_NUM = BDDT.RFX_NUM
                                                AND BDVN.RFX_CNT = BDDT.RFX_CNT
                                                AND BDVN.RFX_SQ = BDDT.RFX_SQ
                                                AND BDVN.DEL_FLAG = '0')
                             JOIN STOCUSER USTB ON (BDHD.GATE_CD = USTB.GATE_CD
                                                AND BDHD.CTRL_USER_ID = USTB.USER_ID
                                                AND BDHD.DEL_FLAG = '0')
                            <if test="PROGRESS_CD == '2900'.toString()">
                             JOIN STOPBQDT BQDT ON BDHD.GATE_CD = BQDT.GATE_CD
                             				   AND BDHD.RFX_NUM = BQDT.RFX_NUM
                             				   AND BDHD.RFX_CNT = BQDT.RFX_CNT
                             				   AND BDVN.VENDOR_CD = BQDT.VENDOR_CD
                             				   AND BQDT.SLT_FLAG = '1'
                            </if>
          WHERE BDHD.GATE_CD = #{ses.gateCd}
            AND BDHD.DEL_FLAG = '0'
            AND BDHD.RFX_NUM = #{RFX_NUM}
            AND BDHD.RFX_CNT = #{RFX_CNT}
    </select>


    <select id="getEVScoreByEVT20220310" resultType="hashmap">
        SELECT EVTD.WEIGHT
              ,EVID.EV_ID_SCORE
              ,EVIM.EV_ITEM_TYPE_CD
              ,EVTD.EV_TPL_NUM
              ,EVTD.EV_ITEM_NUM
        FROM STOCEVTD EVTD JOIN STOCEVIM EVIM ON EVTD.GATE_CD = EVIM.GATE_CD AND EVTD.EV_ITEM_NUM = EVIM.EV_ITEM_NUM AND EVIM.DEL_FLAG = '0'
                           JOIN STOCEVID EVID ON EVIM.GATE_CD = EVID.GATE_CD AND EVIM.EV_ITEM_NUM = EVID.EV_ITEM_NUM AND EVID.DEL_FLAG = '0' AND EVID.EV_ID_SQ = '1'
            WHERE EVTD.GATE_CD = #{ses.gateCd}
              AND EVTD.DEL_FLAG = '0'
              AND EVTD.EV_TPL_NUM = #{EV_TPL_NUM}
    </select>


    <select id="getEVScoreByEVT" resultType="hashmap">
		SELECT MAX(EVTD.WEIGHT) WEIGHT
			  ,MAX(EVID.EV_ID_SCORE) EV_ID_SCORE
			  ,EVIM.EV_ITEM_TYPE_CD
			  ,EVTD.EV_TPL_NUM
			  ,EVTD.EV_ITEM_NUM
		FROM STOCEVTD EVTD JOIN STOCEVIM EVIM ON EVTD.GATE_CD = EVIM.GATE_CD AND EVTD.EV_ITEM_NUM = EVIM.EV_ITEM_NUM AND EVIM.DEL_FLAG = '0'
						   JOIN STOCEVID EVID
						   ON EVIM.GATE_CD = EVID.GATE_CD AND EVIM.EV_ITEM_NUM = EVID.EV_ITEM_NUM AND EVID.DEL_FLAG = '0'
            WHERE EVTD.GATE_CD = #{ses.gateCd}
              AND EVTD.DEL_FLAG = '0'
              AND EVTD.EV_TPL_NUM = #{EV_TPL_NUM}
			  GROUP BY
			   EVIM.EV_ITEM_TYPE_CD
			  ,EVTD.EV_TPL_NUM
			  ,EVTD.EV_ITEM_NUM
    </select>





    <select id="getBdInfoForEV" resultType="hashmap">
        SELECT DISTINCT A.RFX_NUM
              ,A.RFX_CNT
              ,A.PRC_PERCENT
              ,A.NPRC_PERCENT
        FROM STOPBDHD A JOIN STOPBDVN B ON B.GATE_CD = A.GATE_CD
                                       AND B.RFX_NUM = A.RFX_NUM
                                       AND B.RFX_CNT = A.RFX_CNT
                                       AND B.DEL_FLAG = '0'
                                       AND B.EV_NUM = #{EV_NUM}
        WHERE A.GATE_CD = #{ses.gateCd}
          AND A.DEL_FLAG = '0'
    </select>

    <update id="updateEvResultBDVN">
        UPDATE STOPBDVN
           SET PRC_SCORE = #{PRC_SCORE}
             , NPRC_SCORE = #{NPRC_SCORE}
        WHERE GATE_CD = #{ses.gateCd}
          AND RFX_NUM = #{RFX_NUM}
          AND RFX_CNT = #{RFX_CNT}
          AND VENDOR_CD = #{VENDOR_CD}
          AND DEL_FLAG = '0'
    </update>

    <select id="getEVScoreInfoByEVNUM" resultType="hashmap">
        SELECT EVEM.EV_NUM
             , EVTD.EV_TPL_NUM
             , EVTD.EV_ITEM_NUM
             , EVTD.WEIGHT
             , EVID.EV_ID_SCORE
             , EVIM.EV_ITEM_TYPE_CD
        FROM STOCEVEM EVEM JOIN STOCEVTD EVTD ON EVTD.GATE_CD = EVEM.GATE_CD
                                             AND EVTD.EV_TPL_NUM = EVEM.EXEC_EV_TPL_NUM
                                             AND EVTD.DEL_FLAG = '0'
                           JOIN STOCEVIM EVIM ON EVTD.GATE_CD = EVIM.GATE_CD
                                             AND EVTD.EV_ITEM_NUM = EVIM.EV_ITEM_NUM
                                             AND EVIM.DEL_FLAG = '0'
                           JOIN STOCEVID EVID ON EVIM.GATE_CD = EVID.GATE_CD
                                             AND EVIM.EV_ITEM_NUM = EVID.EV_ITEM_NUM
                                             AND EVID.DEL_FLAG = '0'
                                             AND EVID.EV_ID_SQ = '1'
        WHERE EVEM.GATE_CD = #{ses.gateCd}
          AND EVEM.EV_NUM = #{EV_NUM}
          AND EVEM.DEL_FLAG = '0'
    </select>

    <select id="getEveeForEVResult" resultType="hashmap">
        SELECT GATE_CD
             , EV_NUM
             , VENDOR_CD
             , VENDOR_SQ
             , EV_USER_ID
             , EV_TPL_NUM
             , EV_ITEM_NUM
             , REG_DATE
             , REG_USER_ID
             , MOD_DATE
             , MOD_USER_ID
             , DEL_FLAG
             , EV_ID_SQ
             , EV_ID_SCORE
             , EV_REMARK
          FROM STOCEVEE
         WHERE GATE_CD = #{ses.gateCd}
           AND EV_NUM = #{EV_NUM}
           AND VENDOR_CD = #{VENDOR_CD}
           AND VENDOR_SQ = #{VENDOR_SQ}
           AND CHK_YN = '1'
    </select>

	<select id="getBDdtSubmitData" resultType="hashmap">
		SELECT *
		  FROM(
             SELECT
		       (SELECT DISTINCT  getBuyerInfo(GATE_CD, PR_BUYER_CD, 'CUST_NM') AS PR_BUYER_NM
						FROM STOPBDDT WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) AS PR_BUYER_NM
		   ,B.PR_BUYER_CD
		   ,<include refid="com.sql.dbo"/>GETVENDORNAME(A.GATE_CD, A.VENDOR_CD, #{ses.langCd}) AS VENDOR_NM
		   ,A.VENDOR_CD
		   ,A.RFX_NUM
	   	   ,A.RFX_CNT
	   	   ,A.SLT_FLAG
	   	   ,CASE WHEN A.PROGRESS_CD = '2650' THEN 'N' WHEN A.PROGRESS_CD = '2850' AND C.NEGO_RESULT_TYPE = '06' THEN 'N' ELSE 'Y' END AS QTOPEN_YN
	   	   ,D.RFX_SUBJECT
	   	   ,D.VENDOR_OPEN_TYPE
	   	   ,D.VENDOR_SLT_TYPE
	   	   ,D.PRC_SLT_TYPE
	   	   ,D.PR_REQ_TYPE
	   	   ,D.CTRL_USER_NM
	   	   ,E.PROGRESS_CD  AS EV_STATUS
	   	   ,D.PROGRESS_CD
		   ,B.ITEM_CD
		   ,B.ITEM_DESC
		   ,B.ITEM_SPEC
		   ,B.RFX_QT
		   ,B.UNIT_CD
		   ,B.UNIT_PRC AS RQ_UNIT_PRC
		   ,B.RFX_AMT
		   ,TO_CHAR (B.DELY_DATE, 'YYYYMMDD') AS DELY_DATE
		   ,<include refid="com.sql.dbo"/>GETFILECOUNT(B.GATE_CD, B.ATT_FILE_NUM) AS BATT_FILE_CNT
		   ,B.ATT_FILE_NUM  AS BATT_FILE_NUM
		   ,<include refid="com.sql.dbo"/>GETFILECOUNT(A.GATE_CD, A.ATT_FILE_NUM) AS SATT_FILE_CNT
		   ,A.ATT_FILE_NUM  AS SATT_FILE_NUM
		   ,B.RMK AS BRMK
		   ,A.RMK AS SRMK
		   ,RANK() OVER (PARTITION BY A.QTA_NUM ORDER BY A.QTA_CNT DESC) RANK
		   ,CASE WHEN C.NEGO_RESULT_TYPE = '06' THEN 0
	 											ELSE A.QTA_AMT END AS QTA_AMT
	 	   ,CASE WHEN C.NEGO_RESULT_TYPE = '06' THEN 0
	 											ELSE A.UNIT_PRC END AS UNIT_PRC
	 FROM STOPBQDT A JOIN STOPBDDT B ON (B.GATE_CD = A.GATE_CD
									  AND B.RFX_NUM = A.RFX_NUM
									  AND B.RFX_CNT = A.RFX_CNT
									  AND B.RFX_SQ = A.RFX_SQ
									  AND B.DEL_FLAG = '0')
	 LEFT OUTER JOIN STOPBDVN C ON (C.GATE_CD = A.GATE_CD
									  AND C.RFX_NUM = B.RFX_NUM
									  AND C.RFX_CNT = B.RFX_CNT
									  AND C.RFX_SQ = B.RFX_SQ
									  AND C.VENDOR_CD=A.VENDOR_CD
									  AND C.DEL_FLAG = '0')
	 LEFT OUTER JOIN STOPBDHD D ON (D.GATE_CD = A.GATE_CD
									  AND D.RFX_NUM = A.RFX_NUM
									  AND D.RFX_CNT = A.RFX_CNT
									  AND D.DEL_FLAG = '0')
	 LEFT OUTER JOIN STOCEVEM E ON (E.GATE_CD = C.GATE_CD
									  AND E.EV_NUM = C.EV_NUM
									  AND E.DEL_FLAG = '0')
	 LEFT OUTER JOIN STOPBDVO F ON E.GATE_CD = A.GATE_CD
									  AND F.RFX_NUM = C.RFX_NUM
									  AND F.RFX_CNT = C.RFX_CNT
									  AND F.REG_DATE = (SELECT MAX(REG_DATE) FROM STOPBDVO WHERE GATE_CD = F.GATE_CD AND RFX_NUM = F.RFX_NUM AND RFX_CNT = F.RFX_CNT AND DEL_FLAG = '0')
									  AND F.DEL_FLAG = '0'
									  AND F.VENDOR_CD =A.VENDOR_CD
	 WHERE A.GATE_CD = #{ses.gateCd}
	   AND A.DEL_FLAG = '0'
	   <if test="RFX_NUM != '' and RFX_NUM != null">
	  	   AND A.RFX_NUM = #{RFX_NUM}
	   </if>
	   <if test="BD_COMPLETION == '2900' ">
		   AND (A.SLT_FLAG='1' OR C.NEGO_RESULT_TYPE='05')
	   </if>
	   <if test="(PR_BUYER_CD != null and PR_BUYER_CD != '') or (PR_BUYER_NM != null and PR_BUYER_NM != '') ">
           AND EXISTS (SELECT 1 FROM STOPBDDT
		              WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT AND DEL_FLAG = '0'
                           <if test="PR_BUYER_CD != '' and PR_BUYER_CD != null">
						  AND PR_BUYER_CD =#{PR_BUYER_CD}
					    </if>
					     <if test="PR_BUYER_NM != '' and PR_BUYER_NM != null">
						  AND UPPER(GETBUYERINFO(GATE_CD,PR_BUYER_CD,'CUST_NM')) <include refid="com.sql.likeL"/> #{PR_BUYER_NM} <include refid="com.sql.likeR"/>
						 </if>
						 <if test="PR_PLANT_CD != '' and PR_PLANT_CD != null">
						  AND PR_PLANT_CD =#{PR_PLANT_CD}
					    </if>
					    <if test="PR_PLANT_NM != '' and PR_PLANT_NM != null">
						   AND UPPER(getPlantName(GATE_CD,PR_BUYER_CD,PR_PLANT_CD,#{ses.langCd})) <include refid="com.sql.likeL"/> #{PR_PLANT_NM} <include refid="com.sql.likeR"/>
					    </if>
					 )

		</if>
        <if test="DATE_FROM != '' and DATE_FROM != null">
           AND
                    <choose>
                      <when test='TYPE == "REG_DATE"'>  CASE WHEN F.REG_DATE IS NULL THEN D.REG_DATE ELSE F.REG_DATE END </when>
                      <when test='TYPE == "RFX_TO_DATE"'> CASE WHEN F.RFX_TO_DATE IS NULL THEN D.RFX_TO_DATE ELSE F.RFX_TO_DATE END </when>
                      <when test='TYPE == "RFX_FROM_DATE"'> CASE WHEN F.RFX_FROM_DATE IS NULL THEN D.RFX_FROM_DATE ELSE F.RFX_FROM_DATE END </when>
                    </choose>
		           <![CDATA[>=]]> <include refid="com.sql.toDate"/> #{DATE_FROM}<include refid="com.sql.dateFrom"/>
        </if>
        <if test="DATE_TO != '' and DATE_TO != null">
           AND
                    <choose>
                      <when test='TYPE == "REG_DATE"'> CASE WHEN F.REG_DATE IS NULL THEN D.REG_DATE ELSE F.REG_DATE END </when>
                      <when test='TYPE == "RFX_TO_DATE"'> CASE WHEN F.RFX_TO_DATE IS NULL THEN D.RFX_TO_DATE ELSE F.RFX_TO_DATE END </when>
                      <when test='TYPE == "RFX_FROM_DATE"'> CASE WHEN F.RFX_FROM_DATE IS NULL THEN D.RFX_FROM_DATE ELSE F.RFX_FROM_DATE END </when>
                    </choose>
            		<![CDATA[<=]]> <include refid="com.sql.toDate"/> #{DATE_TO}<include refid="com.sql.dateTo"/>
        </if>
        <if test="PR_REQ_TYPE != '' and PR_REQ_TYPE != null">
           AND D.PR_REQ_TYPE  = #{PR_REQ_TYPE}
        </if>
        <if test="CTRL_USER_ID != '' and CTRL_USER_ID != null">
           AND UPPER(D.CTRL_USER_ID) <include refid="com.sql.likeL"/> #{CTRL_USER_ID} <include refid="com.sql.likeR"/>
        </if>
        <if test="PROGRESS_CD != '' and PROGRESS_CD != null">
		   AND CASE WHEN D.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  D.RFX_FROM_DATE  AND <include refid="com.sql.sysdate"/> <![CDATA[<]]> D.RFX_TO_DATE THEN '2700'
			   WHEN D.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  D.RFX_TO_DATE THEN '2750'  ELSE D.PROGRESS_CD END = #{PROGRESS_CD}
		</if>
	  ) WHERE RANK =1
    </select>

	<!-- 소싱관리 > 입찰관리 > 낙찰결과 조회 (BD0360) -->
    <select id="getBDdtSubmitData_0360" resultType="hashmap">
		SELECT *
		  FROM (
             SELECT
		        B.PR_BUYER_CD
			   ,(SELECT DISTINCT getBuyerName(GATE_CD, PR_BUYER_CD, #{ses.langCd}) AS PR_BUYER_NM
				   FROM STOPBDDT
				  WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) AS PR_BUYER_NM
			   ,B.PR_PLANT_CD
			   ,(SELECT DISTINCT getPlantName(GATE_CD, PR_BUYER_CD, PR_PLANT_CD, #{ses.langCd}) AS PR_PLANT_NM
				   FROM STOPBDDT
				  WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) AS PR_PLANT_NM
			   ,A.VENDOR_CD
			   ,<include refid="com.sql.dbo"/>GETVENDORNAME(A.GATE_CD, A.VENDOR_CD, #{ses.langCd}) AS VENDOR_NM
			   ,A.RFX_NUM
		   	   ,A.RFX_CNT
		   	   ,A.SLT_FLAG
		   	   ,CASE WHEN A.PROGRESS_CD = '2650' THEN 'N' WHEN A.PROGRESS_CD = '2850' AND C.NEGO_RESULT_TYPE = '06' THEN 'N' ELSE 'Y' END AS QTOPEN_YN
		   	   ,D.RFX_SUBJECT
		   	   ,D.VENDOR_OPEN_TYPE
		   	   ,D.VENDOR_SLT_TYPE
		   	   ,D.PRC_SLT_TYPE
		   	   ,D.PR_REQ_TYPE
		   	   ,D.CTRL_USER_NM
		   	   ,E.PROGRESS_CD  AS EV_STATUS
		   	   ,D.PROGRESS_CD
			   ,B.ITEM_CD
			   ,B.ITEM_DESC
			   ,B.ITEM_SPEC
			   ,B.RFX_QT
			   ,B.UNIT_CD
			   ,B.UNIT_PRC AS RQ_UNIT_PRC
			   ,B.RFX_AMT
			   , TO_CHAR (B.DELY_DATE, 'YYYYMMDD') AS DELY_DATE
			   ,<include refid="com.sql.dbo"/>GETFILECOUNT(B.GATE_CD, B.ATT_FILE_NUM) AS BATT_FILE_CNT
			   ,B.ATT_FILE_NUM  AS BATT_FILE_NUM
			   ,<include refid="com.sql.dbo"/>GETFILECOUNT(A.GATE_CD, A.ATT_FILE_NUM) AS SATT_FILE_CNT
			   ,A.ATT_FILE_NUM  AS SATT_FILE_NUM
			   ,B.RMK AS BRMK
			   ,A.RMK AS SRMK
			   ,D.BUYER_CD
			   ,RANK() OVER (PARTITION BY A.QTA_NUM ORDER BY A.QTA_CNT DESC) RANK
			   ,CASE WHEN C.NEGO_RESULT_TYPE = '06' THEN 0 ELSE A.QTA_AMT END AS QTA_AMT
		 	   ,CASE WHEN C.NEGO_RESULT_TYPE = '06' THEN 0 ELSE A.UNIT_PRC END AS UNIT_PRC
		 FROM STOPBQDT A JOIN STOPBDDT B ON (B.GATE_CD = A.GATE_CD
										  AND B.RFX_NUM = A.RFX_NUM
										  AND B.RFX_CNT = A.RFX_CNT
										  AND B.RFX_SQ = A.RFX_SQ
										  AND B.DEL_FLAG = '0')
		 LEFT OUTER JOIN STOPBDVN C ON (C.GATE_CD = A.GATE_CD
										  AND C.RFX_NUM = B.RFX_NUM
										  AND C.RFX_CNT = B.RFX_CNT
										  AND C.RFX_SQ = B.RFX_SQ
										  AND C.VENDOR_CD=A.VENDOR_CD
										  AND C.DEL_FLAG = '0')
		 LEFT OUTER JOIN STOPBDHD D ON (D.GATE_CD = A.GATE_CD
										  AND D.RFX_NUM = A.RFX_NUM
										  AND D.RFX_CNT = A.RFX_CNT
										  AND D.DEL_FLAG = '0')
		 LEFT OUTER JOIN STOCEVEM E ON (E.GATE_CD = C.GATE_CD
										  AND E.EV_NUM = C.EV_NUM
										  AND E.DEL_FLAG = '0')
		 LEFT OUTER JOIN STOPBDVO F ON E.GATE_CD = A.GATE_CD
										  AND F.RFX_NUM = C.RFX_NUM
										  AND F.RFX_CNT = C.RFX_CNT
										  AND F.REG_DATE = (SELECT MAX(REG_DATE) FROM STOPBDVO WHERE GATE_CD = F.GATE_CD AND RFX_NUM = F.RFX_NUM AND RFX_CNT = F.RFX_CNT AND DEL_FLAG = '0')
										  AND F.DEL_FLAG = '0'
										  AND F.VENDOR_CD =A.VENDOR_CD
		 WHERE A.GATE_CD = #{ses.gateCd}
		   AND A.DEL_FLAG = '0'
		 <if test="ITEM_CD != '' and ITEM_CD != null">
            <if test="ITEM_CNT == 1">
                    AND (UPODT.ITEM_CD IN ${ITEM_CD} OR UPODT.CUST_ITEM_CD IN ${ITEM_CD})
            </if>
            <if test="ITEM_CNT == 0">
                    AND (UPODT.ITEM_CD <include refid="com.sql.likeL"/> #{ITEM_CD} <include refid="com.sql.likeR"/> OR UPODT.CUST_ITEM_CD <include refid="com.sql.likeL"/> #{CUST_ITEM_CD} <include refid="com.sql.likeR"/>)
            </if>
        </if>
        <if test="ITEM_DESC != '' and ITEM_DESC != null">
           AND ( (B.ITEM_DESC <include refid="com.sql.likeL"/> #{ITEM_DESC} <include refid="com.sql.likeR"/>)
            OR  (B.ITEM_SPEC <include refid="com.sql.likeL"/> #{ITEM_DESC} <include refid="com.sql.likeR"/>)
            OR  (B.ITEM_CD <include refid="com.sql.likeL"/> #{ITEM_DESC} <include refid="com.sql.likeR"/>)
            )
        </if>
		   <if test="RFX_NUM != '' and RFX_NUM != null">
               AND UPPER(A.RFX_NUM) <include refid="com.sql.likeL"/> #{RFX_NUM} <include refid="com.sql.likeR"/>
		   </if>
	       <if test="RFX_SUBJECT != '' and RFX_SUBJECT != null">
	           AND D.RFX_SUBJECT <include refid="com.sql.likeL"/> #{RFX_SUBJECT} <include refid="com.sql.likeR"/>
	       </if>
	       <if test="VENDOR_CD != '' and VENDOR_CD != null">
	           AND A.VENDOR_CD <include refid="com.sql.likeL"/> #{VENDOR_CD} <include refid="com.sql.likeR"/>
	       </if>
	       <if test="VENDOR_NM != '' and VENDOR_NM != null">
	           AND <include refid="com.sql.dbo"/>GETVENDORNAME(#{ses.gateCd},A.VENDOR_CD,#{ses.langCd}) <include refid="com.sql.likeL"/> #{VENDOR_NM} <include refid="com.sql.likeR"/>
	       </if>
		   <if test="BD_COMPLETION == '2900' ">
			   AND (A.SLT_FLAG='1' OR C.NEGO_RESULT_TYPE='05')
		   </if>
	        <if test="(PR_BUYER_CD != null and PR_BUYER_CD != '') or (PR_BUYER_NM != null and PR_BUYER_NM != '') ">
	            AND EXISTS (SELECT 1 FROM STOPBDDT
	            WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT AND DEL_FLAG = '0'
	            <if test="PR_BUYER_CD != '' and PR_BUYER_CD != null">
	                AND PR_BUYER_CD =#{PR_BUYER_CD}
	            </if>
	            <if test="PR_BUYER_NM != '' and PR_BUYER_NM != null">
	                AND <include refid="com.sql.dbo"/>getBuyerName(A.GATE_CD, PR_BUYER_CD, #{ses.langCd}) <include refid="com.sql.likeL"/> #{PR_BUYER_NM} <include refid="com.sql.likeR"/>
	            </if>
	            )
	        </if>
	        <if test="(PR_PLANT_CD != null and PR_PLANT_CD != '') or (PR_PLANT_NM != null and PR_PLANT_NM != '') ">
	            AND EXISTS (SELECT 1 FROM STOPBDDT
	            WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT AND DEL_FLAG = '0'
	            <if test="PR_PLANT_CD != '' and PR_PLANT_CD != null">
	                AND PR_PLANT_CD =#{PR_PLANT_CD}
	            </if>
	            <if test="PR_PLANT_NM != '' and PR_PLANT_NM != null">
	                AND ${PR_PLANT_NM_L}<include refid="com.sql.dbo"/>getPlantName(#{ses.gateCd}, PR_BUYER_CD, PR_PLANT_CD, #{ses.langCd}) ${PR_PLANT_NM_R}
	            </if>
	            )
	        </if>
	       <if test="DATE_FROM != '' and DATE_FROM != null">
			   AND
						<choose>
						  <when test='TYPE == "REG_DATE"'> D.RFX_DATE </when>
						  <when test='TYPE == "RFX_TO_DATE"'> D.RFX_TO_DATE </when>
						  <when test='TYPE == "RFX_FROM_DATE"'> D.RFX_FROM_DATE </when>
						</choose>
					   <![CDATA[>=]]> <include refid="com.sql.toDate"/> #{DATE_FROM}<include refid="com.sql.dateFrom"/>
			</if>
			<if test="DATE_TO != '' and DATE_TO != null">
			   AND
						<choose>
						  <when test='TYPE == "REG_DATE"'> D.RFX_DATE </when>
						  <when test='TYPE == "RFX_TO_DATE"'> D.RFX_TO_DATE </when>
						  <when test='TYPE == "RFX_FROM_DATE"'> D.RFX_FROM_DATE </when>
						</choose>
						<![CDATA[<=]]> <include refid="com.sql.toDate"/> #{DATE_TO}<include refid="com.sql.dateTo"/>
			</if>
	        <if test="PR_REQ_TYPE != '' and PR_REQ_TYPE != null">
	           AND D.PR_REQ_TYPE  = #{PR_REQ_TYPE}
	        </if>
	        <if test="CTRL_USER_ID != '' and CTRL_USER_ID != null">
	           AND UPPER(D.CTRL_USER_ID) <include refid="com.sql.likeL"/> #{CTRL_USER_ID} <include refid="com.sql.likeR"/>
	        </if>
			 <if test="PROGRESS_CD != '' and PROGRESS_CD != null">
			   AND CASE WHEN D.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  D.RFX_FROM_DATE  AND <include refid="com.sql.sysdate"/> <![CDATA[<]]> D.RFX_TO_DATE THEN '2700'
				  		WHEN D.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  D.RFX_TO_DATE THEN '2750'  ELSE D.PROGRESS_CD END IN
				   <foreach item="item" index="index" collection="PROGRESS_CD_LIST" open="(" separator="," close=")">
	             	#{item}
	           		</foreach>
			 </if>
	  	  )
		 WHERE RANK =1
    </select>

	<!--BD0350-->
	<select id="getBdHdAnList_old" parameterType="hashMap" resultType="hashMap">
		SELECT DISTINCT
		<if test="_databaseId == 'mssql'">
		     (SELECT STUFF((SELECT ',' + PR_BUYER_NM FROM
		                   (SELECT DISTINCT <include refid="com.sql.dbo"/>getBuyerName(GATE_CD, PR_BUYER_CD, #{ses.langCd}) AS PR_BUYER_NM
		                    FROM STOPBDDT WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) RQDT FOR XML PATH('')),1,1,'')) AS PR_BUYER_NM
		</if>
		<if test="_databaseId == 'oracle'">
		    (SELECT LISTAGG(PR_BUYER_NM, ',')  FROM
		                        (SELECT DISTINCT <include refid="com.sql.dbo"/>GETCOMPANYNAME(GATE_CD, PR_BUYER_CD, #{ses.langCd}) AS PR_BUYER_NM

		                         FROM STOPBDDT WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) RQDT) AS PR_BUYER_NM
		</if>
		<if test="_databaseId == 'oracle'">
			,(SELECT DISTINCT  <include refid="com.sql.dbo"/>GETPLANTNAME(GATE_CD, PR_BUYER_CD,PR_PLANT_CD, #{ses.langCd}) AS PR_PLANT_NM
							 FROM STOPBDDT WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) AS PR_PLANT_NM
			,(SELECT LISTAGG(ANN_USER_NM, ',')  FROM
							(SELECT DISTINCT  ANN_USER_NM

							 FROM STOPBDVN WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) RQDT) AS ANN_NAME
		</if>
			,A.GATE_CD
			,A.BUYER_CD
			,A.RFX_NUM
			,A.RFX_CNT
			,A.REG_DATE
			,A.REG_USER_ID
			,A.MOD_DATE
			,A.MOD_USER_ID
			,A.DEL_FLAG
			,A.RFX_TYPE
			,A.RFX_SUBJECT
			<if test="_databaseId == 'mssql'">
			    ,REPLACE(CONVERT(NVARCHAR(20),  A.RFX_DATE, 111) + ' ' + LEFT(CONVERT(NVARCHAR(20),  A.RFX_DATE, 108), 5), '/', '-') RFX_DATE
               </if>
			<if test="_databaseId == 'oracle'">
			    ,<include refid="com.sql.toDateChar"/>(A.RFX_DATE, 'YYYY-MM-DD HH24:MI:SS') RFX_DATE
			</if>
			,A.PR_TYPE
			,A.PR_REQ_TYPE
			,A.CTRL_USER_ID
			,A.CTRL_USER_NM
			<if test="_databaseId == 'mssql'">
				,REPLACE(CONVERT(NVARCHAR(20),  A.RFX_FROM_DATE, 111) + ' ' + LEFT(CONVERT(NVARCHAR(20),  A.RFX_FROM_DATE, 108), 5), '/', '-') RFX_FROM_DATE
				,REPLACE(CONVERT(NVARCHAR(20),  A.RFX_TO_DATE, 111) + ' ' + LEFT(CONVERT(NVARCHAR(20),  A.RFX_TO_DATE, 108), 5), '/', '-') RFX_TO_DATE
			</if>
			<if test="_databaseId == 'oracle'">
				,<include refid="com.sql.toDateChar"/>(A.RFX_FROM_DATE,'YYYY-MM-DD HH24:MI:SS') RFX_FROM_DATE
				,<include refid="com.sql.toDateChar"/>(A.RFX_TO_DATE,'YYYY-MM-DD HH24:MI:SS') RFX_TO_DATE
			</if>
			,A.RFX_BF_DAY1
			,A.RFX_BF_DAY2
			,A.VENDOR_OPEN_TYPE
			,A.VENDOR_SLT_TYPE
			,A.PRC_SLT_TYPE
			,A.CUR
			,A.SHIPPER_TYPE
			,A.DELY_TERMS
			,A.PAY_TERMS
			,A.PRIVATE_RMK
			,A.RMK
			,A.ATT_FILE_NUM
			,A.ATT_FILE_NUM_IN
			,A.APP_DOC_NUM
			,A.APP_DOC_CNT
			,A.SIGN_STATUS
			,A.SIGN_STATUS2
			,A.SIGN_DATE
			,A.FROM_MOD_RMK
			,A.TO_EXTEND_RMK
			,A.FORCE_CLOSE_RMK
			,TO_CHAR(ANN_FROM_DATE,'YYYY-MM-DD HH24:MI')||' ~ '|| TO_CHAR(ANN_TO_DATE,'HH24:MI')ANN_DATE
			,'' AS ANN_NAME
			,C.RSLT_ATT_FILE_NUM
			,C.RSLT_RMK
			, GETFILECOUNT(A.GATE_CD, A.ATT_FILE_NUM) AS ATT_FILE_CNT
			,(
				SELECT <include refid="com.sql.toVarchar"/>COUNT(DISTINCT VENDOR_CD)) FROM STOPBQDT WHERE GATE_CD = A.GATE_CD
												AND BUYER_CD = A.BUYER_CD
												AND RFX_NUM = A.RFX_NUM
												AND RFX_CNT = A.RFX_CNT
												AND PROGRESS_CD = '300'
												AND DEL_FLAG = '0'
			 ) <include refid="com.sql.stringMerge"/> ' / ' <include refid="com.sql.stringMerge"/>
			 (
				SELECT <include refid="com.sql.toVarchar"/>COUNT(DISTINCT VENDOR_CD)) FROM STOPBDVN WHERE GATE_CD = A.GATE_CD
												AND BUYER_CD = A.BUYER_CD
												AND RFX_NUM = A.RFX_NUM
												AND RFX_CNT = A.RFX_CNT
												AND DEL_FLAG = '0'
			 )
			 VENDOR_CNT

			,(
				SELECT COUNT(DISTINCT VENDOR_CD) FROM STOPBQDT WHERE GATE_CD = A.GATE_CD
												AND BUYER_CD = A.BUYER_CD
												AND RFX_NUM = A.RFX_NUM
												AND RFX_CNT = A.RFX_CNT
												AND PROGRESS_CD = '300'
												AND DEL_FLAG = '0'
			 ) AS SUBMIT_VENDOR_CNT
			,(
				SELECT  TO_CHAR(  COUNT(DISTINCT VENDOR_CD)) FROM STOPBDVN WHERE GATE_CD = A.GATE_CD
												AND RFX_NUM = A.RFX_NUM
												AND RFX_CNT = A.RFX_CNT
												AND DEL_FLAG = '0'
												AND ANN_USER_NM IS NOT NULL
			 )   ||   ' / '   ||
			 (
				SELECT  TO_CHAR(  COUNT(DISTINCT VENDOR_CD))  FROM STOPBDVN WHERE GATE_CD = A.GATE_CD
												AND RFX_NUM = A.RFX_NUM
												AND RFX_CNT = A.RFX_CNT
												AND DEL_FLAG = '0'
			 )
			 ANN_NAME_CNT
			,CASE WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_FROM_DATE  AND <include refid="com.sql.sysdate"/> <![CDATA[<]]> A.RFX_TO_DATE THEN '2700'
		          WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_TO_DATE THEN '2750' ELSE A.PROGRESS_CD END AS PROGRESS_CD
		    ,A.RFX_DATE
		FROM STOPBDHD A
		LEFT OUTER JOIN STOPBDAN C ON (A.GATE_CD = C.GATE_CD
															   AND A.BUYER_CD = C.BUYER_CD
															   ANd A.RFX_NUM = C.RFX_NUM
															   AND A.RFX_CNT = C.RFX_CNT)
        <if test="(VENDOR_CD != '' and VENDOR_CD != null) or (VENDOR_NM != '' and VENDOR_NM != null)">
		JOIN (SELECT DISTINCT RFX_NUM
							, RFX_CNT
						 FROM STOPBDVN BDVN
						 JOIN STOCVNGL VNGL
						   ON BDVN.GATE_CD = VNGL.GATE_CD
						  AND BDVN.VENDOR_CD = VNGL.VENDOR_CD
						 <if test="VENDOR_CD != '' and VENDOR_CD != null">
						  AND BDVN.VENDOR_CD <include refid="com.sql.likeL"/> #{VENDOR_CD} <include refid="com.sql.likeR"/>
						 </if>
						 <if test="VENDOR_NM != '' and VENDOR_NM != null">
						  AND UPPER(VNGL.VENDOR_NM) <include refid="com.sql.likeL"/> #{VENDOR_NM} <include refid="com.sql.likeR"/>
						 </if>
						WHERE BDVN.GATE_CD = #{ses.gateCd}
						  AND BDVN.DEL_FLAG = '0')  B   ON (A.RFX_NUM = B.RFX_NUM
														AND A.RFX_CNT = B.RFX_CNT)
        </if>
		WHERE A.GATE_CD = #{ses.gateCd}
		  AND A.DEL_FLAG = '0'
		 <if test="(PR_BUYER_CD != null and PR_BUYER_CD != '') or (PR_BUYER_NM != null and PR_BUYER_NM != '') ">
            AND EXISTS (SELECT 1 FROM STOPBDDT
		              WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT AND DEL_FLAG = '0'
                           <if test="PR_BUYER_CD != '' and PR_BUYER_CD != null">
						  AND PR_BUYER_CD =#{PR_BUYER_CD}
					    </if>
					     <if test="PR_BUYER_NM != '' and PR_BUYER_NM != null">
						  AND UPPER(GETBUYERINFO(GATE_CD,PR_BUYER_CD,'CUST_NM')) <include refid="com.sql.likeL"/> #{PR_BUYER_NM} <include refid="com.sql.likeR"/>
						 </if>
						 <if test="PR_PLANT_CD != '' and PR_PLANT_CD != null">
						  AND PR_PLANT_CD =#{PR_PLANT_CD}
					    </if>
					    <if test="PR_PLANT_NM != '' and PR_PLANT_NM != null">
						   AND UPPER(getPlantName(GATE_CD,PR_BUYER_CD,PR_PLANT_CD,#{ses.langCd})) <include refid="com.sql.likeL"/> #{PR_PLANT_NM} <include refid="com.sql.likeR"/>
					    </if>
					 )

		</if>
		<if test="DATE_FROM != '' and DATE_FROM != null">
		   AND
					<choose>
					  <when test='TYPE == "REG_DATE"'> A.REG_DATE </when>
					  <when test='TYPE == "RFX_TO_DATE"'> A.RFX_TO_DATE </when>
					  <when test='TYPE == "RFX_FROM_DATE"'> A.RFX_FROM_DATE </when>
					</choose>
				   <![CDATA[>=]]> <include refid="com.sql.toDate"/> #{DATE_FROM}<include refid="com.sql.dateFrom"/>
		</if>
		<if test="DATE_TO != '' and DATE_TO != null">
		   AND
					<choose>
					  <when test='TYPE == "REG_DATE"'> A.REG_DATE </when>
					  <when test='TYPE == "RFX_TO_DATE"'> A.RFX_TO_DATE </when>
					  <when test='TYPE == "RFX_FROM_DATE"'> A.RFX_FROM_DATE </when>
					</choose>
					<![CDATA[<=]]> <include refid="com.sql.toDate"/> #{DATE_TO}<include refid="com.sql.dateTo"/>
		</if>

		<if test="PR_TYPE != '' and PR_TYPE != null">
		   AND A.PR_TYPE = #{PR_TYPE}
		</if>
		<if test="BUYER_CD != '' and BUYER_CD != null">
		   AND A.BUYER_CD = #{ses.companyCd}
		</if>
		<if test="RFX_NUM != '' and RFX_NUM != null">
		   AND UPPER(A.RFX_NUM) <include refid="com.sql.likeL"/> #{RFX_NUM} <include refid="com.sql.likeR"/>
		</if>
		<if test="RFX_SUBJECT != '' and RFX_SUBJECT != null">
		  AND UPPER(A.RFX_SUBJECT) <include refid="com.sql.likeL"/>#{RFX_SUBJECT}<include refid="com.sql.likeR"/>
		</if>
		<if test="CTRL_USER_ID != '' and CTRL_USER_ID != null">
		   AND UPPER(A.CTRL_USER_ID) <include refid="com.sql.likeL"/>#{CTRL_USER_ID}<include refid="com.sql.likeR"/>
		</if>
		<if test="CTRL_USER_NM != '' and CTRL_USER_NM != null">
		   AND UPPER(A.CTRL_USER_NM) <include refid="com.sql.likeL"/>#{CTRL_USER_NM}<include refid="com.sql.likeR"/>
		</if>
		<if test="PROGRESS_CD != '' and PROGRESS_CD != null">
		   AND CASE WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_FROM_DATE  AND <include refid="com.sql.sysdate"/> <![CDATA[<]]> A.RFX_TO_DATE THEN '2700'
		            WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_TO_DATE THEN '2750'  ELSE A.PROGRESS_CD END = #{PROGRESS_CD}
		</if>
		<if test="VENDOR_OPEN_TYPE != '' and VENDOR_OPEN_TYPE != null">
		   AND A.VENDOR_OPEN_TYPE = #{VENDOR_OPEN_TYPE}
		</if>
		<if test="VENDOR_SLT_TYPE != '' and VENDOR_SLT_TYPE != null">
		   AND A.VENDOR_SLT_TYPE = #{VENDOR_SLT_TYPE}
		</if>
		AND ANN_ATTEND_FLAG='Y'
		ORDER BY A.RFX_NUM DESC
					 ,A.RFX_CNT DESC

	</select>

	<select id="getBdHdAnList" parameterType="hashMap" resultType="hashMap">
		SELECT DISTINCT
		<if test="_databaseId == 'mssql'">
		     (SELECT STUFF((SELECT ',' + PR_BUYER_NM FROM
		                   (SELECT DISTINCT <include refid="com.sql.dbo"/>getBuyerName(GATE_CD, PR_BUYER_CD, #{ses.langCd}) AS PR_BUYER_NM
		                    FROM STOPBDDT WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) RQDT FOR XML PATH('')),1,1,'')) AS PR_BUYER_NM
		</if>
		<if test="_databaseId == 'oracle'">
		    (SELECT LISTAGG(PR_BUYER_NM, ',')  FROM
		                        (SELECT DISTINCT <include refid="com.sql.dbo"/>GETCOMPANYNAME(GATE_CD, PR_BUYER_CD, #{ses.langCd}) AS PR_BUYER_NM

		                         FROM STOPBDDT WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) RQDT) AS PR_BUYER_NM
		</if>
		<if test="_databaseId == 'oracle'">
			,(SELECT DISTINCT  <include refid="com.sql.dbo"/>GETPLANTNAME(GATE_CD, PR_BUYER_CD,PR_PLANT_CD, #{ses.langCd}) AS PR_PLANT_NM
							 FROM STOPBDDT WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) AS PR_PLANT_NM
			,(SELECT LISTAGG(ANN_USER_NM, ',')  FROM
							(SELECT DISTINCT  ANN_USER_NM

							 FROM STOPBDVN WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT) RQDT) AS ANN_NAME
		</if>
			,A.GATE_CD
			,A.BUYER_CD
			,A.RFX_NUM
			,A.RFX_CNT
			,A.REG_DATE
			,A.REG_USER_ID
			,A.MOD_DATE
			,A.MOD_USER_ID
			,A.DEL_FLAG
			,A.RFX_TYPE
			,A.RFX_SUBJECT
			<if test="_databaseId == 'mssql'">
			    ,REPLACE(CONVERT(NVARCHAR(20),  A.RFX_DATE, 111) + ' ' + LEFT(CONVERT(NVARCHAR(20),  A.RFX_DATE, 108), 5), '/', '-') RFX_DATE
               </if>
			<if test="_databaseId == 'oracle'">
			    ,<include refid="com.sql.toDateChar"/>(A.RFX_DATE, 'YYYY-MM-DD HH24:MI') RFX_DATE
			</if>
			,A.PR_TYPE
			,A.PR_REQ_TYPE
			,A.CTRL_USER_ID
			,A.CTRL_USER_NM
			<if test="_databaseId == 'mssql'">
				,REPLACE(CONVERT(NVARCHAR(20),  A.RFX_FROM_DATE, 111) + ' ' + LEFT(CONVERT(NVARCHAR(20),  A.RFX_FROM_DATE, 108), 5), '/', '-') RFX_FROM_DATE
				,REPLACE(CONVERT(NVARCHAR(20),  A.RFX_TO_DATE, 111) + ' ' + LEFT(CONVERT(NVARCHAR(20),  A.RFX_TO_DATE, 108), 5), '/', '-') RFX_TO_DATE
			</if>
			<if test="_databaseId == 'oracle'">
				,<include refid="com.sql.toDateChar"/>(A.RFX_FROM_DATE,'YYYY-MM-DD HH24:MI') RFX_FROM_DATE
				,<include refid="com.sql.toDateChar"/>(A.RFX_TO_DATE,'YYYY-MM-DD HH24:MI') RFX_TO_DATE
			</if>
			,A.RFX_BF_DAY1
			,A.RFX_BF_DAY2
			,A.VENDOR_OPEN_TYPE
			,A.VENDOR_SLT_TYPE
			,A.PRC_SLT_TYPE
			,A.CUR
			,A.SHIPPER_TYPE
			,A.DELY_TERMS
			,A.PAY_TERMS
			,A.PRIVATE_RMK
			,A.RMK
			,A.ATT_FILE_NUM
			,A.ATT_FILE_NUM_IN
			,A.APP_DOC_NUM
			,A.APP_DOC_CNT
			,A.SIGN_STATUS
			,A.SIGN_STATUS2
			,A.SIGN_DATE
			,A.FROM_MOD_RMK
			,A.TO_EXTEND_RMK
			,A.FORCE_CLOSE_RMK
			,TO_CHAR(ANN_FROM_DATE,'YYYY-MM-DD HH24:MI')||' ~ '|| TO_CHAR(ANN_TO_DATE,'HH24:MI')ANN_DATE
			,'' AS ANN_NAME
			,C.RSLT_ATT_FILE_NUM
			,C.RSLT_RMK
			, GETFILECOUNT(A.GATE_CD, A.ATT_FILE_NUM) AS ATT_FILE_CNT
			,(
				SELECT <include refid="com.sql.toVarchar"/>COUNT(DISTINCT VENDOR_CD)) FROM STOPBQDT WHERE GATE_CD = A.GATE_CD
												AND BUYER_CD = A.BUYER_CD
												AND RFX_NUM = A.RFX_NUM
												AND RFX_CNT = A.RFX_CNT
												AND PROGRESS_CD = '300'
												AND DEL_FLAG = '0'
			 ) <include refid="com.sql.stringMerge"/> ' / ' <include refid="com.sql.stringMerge"/>
			 (
				SELECT <include refid="com.sql.toVarchar"/>COUNT(DISTINCT VENDOR_CD)) FROM STOPBDVN WHERE GATE_CD = A.GATE_CD
												AND BUYER_CD = A.BUYER_CD
												AND RFX_NUM = A.RFX_NUM
												AND RFX_CNT = A.RFX_CNT
												AND DEL_FLAG = '0'
			 )
			 VENDOR_CNT

			,(
				SELECT COUNT(DISTINCT VENDOR_CD) FROM STOPBQDT WHERE GATE_CD = A.GATE_CD
												AND BUYER_CD = A.BUYER_CD
												AND RFX_NUM = A.RFX_NUM
												AND RFX_CNT = A.RFX_CNT
												AND PROGRESS_CD = '300'
												AND DEL_FLAG = '0'
			 ) AS SUBMIT_VENDOR_CNT
			,(
				SELECT  TO_CHAR(  COUNT(DISTINCT VENDOR_CD)) FROM STOPBDVN WHERE GATE_CD = A.GATE_CD
												AND RFX_NUM = A.RFX_NUM
												AND RFX_CNT = A.RFX_CNT
												AND DEL_FLAG = '0'
												AND ANN_PASS_FLAG = 'Y'
			 )   ||   ' / '   ||
			 (
				SELECT  TO_CHAR(  COUNT( DISTINCT VENDOR_CD))  FROM STOPBDVN WHERE GATE_CD = A.GATE_CD
												AND RFX_NUM = A.RFX_NUM
												AND RFX_CNT = A.RFX_CNT
												AND DEL_FLAG = '0'
			 )
			 ANN_NAME_CNT
			,CASE WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_FROM_DATE  AND <include refid="com.sql.sysdate"/> <![CDATA[<]]> A.RFX_TO_DATE THEN '2700'
		          WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_TO_DATE THEN '2750' ELSE A.PROGRESS_CD END AS PROGRESS_CD
		    ,A.RFX_DATE
		FROM STOPBDHD A
		LEFT OUTER JOIN STOPBDAN C ON (A.GATE_CD = C.GATE_CD
															   AND A.BUYER_CD = C.BUYER_CD
															   ANd A.RFX_NUM = C.RFX_NUM
															   AND A.RFX_CNT = C.RFX_CNT)
        <if test="(VENDOR_CD != '' and VENDOR_CD != null) or (VENDOR_NM != '' and VENDOR_NM != null)">
		JOIN (SELECT DISTINCT RFX_NUM
							, RFX_CNT
						 FROM STOPBDVN BDVN
						 JOIN STOCVNGL VNGL
						   ON BDVN.GATE_CD = VNGL.GATE_CD
						  AND BDVN.VENDOR_CD = VNGL.VENDOR_CD
						 <if test="VENDOR_CD != '' and VENDOR_CD != null">
						  AND BDVN.VENDOR_CD <include refid="com.sql.likeL"/> #{VENDOR_CD} <include refid="com.sql.likeR"/>
						 </if>
						 <if test="VENDOR_NM != '' and VENDOR_NM != null">
						  AND UPPER(VNGL.VENDOR_NM) <include refid="com.sql.likeL"/> #{VENDOR_NM} <include refid="com.sql.likeR"/>
						 </if>
						WHERE BDVN.GATE_CD = #{ses.gateCd}
						  AND BDVN.DEL_FLAG = '0')  B   ON (A.RFX_NUM = B.RFX_NUM
														AND A.RFX_CNT = B.RFX_CNT)
        </if>
		WHERE A.GATE_CD = #{ses.gateCd}
		  AND A.DEL_FLAG = '0'
        <if test="(PR_BUYER_CD != null and PR_BUYER_CD != '') or (PR_BUYER_NM != null and PR_BUYER_NM != '') ">
            AND EXISTS (SELECT 1 FROM STOPBDDT
            WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT AND DEL_FLAG = '0'
            <if test="PR_BUYER_CD != '' and PR_BUYER_CD != null">
                AND PR_BUYER_CD =#{PR_BUYER_CD}
            </if>
            <if test="PR_BUYER_NM != '' and PR_BUYER_NM != null">
                AND <include refid="com.sql.dbo"/>getBuyerName(A.GATE_CD, PR_BUYER_CD, #{ses.langCd}) <include refid="com.sql.likeL"/> #{PR_BUYER_NM} <include refid="com.sql.likeR"/>
            </if>
            )
        </if>
        <if test="(PR_PLANT_CD != null and PR_PLANT_CD != '') or (PR_PLANT_NM != null and PR_PLANT_NM != '') ">
            AND EXISTS (SELECT 1 FROM STOPBDDT
            WHERE GATE_CD = A.GATE_CD AND RFX_NUM = A.RFX_NUM AND RFX_CNT = A.RFX_CNT AND DEL_FLAG = '0'
            <if test="PR_PLANT_CD != '' and PR_PLANT_CD != null">
                AND PR_PLANT_CD =#{PR_PLANT_CD}
            </if>
            <if test="PR_PLANT_NM != '' and PR_PLANT_NM != null">
                AND ${PR_PLANT_NM_L}<include refid="com.sql.dbo"/>getPlantName(#{ses.gateCd}, PR_BUYER_CD, PR_PLANT_CD, #{ses.langCd}) ${PR_PLANT_NM_R}
            </if>
            )
        </if>
		<if test="DATE_FROM != '' and DATE_FROM != null">
		   AND
					<choose>
					  <when test='TYPE == "REG_DATE"'> A.RFX_DATE </when>
					  <when test='TYPE == "RFX_TO_DATE"'> A.RFX_TO_DATE </when>
					  <when test='TYPE == "RFX_FROM_DATE"'> A.RFX_FROM_DATE </when>
					</choose>
				   <![CDATA[>=]]> <include refid="com.sql.toDate"/> #{DATE_FROM}<include refid="com.sql.dateFrom"/>
		</if>
		<if test="DATE_TO != '' and DATE_TO != null">
		   AND
					<choose>
					  <when test='TYPE == "REG_DATE"'> A.RFX_DATE </when>
					  <when test='TYPE == "RFX_TO_DATE"'> A.RFX_TO_DATE </when>
					  <when test='TYPE == "RFX_FROM_DATE"'> A.RFX_FROM_DATE </when>
					</choose>
					<![CDATA[<=]]> <include refid="com.sql.toDate"/> #{DATE_TO}<include refid="com.sql.dateTo"/>
		</if>

		<if test="PR_TYPE != '' and PR_TYPE != null">
		   AND A.PR_TYPE = #{PR_TYPE}
		</if>
		<if test="PR_REQ_TYPE != '' and PR_REQ_TYPE != null">
		   AND A.PR_REQ_TYPE = #{PR_REQ_TYPE}
		</if>
		<if test="BUYER_CD != '' and BUYER_CD != null">
		   AND A.BUYER_CD = #{ses.companyCd}
		</if>
		<if test="RFX_NUM != '' and RFX_NUM != null">
		   AND UPPER(A.RFX_NUM) <include refid="com.sql.likeL"/> #{RFX_NUM} <include refid="com.sql.likeR"/>
		</if>
		<if test="RFX_SUBJECT != '' and RFX_SUBJECT != null">
		  AND UPPER(A.RFX_SUBJECT) <include refid="com.sql.likeL"/>#{RFX_SUBJECT}<include refid="com.sql.likeR"/>
		</if>
		<if test="CTRL_USER_ID != '' and CTRL_USER_ID != null">
		   AND UPPER(A.CTRL_USER_ID) <include refid="com.sql.likeL"/>#{CTRL_USER_ID}<include refid="com.sql.likeR"/>
		</if>
		<if test="CTRL_USER_NM != '' and CTRL_USER_NM != null">
		   AND UPPER(A.CTRL_USER_NM) <include refid="com.sql.likeL"/>#{CTRL_USER_NM}<include refid="com.sql.likeR"/>
		</if>
		<!-- <if test="PROGRESS_CD != '' and PROGRESS_CD != null">
		   AND CASE WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_FROM_DATE  AND <include refid="com.sql.sysdate"/> <![CDATA[<]]> A.RFX_TO_DATE THEN '2700'
		            WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_TO_DATE THEN '2750'  ELSE A.PROGRESS_CD END = #{PROGRESS_CD}
		</if> -->
		<if test="PROGRESS_CD != '' and PROGRESS_CD != null">
		   AND CASE WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_FROM_DATE  AND <include refid="com.sql.sysdate"/> <![CDATA[<]]> A.RFX_TO_DATE THEN '2700'
		            WHEN A.PROGRESS_CD = '2650' AND <include refid="com.sql.sysdate"/> <![CDATA[>]]>  A.RFX_TO_DATE THEN '2750'  ELSE A.PROGRESS_CD END IN
		            <foreach item="item" index="index" collection="PROGRESS_CD_LIST" open="(" separator="," close=")">
             			#{item}
          			 </foreach>
		</if>
		<if test="VENDOR_OPEN_TYPE != '' and VENDOR_OPEN_TYPE != null">
		   AND A.VENDOR_OPEN_TYPE = #{VENDOR_OPEN_TYPE}
		</if>
		<if test="VENDOR_SLT_TYPE != '' and VENDOR_SLT_TYPE != null">
		   AND A.VENDOR_SLT_TYPE = #{VENDOR_SLT_TYPE}
		</if>
		AND ANN_ATTEND_FLAG='Y'
		ORDER BY A.RFX_NUM DESC
					 ,A.RFX_CNT DESC

	</select>
	<!--BD0350P01-->
	<select id="getBdVnList" parameterType="hashMap" resultType="hashMap">
		SELECT DISTINCT
			  VN.VENDOR_CD
			, GETVENDORNAME(VN.GATE_CD,VN.VENDOR_CD,#{ses.langCd}) AS VENDOR_NM
			, GETUSERNAME(VN.GATE_CD,VN.VENDOR_USER_ID ,#{ses.langCd}) AS VENDOR_USER_NM
			, VNGL.BUSINESS_TYPE
			, VNGL.INDUSTRY_TYPE
			, VN.ANN_USER_NM
			, VN.ANN_USER_HP_NUM
			, VN.ANN_USER_EMAIL
			, VN.ANN_PASS_FLAG
			, VN.RFX_NUM
			, VN.RFX_CNT
		 FROM STOPBDVN VN
		 LEFT OUTER JOIN STOCVNGL VNGL
			  ON (VN.GATE_CD   = VNGL.GATE_CD
			  AND VN.VENDOR_CD = VNGL.VENDOR_CD)
		WHERE VN.GATE_CD = #{ses.gateCd}
		  AND VN.RFX_NUM = #{RFX_NUM}
		  AND VN.RFX_CNT = #{RFX_CNT}
	</select>

	<!-- 입찰설명회 참석결과 등록 -->
	<update id="updateBdVn">
          UPDATE STOPBDVN
			 SET  ANN_PASS_FLAG 	= #{ANN_PASS_FLAG}
				, ANN_USER_NM		= #{ANN_USER_NM}
				, ANN_USER_HP_NUM	= #{ANN_USER_HP_NUM}
				, ANN_USER_EMAIL	= #{ANN_USER_EMAIL}
		   WHERE GATE_CD	= #{ses.gateCd}
			 AND RFX_NUM	= #{RFX_NUM}
		     AND RFX_CNT	= #{RFX_CNT}
		     AND VENDOR_CD	= #{VENDOR_CD}
    </update>

    <!-- 입찰설명회 참석결과 등록 -->
    <update id="updateBdAn">
          UPDATE STOPBDAN
			SET   RSLT_ATT_FILE_NUM	=#{RSLT_ATT_FILE_NUM}
				, RSLT_RMK			=#{RSLT_RMK}
			WHERE GATE_CD	= #{ses.gateCd}
			  AND RFX_NUM	= #{RFX_NUM}
			  AND RFX_CNT	= #{RFX_CNT}
    </update>

    <select id="getRfxInfoHD" parameterType="hashMap" resultType="hashMap">

        SELECT
              RQHD.RFX_NUM
            , RQHD.RFX_CNT
            , RQHD.RFX_SUBJECT
            ,<include refid="com.sql.toDateChar"/>(RQHD.RFX_TO_DATE, 'YYYY-MM-DD HH24:MI') AS RFQ_CLOSE_DATE
            ,<include refid="com.sql.dbo"/>getComCode(RQHD.GATE_CD, 'M066', RQHD.VENDOR_OPEN_TYPE, 0, #{ses.langCd}) AS VENDOR_OPEN_TYPE
            ,<include refid="com.sql.dbo"/>getComCode(RQHD.GATE_CD, 'MP065', RQHD.VENDOR_SLT_TYPE, 0, #{ses.langCd}) AS VENDOR_SLT_TYPE
            , '' AS RMK_TEXT_NUM
            , RQHD.CTRL_USER_ID
            ,<include refid="com.sql.dbo"/>getUserName(RQHD.GATE_CD, RQHD.CTRL_USER_ID, #{ses.langCd}) AS CTRL_USER_NM
            ,<include refid="com.sql.nvl"/>(UR.TEL_NUM, UR.CELL_NUM) AS TEL_NUM
            , UR.EMAIL
          FROM STOPBDHD RQHD <include refid="com.sql.noLock"/>
          LEFT JOIN STOCUSER UR <include refid="com.sql.noLock"/>
	           ON (RQHD.GATE_CD = UR.GATE_CD
	           AND RQHD.CTRL_USER_ID = UR.USER_ID)
         WHERE RQHD.GATE_CD = #{ses.gateCd}
           AND RQHD.RFX_NUM = #{RFX_NUM}
           AND RQHD.RFX_CNT = #{RFX_CNT}
    </select>

    <select id="getRfxItemList" parameterType="hashMap" resultType="hashMap">
        SELECT
		 	 ITEM_DESC
		 	,ITEM_SPEC
		 	,MAKER_PART_NO
		 	,BRAND_NM
		 	,<include refid="com.sql.dbo"/>getComCode(GATE_CD, 'M037', UNIT_CD, 0, #{ses.langCd}) AS UNIT_CD
		 FROM STOPBDDT
		WHERE GATE_CD = #{ses.gateCd}
		  AND RFX_NUM = #{RFX_NUM}
		  AND RFX_CNT = #{RFX_CNT}
    </select>

    <select id="getRfxVendorList" parameterType="hashMap" resultType="hashMap">

       SELECT
		 	 HD.CTRL_USER_ID AS SEND_USER_ID
		 	,CTRL_UR.USER_NM AS SEND_USER_NM
		    ,CTRL_UR.EMAIL   AS SEND_EMAIL
		    ,CTRL_UR.TEL_NUM AS SEND_TEL_NUM
		    ,UR.USER_ID 	 AS RECV_USER_ID
		    ,UR.USER_NM 	 AS RECV_USER_NM
		    ,(CASE WHEN <include refid="com.sql.nvl"/>(UR.SMS_FLAG, '1') = '1' THEN UR.CELL_NUM ELSE '' END) AS RECV_TEL_NUM
			,(CASE WHEN <include refid="com.sql.nvl"/>(UR.MAIL_FLAG, '1') = '1' THEN UR.EMAIL ELSE '' END) AS RECV_EMAIL
			,<include refid="com.sql.dbo"/>getVendorName(VN.GATE_CD, VN.VENDOR_CD, #{ses.langCd}) AS VENDOR_NM
		    ,HD.RFX_NUM
		FROM STOPBDHD HD
						LEFT JOIN STOPBDVN VN
						           ON (HD.GATE_CD = VN.GATE_CD
						           AND HD.RFX_NUM = VN.RFX_NUM
						           AND HD.RFX_CNT = VN.RFX_CNT)
						LEFT JOIN STOCCVUR UR
						           ON (VN.GATE_CD = UR.GATE_CD
						           AND VN.VENDOR_CD = UR.COMPANY_CD)
						LEFT JOIN STOCUSER CTRL_UR
						           ON (HD.GATE_CD = CTRL_UR.GATE_CD
						           AND HD.CTRL_USER_ID = CTRL_UR.USER_ID)
		WHERE HD.GATE_CD = #{ses.gateCd}
		AND <include refid="com.sql.nvl"/>(UR.BLOCK_FLAG, '0') = '0'
		AND HD.RFX_NUM  = #{RFX_NUM}
		AND HD.RFX_CNT  = #{RFX_CNT}
		AND HD.DEL_FLAG = '0'
		AND VN.DEL_FLAG = '0'
		AND UR.DEL_FLAG = '0'
		AND UR.USE_FLAG = '1'
		AND UR.PROGRESS_CD = 'E'
		GROUP BY VN.GATE_CD, HD.RFX_NUM,
		          HD.CTRL_USER_ID, CTRL_UR.USER_NM,
		 		  CTRL_UR.EMAIL, CTRL_UR.TEL_NUM,
		          UR.USER_ID, UR.USER_NM,
		 		  UR.SMS_FLAG, UR.CELL_NUM,
		  UR.MAIL_FLAG, UR.EMAIL, VN.VENDOR_CD
    </select>
    <select id="gbunFlag" resultType="int">
		SELECT COUNT(*)
		FROM STOPBDHD  A
		LEFT OUTER JOIN STOCSCTM B
			ON B.APP_DOC_NUM  = A.APP_DOC_NUM
		 	AND B.APP_DOC_CNT = A.APP_DOC_CNT
		WHERE A.GATE_CD = #{ses.gateCd}
		AND A.RFX_NUM   = #{RFX_NUM}
		AND A.RFX_CNT   = #{RFX_CNT}
		AND A.DEL_FLAG  = '0'
	    AND B.APP_DOC_NUM IS NOT NULL
	</select>
	<select id="getVendorListHtml" resultType="hashmap">
		SELECT
	            BDVN.VENDOR_CD
		  , MAX(VNGL.VENDOR_NM) AS VENDOR_NM
		  , MAX(BDVN.VENDOR_EMAIL) AS EMAIL
		  , MAX(VNGL.CEO_USER_NM) AS CEO_USER_NM
		  , MAX(VNGL.CREDIT_CD) AS CREDIT_CD
		  , MAX(TO_CHAR(VNGL.FOUNDATION_DATE, 'YYYY-MM-DD')) AS FOUNDATION_DATE --설립연도
		  , MAX(VNGL.HQ_ADDR_1) AS HQ_ADDR_1
		  , MAX(VNGL.EVA_NAME) AS EVA_NAME
		  , MAX(VNGL.YEAR) AS YEAR
		  , MAX(VNGL.EVA1) AS EVA1 --신용평가등급
		  , MAX(VNGL.EVA2) AS EVA2 --현금흐름
		  , MAX(VNGL.CAPITAL) AS CAPITAL --자본총계
		  , MAX(VNGL.INS_AMT) AS INS_AMT --매출액
		  , MAX(<include refid="com.sql.nvl"/>(VNGL.CAPITAL,0))+ MAX(<include refid="com.sql.nvl"/>(VNGL.DEBT_TOT,0)) AS SUM_AMT --자산총계

		FROM STOPBDVN BDVN
		JOIN STOCVNGL VNGL ON (BDVN.GATE_CD = VNGL.GATE_CD
							   AND BDVN.VENDOR_CD = VNGL.VENDOR_CD
							   AND VNGL.DEL_FLAG = '0')
		WHERE BDVN.GATE_CD 			= #{ses.gateCd}
		  AND BDVN.DEL_FLAG 		= '0'
		  AND BDVN.BUYER_CD 		= #{BUYER_CD}
		  AND BDVN.RFX_NUM 			= #{RFX_NUM}
		  AND TO_CHAR(BDVN.RFX_CNT) = #{RFX_CNT}
		  GROUP BY BDVN.VENDOR_CD,BDVN.GATE_CD
	</select>

	<update id="gwSignResult" parameterType="hashMap">
		UPDATE STOPBDHD SET
		     APP_DOC_NUM	 = #{APP_DOC_NUM}
			,APP_DOC_CNT	 = #{APP_DOC_CNT}
			,SIGN_STATUS 	 = #{SIGN_STATUS}
			,PROGRESS_CD	 = #{PROGRESS_CD}
			,SIGN_DATE 	 	 = <include refid="com.sql.sysdate"/>

		WHERE GATE_CD 	 = #{ses.gateCd}
		AND RFX_NUM     = #{RFX_NUM}
		AND RFX_CNT     = #{RFX_CNT}

	</update>

	<select id="getBlsmHtml" resultType="hashMap">
	 WITH EXAMPLE AS
	 (
	 	SELECT

		   APP_DOC_NUM
		  ,APP_DOC_CNT
		  ,PROGRESS_CD
		FROM STOPBDHD  A
		WHERE A.GATE_CD = #{ses.gateCd}
		AND A.RFX_NUM   = #{RFX_NUM}
		AND A.RFX_CNT   = #{RFX_CNT}
		AND A.DEL_FLAG  = '0'
	 )
	SELECT
		 BLSM_HTML
		,A.APP_DOC_NUM
		,A.APP_DOC_CNT
        ,A.SIGN_STATUS
        ,B.PROGRESS_CD
        ,(
		  SELECT count(*)
		  FROM COM_ELCT_CONFM_IF
		  WHERE ELCT_CONFM_IF_SEQ = A.APP_DOC_NUM||A.APP_DOC_CNT
		  AND ELCT_CONFM_STAT_CD != '9'
		 ) AS COFM_FLAG
	FROM STOCSCTM  A
	JOIN EXAMPLE B
		ON  A.APP_DOC_NUM = B.APP_DOC_NUM
		AND A.APP_DOC_CNT = B.APP_DOC_CNT
	WHERE A.GATE_CD = #{ses.gateCd}
	</select>

	<select id="getBDdtSubmitDataR_0360" resultType="hashmap">

		SELECT
			     A.VENDOR_CD
			    ,GETVENDORNAME(A.GATE_CD,A.VENDOR_CD,#{ses.langCd}) AS VENDOR_NM
			    ,B.ITEM_CD
			    ,B.RFX_QT
			    ,B.ITEM_DESC
			    ,B.ITEM_SPEC
			    ,B.UNIT_CD
			    ,B.UNIT_PRC AS RQ_UNIT_PRC
			    ,B.RFX_AMT
			    ,TO_CHAR (B.DELY_DATE, 'YYYYMMDD') AS DELY_DATE
			    , GETFILECOUNT(B.GATE_CD, B.ATT_FILE_NUM) AS BATT_FILE_CNT
			    ,B.ATT_FILE_NUM  AS BATT_FILE_NUM
			    ,<include refid="com.sql.nvl"/>(A.GIVEUP_FLAG,1) AS GIVEUP_FLAG
			    ,GETFILECOUNT(A.GATE_CD, C.ATT_FILE_NUM) AS SATT_FILE_CNT
			    ,C.ATT_FILE_NUM  AS SATT_FILE_NUM
			    ,B.RMK AS BRMK
		   		,C.RMK AS SRMK
			    ,CASE WHEN A.NEGO_RESULT_TYPE = '06' THEN 0 ELSE C.QTA_AMT END AS QTA_AMT
		 	    ,CASE WHEN A.NEGO_RESULT_TYPE = '06' THEN 0 ELSE C.UNIT_PRC END AS UNIT_PRC
		 FROM STOPBDVN A JOIN STOPBDDT B ON (B.GATE_CD = A.GATE_CD
										  AND B.RFX_NUM = A.RFX_NUM
										  AND B.RFX_CNT = A.RFX_CNT
										  AND B.RFX_SQ = A.RFX_SQ
										  AND B.DEL_FLAG = '0')
		 LEFT OUTER JOIN STOPBQDT C ON (C.GATE_CD = A.GATE_CD
										  AND C.RFX_NUM = B.RFX_NUM
										  AND C.RFX_CNT = B.RFX_CNT
										  AND C.RFX_SQ = B.RFX_SQ
										  AND C.VENDOR_CD=A.VENDOR_CD
										  AND C.DEL_FLAG = '0')
		 LEFT OUTER JOIN STOPBDHD D ON (D.GATE_CD = A.GATE_CD
										  AND D.RFX_NUM = A.RFX_NUM
										  AND D.RFX_CNT = A.RFX_CNT
										  AND D.DEL_FLAG = '0')
		 LEFT OUTER JOIN STOCEVEM E ON (E.GATE_CD = C.GATE_CD
										  AND E.EV_NUM = A.EV_NUM
										  AND E.DEL_FLAG = '0')
		 LEFT OUTER JOIN STOPBDVO F ON E.GATE_CD = A.GATE_CD
										  AND F.RFX_NUM = C.RFX_NUM
										  AND F.RFX_CNT = C.RFX_CNT
										  AND F.REG_DATE = (SELECT MAX(REG_DATE) FROM STOPBDVO WHERE GATE_CD = F.GATE_CD AND RFX_NUM = F.RFX_NUM AND RFX_CNT = F.RFX_CNT AND DEL_FLAG = '0')
										  AND F.DEL_FLAG = '0'
										  AND F.VENDOR_CD =A.VENDOR_CD
		 WHERE A.GATE_CD = #{ses.gateCd}
		 AND A.DEL_FLAG = '0'
	     AND A.RFX_NUM  = #{RFX_NUM}
	     AND A.RFX_CNT  = #{RFX_CNT}
	     ORDER BY GIVEUP_FLAG ASC ,A.VENDOR_CD,ITEM_DESC

	</select>

</mapper>