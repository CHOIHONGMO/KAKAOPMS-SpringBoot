<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.st_ones.evermp.BOD1.BOD101_Mapper">


	<update id="siv1020_doUpdateUPODT" parameterType="hashmap">
		UPDATE STOUPODT
		   SET INV_QTY = (SELECT <include refid="com.sql.nvl"/>(SUM(INV_QTY), 0) FROM STOUIVDT
						   WHERE GATE_CD  = #{ses.gateCd}
							 AND CUST_CD  = #{CUST_CD}
							 AND CPO_NO   = #{CPO_NO}
							 AND CPO_SEQ  = #{CPO_SEQ}
							 AND DEL_FLAG = '0')
			 , PROGRESS_CD 	   = '6300'
			 , DELY_TYPE 	   = #{DELY_TYPE}
		 WHERE GATE_CD  = #{ses.gateCd}
		   AND CUST_CD  = #{CUST_CD}
		   AND CPO_NO   = #{CPO_NO}
		   AND CPO_SEQ  = #{CPO_SEQ}
		   AND DEL_FLAG = '0'
	</update>
	<update id="siv1020_doUpdateYPODT" parameterType="hashmap">
		UPDATE STOYPODT
		   SET INV_QTY = (SELECT <include refid="com.sql.nvl"/>(SUM(INV_QTY), 0) FROM STOUIVDT
						   WHERE GATE_CD  = #{ses.gateCd}
							 AND PO_NO    = #{PO_NO}
							 AND PO_SEQ   = #{PO_SEQ}
							 AND DEL_FLAG = '0')
			 , PROGRESS_CD 	   = '6300'
			 , DELY_TYPE 	   = #{DELY_TYPE}
		 WHERE GATE_CD  = #{ses.gateCd}
		   AND PO_NO    = #{PO_NO}
		   AND PO_SEQ   = #{PO_SEQ}
		   AND DEL_FLAG = '0'
	</update>











	<insert id="doGrSaveGRDT" parameterType="hashMap">
		INSERT INTO STOCGRDT(
			 GATE_CD
			,GR_NO
			,GR_SEQ
			,REG_DATE
			,REG_USER_ID
			,MOD_DATE
			,MOD_USER_ID
			,DEL_FLAG
			,CUST_CD
			,PLANT_CD
			,PR_TYPE
			,CUST_ITEM_CD
			,ITEM_CD
			,ITEM_DESC
			,ITEM_SPEC
			,MAKER_CD
			,MAKER_NM
			,MAKER_PART_NO
			,BRAND_CD
			,BRAND_NM
			,ORIGIN_CD
			,UNIT_CD
			,CUR
			,GR_QTY
			,GR_UNIT_PRICE
			,GR_ITEM_AMT
			,GR_DATE
			,GR_USER_ID
			,GR_AGENT_FLAG
			,GR_AGENT_RMK
			,VENDOR_CD
			,CPO_NO
			,CPO_SEQ
			,PO_NO
			,PO_SEQ
			,INV_NO
			,INV_SEQ
			,IV_NO
			,IV_SEQ
			,DOC_TYPE
			,TAX_CD
			,PO_UNIT_PRICE
			,PO_ITEM_AMT
			,DEAL_CD
			,LOG_CD
			,WH_CD
			,TC_FLAG
			,DELY_TYPE
			,DELY_COMPANY_NM
			,WAYBILL_NO
			,CLOSING_NO
			,CLOSING_SEQ
			,AGENT_FLAG
			,AGENT_USER_ID
			,AGENT_REG_DATE
			,GR_AGENT_ATTFILE_NUM
			,CLOSING_AP_NO
			,CLOSING_AP_SEQ
			,IF_GR_NO
			,IF_GR_SEQ
        ) VALUES (
			 #{ses.gateCd}                       --GATE_CD
			,#{GR_NO}                         --GR_NO
			,(SELECT <include refid="com.sql.nvl"/>(MAX(GR_SEQ), 0) + 1 FROM STOCGRDT WHERE GATE_CD = #{ses.gateCd} AND GR_NO = #{GR_NO})  --GR_SEQ
			,<include refid="com.sql.sysdate"/>                     --REG_DATE
			,#{ses.userId}                   --REG_USER_ID
			,<include refid="com.sql.sysdate"/>                      --MOD_DATE
			,#{ses.userId}                   --MOD_USER_ID
			,'0'                      --DEL_FLAG
			,#{CUST_CD}                       --CUST_CD
			,#{PLANT_CD}                      --PLANT_CD
			,#{PR_TYPE}                       --PR_TYPE
			,#{CUST_ITEM_CD}                  --CUST_ITEM_CD
			,#{ITEM_CD}                       --ITEM_CD
			,#{ITEM_DESC}                     --ITEM_DESC
			,#{ITEM_SPEC}                     --ITEM_SPEC
			,#{MAKER_CD}                      --MAKER_CD
			,#{MAKER_NM}                      --MAKER_NM
			,#{MAKER_PART_NO}                 --MAKER_PART_NO
			,#{BRAND_CD}                      --BRAND_CD
			,#{BRAND_NM}                      --BRAND_NM
			,#{ORIGIN_CD}                     --ORIGIN_CD
			,#{UNIT_CD}                       --UNIT_CD
			,#{CUR}                           --CUR
			,#{CPO_QTY}                        --GR_QTY
			,#{CPO_UNIT_PRICE}                --GR_UNIT_PRICE
			,#{CPO_ITEM_AMT}                 		  --GR_ITEM_AMT
			,SYSDATE                        --GR_DATE
			,#{ses.userId}                    --GR_USER_ID
			,'1'                			  --GR_AGENT_FLAG
			,#{GR_AGENT_RMK}                  --GR_AGENT_RMK
			,#{VENDOR_CD}                     --VENDOR_CD
			,#{CPO_NO}                        --CPO_NO
			,#{CPO_SEQ}                       --CPO_SEQ
			,#{PO_NO}                         --PO_NO
			,#{PO_SEQ}                        --PO_SEQ
			,#{INV_NO}                        --INV_NO
			,#{INV_SEQ}                       --INV_SEQ
			,#{IV_NO}                         --IV_NO
			,#{IV_SEQ}                        --IV_SEQ
			,#{DOC_TYPE}                      --DOC_TYPE
			,#{TAX_CD}                        --TAX_CD
			,#{PO_UNIT_PRICE}                 --PO_UNIT_PRICE
			,#{PO_ITEM_AMT}                   --PO_ITEM_AMT
			,#{DEAL_CD}                       --DEAL_CD
			,#{LOG_CD}                        --LOG_CD
			,#{WH_CD}                         --WH_CD
			,#{TC_FLAG}                       --TC_FLAG
			,#{DELY_TYPE}                     --DELY_TYPE
			,#{DELY_COMPANY_NM}               --DELY_COMPANY_NM
			,#{WAYBILL_NO}                    --WAYBILL_NO
			,#{CLOSING_NO}                    --CLOSING_NO
			,#{CLOSING_SEQ}                   --CLOSING_SEQ
			,'1'                              --AGENT_FLAG
			,#{ses.userId}                    --AGENT_USER_ID
			,<include refid="com.sql.sysdate"/> --AGENT_REG_DATE
			,#{GR_AGENT_ATTFILE_NUM}          --GR_AGENT_ATTFILE_NUM
			,#{CLOSING_AP_NO}                 --CLOSING_AP_NO
			,#{CLOSING_AP_SEQ}                --CLOSING_AP_SEQ
			,#{IF_GR_NO}                      --IF_GR_NO
			,#{IF_GR_SEQ}                     --IF_GR_SEQ
            )

	</insert>


















	<insert id="delupodt" parameterType="hashmap">
		UPDATE STOUPODT SET DEL_FLAG = '1'
		WHERE GATE_CD = #{ses.gateCd}
		AND CUST_CD   = #{CUST_CD}
		AND CPO_NO    = #{CPO_NO}
		AND CPO_SEQ   = #{CPO_SEQ}
	</insert>

	<insert id="delypodt" parameterType="hashmap">
		UPDATE STOYPODT SET DEL_FLAG = '1'
		WHERE GATE_CD = #{ses.gateCd}
		AND PO_NO    = #{PO_NO}
		AND PO_SEQ   = #{PO_SEQ}
	</insert>

	<insert id="delupohd" parameterType="hashmap">
		UPDATE STOUPOHD SET DEL_FLAG = CASE WHEN (SELECT COUNT(*) FROM STOUPODT
													WHERE GATE_CD = #{ses.gateCd}
													AND CUST_CD   = #{CUST_CD}
													AND CPO_NO    = #{CPO_NO}
													AND DEL_FLAG = '0'
		                                          ) = 0 THEN '1' ELSE '0' END
		                    ,CPO_AMT = (SELECT SUM(CPO_ITEM_AMT) FROM STOUPODT
													WHERE GATE_CD = #{ses.gateCd}
													AND CUST_CD   = #{CUST_CD}
													AND CPO_NO    = #{CPO_NO}
													AND DEL_FLAG = '0'
		                                          )
		WHERE GATE_CD = #{ses.gateCd}
		AND CUST_CD   = #{CUST_CD}
		AND CPO_NO    = #{CPO_NO}

	</insert>

	<insert id="delypohd" parameterType="hashmap">
		UPDATE STOYPOHD SET DEL_FLAG = CASE WHEN (SELECT COUNT(*) FROM STOYPODT
													WHERE GATE_CD = #{ses.gateCd}
													AND PO_NO    = #{PO_NO}
													AND DEL_FLAG = '0'
		                                          ) = 0 THEN '1' ELSE '0' END
		WHERE GATE_CD = #{ses.gateCd}
		AND PO_NO    = #{PO_NO}
	</insert>








































	<insert id="doInsertUPOHD" parameterType="hashmap">
      	INSERT INTO STOUPOHD (
			 GATE_CD
			,CUST_CD
			,CPO_NO
			,REG_DATE
			,REG_USER_ID
			,MOD_DATE
			,MOD_USER_ID
			,DEL_FLAG
			,PLANT_CD
			,AGENT_CODE
			,PR_TYPE
			,PR_SUBJECT
			,CPO_DATE
			,CUR
			,CPO_AMT
			,SHIPPER_TYPE
			,CPO_USER_ID
			,CPO_USER_DIVISION_CD
			,CPO_USER_DEPT_CD
			,CPO_USER_PART_CD
			,CPO_USER_TEL_NUM
			,CPO_USER_CELL_NUM
			,PAYER_CD
			,PAYEE_CD
			,REQ_RMK
			,RMKS
			,ATT_FILE_NUM
			,BUDGET_FLAG
			,EM_PO_FLAG
			,DATA_CREATE_TYPE
			,APPROVE_FLAG
			,SIGN_DATE
			,SIGN_STATUS
			,APP_DOC_NO
			,APP_DOC_CNT
			,IF_CPO_NO
			,CUST_CPO_DATE
			,MP_CPO_DATE
			,REQ_CPO_DATE
			,IF_TMS_NO
			,PREV_PO_NO
			,DGNS_NO1
			,DGNS_NO2
			,DGNS_NO3
			,DGNS_NO4
      	) VALUES (
			 #{ses.gateCd} -- GATE_CD
			,#{CUST_CD}	-- CUST_CD
			,#{NEW_CPO_NO} -- CPO_NO
     		, <include refid="com.sql.sysdate"/>
			, #{ses.userId}
			, <include refid="com.sql.sysdate"/>
			, #{ses.userId}
			,'0' -- DEL_FLAG
			,#{PLANT_CD}     -- PLANT_CD
			,#{ses.manageCd} -- AGENT_CODE
			,'R'      -- PR_TYPE
			,#{PR_SUBJECT} -- PR_SUBJECT
			,#{CPO_DATE} -- CPO_DATE
			,'KRW' -- CUR
			,#{CPO_AMT} * -1 -- CPO_AMT
			,'D' -- SHIPPER_TYPE
			,#{CPO_USER_ID}          -- CPO_USER_ID
			,( SELECT DIVISION_CD FROM STOCCVUR WHERE GATE_CD=#{ses.gateCd} AND USER_ID=#{CPO_USER_ID}  )     -- CPO_USER_DIVISION_CD
			,( SELECT DEPT_CD FROM STOCCVUR     WHERE GATE_CD=#{ses.gateCd} AND USER_ID=#{CPO_USER_ID}  )     -- CPO_USER_DEPT_CD
			,( SELECT PART_CD FROM STOCCVUR     WHERE GATE_CD=#{ses.gateCd} AND USER_ID=#{CPO_USER_ID}  )     -- CPO_USER_PART_CD
			,( SELECT TEL_NUM FROM STOCCVUR     WHERE GATE_CD=#{ses.gateCd} AND USER_ID=#{CPO_USER_ID}  )     -- CPO_USER_TEL_NUM
			,( SELECT CELL_NUM FROM STOCCVUR     WHERE GATE_CD=#{ses.gateCd} AND USER_ID=#{CPO_USER_ID}  )     -- CPO_USER_CELL_NUM
			,null -- PAYER_CD
			,null -- PAYEE_CD
			,#{REQ_TEXT} -- REQ_RMK
			,#{RMKS} -- RMKS
			,null -- ATT_FILE_NUM
			,'' -- BUDGET_FLAG
			,'' -- EM_PO_FLAG
			,'BACK' -- DATA_CREATE_TYPE
			,'' -- APPROVE_FLAG
			,null -- SIGN_DATE
			,'E' -- SIGN_STATUS
			,null -- APP_DOC_NO
			,null -- APP_DOC_CNT
			,null -- IF_CPO_NO
			,null -- CUST_CPO_DATE
			,null -- MP_CPO_DATE
			,null -- REQ_CPO_DATE
			,null -- IF_TMS_NO
			,null -- PREV_PO_NO
			,null -- DGNS_NO1
			,null -- DGNS_NO2
			,null -- DGNS_NO3
			,null -- DGNS_NO4

		)
	</insert>

    <!-- 고객사 PODT 등록 -->
    <insert id="doInsertUPODT" parameterType="hashmap">
        INSERT INTO STOUPODT (
			 GATE_CD
			,CUST_CD
			,CPO_NO
			,CPO_SEQ
			,REG_DATE
			,REG_USER_ID
			,MOD_DATE
			,MOD_USER_ID
			,DEL_FLAG
			,PLANT_CD
			,AGENT_CODE
			,PROGRESS_CD
			,PR_TYPE
			,CUST_ITEM_CD
			,ITEM_CD
			,ITEM_DESC
			,ITEM_SPEC
			,MAKER_CD
			,MAKER_NM
			,MAKER_PART_NO
			,BRAND_CD
			,BRAND_NM
			,ORIGIN_CD
			,UNIT_CD
			,VENDOR_CD
			,MOQ_QTY
			,RV_QTY
			,CPO_QTY
			,CUR
			,CPO_UNIT_PRICE
			,CPO_ITEM_AMT
			,BD_DEPT_CD
			,ACCOUNT_CD
			,LEAD_TIME
			,HOPE_DUE_DATE
			,DEAL_CD
			,LOG_CD
			,WH_CD
			,TC_FLAG
			,RECIPIENT_NM
			,RECIPIENT_DEPT_NM
			,RECIPIENT_TEL_NUM
			,RECIPIENT_CELL_NUM
			,RECIPIENT_FAX_NUM
			,RECIPIENT_EMAIL
			,DELY_PLACE
			,DELY_TYPE
			,CSDM_SEQ
			,DELY_NM
			,DELY_ZIP_CD
			,DELY_ADDR_1
			,DELY_ADDR_2
			,REQ_TEXT
			,ATTACH_FILE_NO
			,GR_COMPLETE_FLAG
			,INV_QTY
			,GR_QTY
			,SG_CTRL_USER_ID
			,AM_USER_ID
			,TAX_CD
			,SHIPPER_TYPE
			,PRIOR_GR_FLAG
			,DOC_TYPE
			,FORCE_CLOSE_DATE
			,FORCE_CLOSE_USER_ID
			,FORCE_CLOSE_REASON
			,APPLY_COM
			,CONT_NO
			,CONT_SEQ
			,APPLY_PLANT
			,AUTO_PO_FLAG
			,IF_DATE
			,IF_CPO_NO
			,IF_CPO_SEQ
			,IF_ID
			,REF_MNG_NO
			,CPO_CANCLE_DATE
			,CPO_CANCLE_USER_ID
			,CPO_CANCLE_REASON
			,ACC_CD
			,CUBL_SQ
			,CUBL_NM
			,CUBL_ZIP_CD
			,CUBL_ADDR1
			,CUBL_ADDR2
			,CUBL_COMPANY_NM
			,CUBL_IRS_NUM
			,CUBL_CEO_USER_NM
			,CUBL_BUSINESS_TYPE
			,CUBL_INDUSTRY_TYPE
			,CUBL_IRS_SUB_NUM
			,CUBL_IRS_SUB_ADDR
			,CUBL_BANK_NM
			,CUBL_ACCOUNT_NUM
			,CUBL_ACCOUNT_NM
			,CUBL_USER_NM
			,CUBL_USER_TEL_NUM
			,CUBL_USER_FAX_NUM
			,CUBL_USER_CELL_NUM
			,CUBL_USER_EMAIL
			,CUBL_IRS_SUB_ZIP_CD
			,PLANT_NM
			,COST_CENTER_CD
			,COST_CENTER_NM_KOR
			,NAP_FLAG
			,AM_USER_CHANGE_RMK
			,CONFIRM_REQ_RMK
			,PO_CONFIRM_REJECT_RMK
			,OREFITEM
			,REQ_USER_NM
			,REQ_USER_TEL_NUM
			,TEMP_PO_UNIT_PRICE
			,TEMP_PO_ITEM_AMT
			,AGENT_ATTACH_FILE_NO
			,AGENT_MEMO
			,VENDOR_ITEM_CD
			,RECEIPT_DATE
			,REJECT_DATE
			,REJECT_RMK
			,RETURN_TYPE
			,RETURN_REMARK
			,PREV_CPO_NO
			,PREV_CPO_SEQ
			,PREV_PO_NO
			,PREV_PO_SEQ
			,PREV_GR_NO
			,PREV_GR_SEQ
			,PREV_CLOSING_NO
			,PREV_CLOSING_SEQ
			,PREV_TAX_NO
        )
		SELECT
			 A.GATE_CD --GATE_CD
			,#{CUST_CD}   --CUST_CD
			,#{NEW_CPO_NO} --CPO_NO
			,#{NEW_CPO_SEQ} --CPO_SEQ
            , <include refid="com.sql.sysdate"/> AS REG_DATE
            , #{ses.userId} AS REG_USER_ID
            , <include refid="com.sql.sysdate"/> AS MOD_DATE
            , #{ses.userId} AS MOD_USER_ID
            , '0' AS DEL_FLAG
			,A.PLANT_CD --PLANT_CD
			,#{ses.manageCd} --AGENT_CODE
			,'5300' --PROGRESS_CD
			,'R' --PR_TYPE
			,A.CUST_ITEM_CD --CUST_ITEM_CD
			,A.ITEM_CD --ITEM_CD
			,A.ITEM_DESC --ITEM_DESC
			,A.ITEM_SPEC --ITEM_SPEC
			,A.MAKER_CD --MAKER_CD
			,<include refid="com.sql.dbo"/>GETMKBRNAME(<include refid="com.sql.nvl"/>(A.GATE_CD,A.GATE_CD), 'MK', <include refid="com.sql.nvl"/>(A.MAKER_CD,A.MAKER_CD)) --MAKER_NM
			,A.MAKER_PART_NO --MAKER_PART_NO
			,A.BRAND_CD --BRAND_CD
			,null --BRAND_NM
			,A.ORIGIN_CD --ORIGIN_CD
			,A.UNIT_CD --UNIT_CD
			,A.VENDOR_CD --VENDOR_CD
			,A.MOQ_QTY --MOQ_QTY
			,A.RV_QTY --RV_QTY
			,#{CPO_QTY} * -1 --CPO_QTY
			,A.CUR --CUR
			,A.CPO_UNIT_PRICE      --CPO_UNIT_PRICE
			,#{CPO_ITEM_AMT}  * -1 --CPO_ITEM_AMT
			,A.BD_DEPT_CD --BD_DEPT_CD
			,A.ACCOUNT_CD --ACCOUNT_CD
			,A.LEAD_TIME --LEAD_TIME
			,#{HOPE_DUE_DATE} --HOPE_DUE_DATE
			,A.DEAL_CD --DEAL_CD
			,A.LOG_CD --LOG_CD
			,A.WH_CD --WH_CD
			,null --TC_FLAG
			,A.RECIPIENT_NM --RECIPIENT_NM
			,A.RECIPIENT_DEPT_NM --RECIPIENT_DEPT_NM
			,A.RECIPIENT_TEL_NUM --RECIPIENT_TEL_NUM
			,A.RECIPIENT_CELL_NUM --RECIPIENT_CELL_NUM
			,A.RECIPIENT_FAX_NUM --RECIPIENT_FAX_NUM
			,A.RECIPIENT_EMAIL --RECIPIENT_EMAIL
			,A.DELY_PLACE --DELY_PLACE
			,A.DELY_TYPE --DELY_TYPE
			,A.CSDM_SEQ --CSDM_SEQ
			,A.DELY_NM --DELY_NM
			,A.DELY_ZIP_CD --DELY_ZIP_CD
			,A.DELY_ADDR_1 --DELY_ADDR_1
			,A.DELY_ADDR_2 --DELY_ADDR_2
			,A.REQ_TEXT --REQ_TEXT
			,A.ATTACH_FILE_NO --ATTACH_FILE_NO
			,A.GR_COMPLETE_FLAG --GR_COMPLETE_FLAG
			,A.INV_QTY --INV_QTY
			,A.GR_QTY --GR_QTY
			,A.SG_CTRL_USER_ID --SG_CTRL_USER_ID
			,#{ses.userId} --AM_USER_ID
			,A.TAX_CD --TAX_CD
			,'D' --SHIPPER_TYPE
			,A.PRIOR_GR_FLAG --PRIOR_GR_FLAG
			,A.DOC_TYPE --DOC_TYPE
			,A.FORCE_CLOSE_DATE --FORCE_CLOSE_DATE
			,A.FORCE_CLOSE_USER_ID --FORCE_CLOSE_USER_ID
			,A.FORCE_CLOSE_REASON --FORCE_CLOSE_REASON
			,A.APPLY_COM --APPLY_COM
			,A.CONT_NO --CONT_NO
			,A.CONT_SEQ --CONT_SEQ
			,A.APPLY_PLANT --APPLY_PLANT
			,A.AUTO_PO_FLAG --AUTO_PO_FLAG
			,A.IF_DATE --IF_DATE
			,A.IF_CPO_NO --IF_CPO_NO
			,A.IF_CPO_SEQ --IF_CPO_SEQ
			,A.IF_ID --IF_ID
			,A.REF_MNG_NO --REF_MNG_NO
			,A.CPO_CANCLE_DATE --CPO_CANCLE_DATE
			,A.CPO_CANCLE_USER_ID --CPO_CANCLE_USER_ID
			,A.CPO_CANCLE_REASON --CPO_CANCLE_REASON
			,A.ACC_CD --ACC_CD
			,A.CUBL_SQ --CUBL_SQ
			,A.CUBL_NM --CUBL_NM
			,A.CUBL_ZIP_CD --CUBL_ZIP_CD
			,A.CUBL_ADDR1 --CUBL_ADDR1
			,A.CUBL_ADDR2 --CUBL_ADDR2
			,A.CUBL_COMPANY_NM --CUBL_COMPANY_NM
			,A.CUBL_IRS_NUM --CUBL_IRS_NUM
			,A.CUBL_CEO_USER_NM --CUBL_CEO_USER_NM
			,A.CUBL_BUSINESS_TYPE --CUBL_BUSINESS_TYPE
			,A.CUBL_INDUSTRY_TYPE --CUBL_INDUSTRY_TYPE
			,A.CUBL_IRS_SUB_NUM --CUBL_IRS_SUB_NUM
			,A.CUBL_IRS_SUB_ADDR --CUBL_IRS_SUB_ADDR
			,A.CUBL_BANK_NM --CUBL_BANK_NM
			,A.CUBL_ACCOUNT_NUM --CUBL_ACCOUNT_NUM
			,A.CUBL_ACCOUNT_NM --CUBL_ACCOUNT_NM
			,A.CUBL_USER_NM --CUBL_USER_NM
			,A.CUBL_USER_TEL_NUM --CUBL_USER_TEL_NUM
			,A.CUBL_USER_FAX_NUM --CUBL_USER_FAX_NUM
			,A.CUBL_USER_CELL_NUM --CUBL_USER_CELL_NUM
			,A.CUBL_USER_EMAIL --CUBL_USER_EMAIL
			,A.CUBL_IRS_SUB_ZIP_CD --CUBL_IRS_SUB_ZIP_CD
			,A.PLANT_NM --PLANT_NM
			,A.COST_CENTER_CD --COST_CENTER_CD
			,A.COST_CENTER_NM_KOR --COST_CENTER_NM_KOR
			,null --NAP_FLAG
			,null --AM_USER_CHANGE_RMK
			,null --CONFIRM_REQ_RMK
			,null --PO_CONFIRM_REJECT_RMK
			,null --OREFITEM
			,null --REQ_USER_NM
			,null --REQ_USER_TEL_NUM
			,A.TEMP_PO_UNIT_PRICE
			,#{PO_ITEM_AMT} * -1 -- TEMP_PO_ITEM_AMT
			,null --AGENT_ATTACH_FILE_NO
			,null --AGENT_MEMO
			,null --VENDOR_ITEM_CD
			,null --RECEIPT_DATE
			,null --REJECT_DATE
			,null --REJECT_RMK
			,null --RETURN_TYPE
			,null --RETURN_REMARK
			,#{CPO_NO} --PREV_CPO_NO
			,#{CPO_SEQ} --PREV_CPO_SEQ
			,#{PO_NO} --PREV_PO_NO
			,#{PO_SEQ} --PREV_PO_SEQ
			,#{GR_NO} --PREV_GR_NO
			,#{GR_SEQ} --PREV_GR_SEQ
			,#{CLOSING_NO} --PREV_CLOSING_NO
			,#{CLOSING_SEQ} --PREV_CLOSING_SEQ
			,#{TAX_NO} --PREV_TAX_NO
        FROM STOUPODT A
        WHERE A.GATE_CD  = #{ses.gateCd}
          AND A.CUST_CD  = #{CUST_CD}
          AND A.CPO_NO   = #{CPO_NO}
          AND A.CPO_SEQ  = #{CPO_SEQ}
          AND A.DEL_FLAG = '0'

    </insert>

	<select id="bod1111Dosearch" parameterType="hashMap" resultType="hashMap">
        SELECT YPOHD.GATE_CD
            , APAR.CLOSING_YEAR_MONTH AS O_CLOSING_YEAR_MONTH
            , <include refid="com.sql.subStr"/>(APAR.CLOSING_YEAR_MONTH, 1, 4) || '년 ' || <include refid="com.sql.subStr"/>(APAR.CLOSING_YEAR_MONTH, 5, 2) || '월' AS CLOSING_YEAR_MONTHXXX

			,APAR.CLOSING_YEAR_MONTH
			<if test="_databaseId == 'mssql'">
            , CASE WHEN APAR.CLOSING_CNT = '9' THEN '최종' ELSE CONVERT(VARCHAR, APAR.CLOSING_CNT) END AS CLOSING_CNT
			</if>
			<if test="_databaseId == 'oracle'">
            , CASE WHEN APAR.CLOSING_CNT = '9' THEN '최종' ELSE TO_CHAR(APAR.CLOSING_CNT) END AS CLOSING_CNT
			</if>
            , <include refid="com.sql.nvl"/>(APAR.CUST_CONFIRM_FLAG, '0') AS CUST_CONFIRM_FLAG
            , <include refid="com.sql.dbo"/>GETCOMCODE (APAR.GATE_CD, 'M044', <include refid="com.sql.nvl"/>(APAR.CUST_CONFIRM_FLAG, '0'), '0', #{ses.langCd}) AS CUST_CONFIRM_NM
            , YPOHD.CUST_CD
			, <include refid="com.sql.dbo"/>getCustName(YPOHD.GATE_CD, YPOHD.CUST_CD) AS CUST_NM
            , YPOHD.CPO_USER_DEPT_CD AS DEPT_CD
            , GRDT.GR_NO
            , GRDT.GR_SEQ
            , YPODT.ITEM_CD
            , YPODT.CUST_ITEM_CD
            , YPODT.ITEM_DESC
            , YPODT.ITEM_SPEC
            , YPODT.MAKER_CD
            , YPODT.MAKER_NM
            , YPODT.MAKER_PART_NO
            , YPODT.UNIT_CD
            , APAR.CLOSE_QTY
            , APAR.CUR
            , APAR.GR_UNIT_PRICE
            , APAR.GR_ITEM_AMT
            , APAR.GR_ITEM_TAX_AMT
            , APAR.PO_GR_UNIT_PRICE
            , APAR.PO_GR_ITEM_AMT
            , APAR.PO_GR_ITEM_TAX_AMT
            , CASE WHEN APAR.PO_GR_ITEM_AMT = 0 THEN 0 ELSE ROUND (((APAR.GR_ITEM_AMT - APAR.PO_GR_ITEM_AMT) / APAR.GR_ITEM_AMT) * 100, 1) END  AS ITEM_AMT_RATE
            , APAR.GR_ITEM_AMT - APAR.PO_GR_ITEM_AMT AS PROFIT_AMT
            , <include refid="com.sql.toDateChar"/>(APAR.CLOSE_DATE, 'YYYYMMDD') AS CLOSE_DATE
            , YPODT.BD_DEPT_CD
            , YPODT.ACCOUNT_CD
            , CUAC.ACCOUNT_NM
            , <include refid="com.sql.dbo"/>GETCODENAME(YPODT.GATE_CD, 'M036', YPODT.TAX_CD, #{ses.langCd}) AS TAX_NM
            , YPODT.VENDOR_CD
			, <include refid="com.sql.dbo"/>GETVENDORNAME(YPODT.GATE_CD, YPODT.VENDOR_CD, #{ses.langCd}) AS VENDOR_NM
            , YPODT.PO_NO
            , YPODT.PO_SEQ
            , YPODT.REF_MNG_NO
            , YPODT.CPO_NO
            , YPODT.CPO_SEQ
            , <include refid="com.sql.toDateChar"/>(YPOHD.CPO_DATE, 'YYYYMMDD') AS CPO_DATE
            , YPOHD.CPO_USER_ID
            , CVUR.USER_NM AS CPO_USER_NM
            , APAR.GR_USER_ID
            , APAR.DOC_TYPE
            , <include refid="com.sql.dbo"/>GETCODENAME(APAR.GATE_CD, 'MP017', APAR.DOC_TYPE, #{ses.langCd}) AS DOC_TYPE_NM
            , APAR.CLOSING_NO
            , APAR.CLOSING_SEQ
            , YPODT.BRAND_CD
            , YPODT.BRAND_NM
            , YPODT.ORIGIN_CD
            , YPODT.DEAL_CD
            , APAR.INV_NO
            , APAR.INV_SEQ
            , APAR.IV_NO
            , APAR.IV_SEQ
            , APAR.AP_TAX_NUM
            , APAR.AP_TAX_SEQ
            , APAR.AR_TAX_NUM
            , APAR.AR_TAX_SEQ
            , APAR.AP_TAX_NUM AS TAX_NUM
            , APAR.AP_TAX_SEQ AS TAX_SEQ

            , CASE WHEN YPODT.NAP_FLAG = '1' THEN 'Y' ELSE 'N' END NAP_FLAG
            , YPODT.AM_USER_ID
		    , <include refid="com.sql.dbo"/>GETUSERNAME(YPODT.GATE_CD, YPODT.AM_USER_ID, #{ses.langCd}) AS AM_USER_NM
            , YPODT.PLANT_CD

			, APAR.RMK
			, YPOHD.PR_TYPE
			,<include refid="com.sql.dbo"/>getPlantName(YPODT.GATE_CD, YPODT.CUST_CD, YPODT.PLANT_CD, #{ses.langCd}) AS PLANT_NM
			,<include refid="com.sql.dbo"/>getUserDeptName(#{ses.gateCd}, YPOHD.CPO_USER_ID, #{ses.langCd}) AS DEPT_NM
			,(SELECT PR_SUBJECT FROM STOUPOHD WHERE GATE_CD=YPODT.GATE_CD AND CUST_CD = YPODT.CUST_CD AND CPO_NO=YPODT.CPO_NO) PR_SUBJECT

			,APAR.INV_NO
			,APAR.INV_SEQ
			,APAR.IV_NO
			,APAR.IV_SEQ
			,YPODT.CPO_QTY
			,APAR.CLOSE_QTY INV_QTY
			,APAR.CLOSE_QTY GR_QTY

			,APAR.TAX_CD

            , APAR.CUBL_SQ AS CUBL_SQ
            , APAR.CUBL_NM AS CUBL_NM
            , APAR.CUBL_COMPANY_NM AS CUBL_COMPANY_NM
            , APAR.CUBL_IRS_NUM AS CUBL_IRS_NUM
            ,

            	CASE WHEN APAR.CUBL_ZIP_CD IS NOT NULL THEN
            	'(' <include refid="com.sql.stringMerge"/> APAR.CUBL_ZIP_CD <include refid="com.sql.stringMerge"/> ') ' <include refid="com.sql.stringMerge"/> APAR.CUBL_ADDR1 <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> <include refid="com.sql.nvl"/>(APAR.CUBL_ADDR2, '')
				ELSE '' END AS CUBL_ADDR

			<if test="_databaseId == 'mssql'">
            , APAR.CPO_NO <include refid="com.sql.stringMerge"/> CAST(APAR.CPO_SEQ AS NVARCHAR(20)) AS CPO_NO_SEQ --주문키
            , APAR.GR_NO <include refid="com.sql.stringMerge"/> CAST(APAR.GR_SEQ AS NVARCHAR(20)) AS GR_NO_SEQ
			</if>
			<if test="_databaseId == 'oracle'">
            , APAR.CPO_NO <include refid="com.sql.stringMerge"/> TO_CHAR(APAR.CPO_SEQ) AS CPO_NO_SEQ --주문키
            , APAR.GR_NO <include refid="com.sql.stringMerge"/> TO_CHAR(APAR.GR_SEQ) AS GR_NO_SEQ
			</if>


			,YPODT.HOPE_DUE_DATE
			,YPODT.PO_DATE
			,YPODT.CSDM_SEQ
			,YPODT.RECIPIENT_NM

			,GRDT.GR_CLOSE_DATE

			,GRDT.CLOSING_AP_NO
			,GRDT.CLOSING_AP_SEQ

			,GRDT.GR_DATE
			, <include refid="com.sql.dbo"/>GETCODENAME(YPOHD.GATE_CD, 'M044', YPODT.PRIOR_GR_FLAG, #{ses.langCd}) AS PRIOR_GR_FLAG_NM

			,YPODT.CPO_UNIT_PRICE          --주문단가
			,YPODT.CPO_ITEM_AMT            --주문금액
			,YPODT.PO_UNIT_PRICE           --매입단가
			,YPODT.PO_ITEM_AMT             --매입금액
			,GRDT.GR_UNIT_PRICE            --입고단가
			,GRDT.GR_ITEM_AMT GR_AMT       --입고금액
			,TTID.TAX_NUM TAX_NO

        FROM STOYPODT YPODT
        JOIN STOYPOHD YPOHD
            ON  YPODT.GATE_CD = YPOHD.GATE_CD
            AND YPODT.CUST_CD = YPOHD.CUST_CD
            AND YPODT.PO_NO = YPOHD.PO_NO
            AND YPOHD.DEL_FLAG = '0'
		LEFT OUTER JOIN STOCAPAR APAR
            ON  APAR.GATE_CD = YPODT.GATE_CD
            AND APAR.CUST_CD = YPODT.CUST_CD
            AND APAR.CPO_NO  = YPODT.CPO_NO
            AND APAR.CPO_SEQ = YPODT.CPO_SEQ
            AND APAR.CLOSING_TYPE = 'AP'
            AND APAR.DEL_FLAG = '0'
        LEFT OUTER JOIN STOCGRDT GRDT
        	ON GRDT.GATE_CD = YPODT.GATE_CD
        	AND GRDT.PO_NO = YPODT.PO_NO
        	AND GRDT.PO_SEQ = YPODT.PO_SEQ
        	AND GRDT.DEL_FLAG = '0'
        JOIN STOCCVUR CVUR
            ON  YPOHD.GATE_CD = CVUR.GATE_CD
            AND YPOHD.CUST_CD = CVUR.COMPANY_CD
            AND YPOHD.CPO_USER_ID = CVUR.USER_ID
            AND CVUR.USER_TYPE = 'B'
        LEFT OUTER JOIN STOCCUAC CUAC
            ON  YPODT.GATE_CD = CUAC.GATE_CD
            AND YPODT.CUST_CD = CUAC.CUST_CD
            AND YPODT.ACCOUNT_CD = CUAC.ACCOUNT_CD
        LEFT OUTER JOIN STOCTTID TTID
            ON  TTID.GATE_CD = APAR.GATE_CD
            AND TTID.CLOSING_NO = APAR.CLOSING_NO
            AND TTID.CLOSING_SEQ = APAR.CLOSING_SEQ
			AND TTID.DEL_FLAG = '0'
		LEFT OUTER JOIN STOCSLHD SLHD
		    ON SLHD.MGRNO = TTID.TAX_NUM
--		    AND SLHD.STATUS = 'S' --테스트 때문에
		-- 매출,매입 동시에 잡은건만 나타나게 할라고.
        LEFT OUTER JOIN STOCTTID TTID_AR
            ON  TTID_AR.GATE_CD = GRDT.GATE_CD
            AND TTID_AR.CLOSING_NO = GRDT.CLOSING_AP_NO
            AND TTID_AR.CLOSING_SEQ = GRDT.CLOSING_AP_SEQ
			AND TTID_AR.DEL_FLAG = '0'
		LEFT OUTER JOIN STOCSLHD SLHD_AR
		    ON SLHD_AR.MGRNO = TTID_AR.TAX_NUM
--		    AND SLHD_AR.STATUS = 'S' --테스트 때문에
        WHERE YPODT.GATE_CD  = #{ses.gateCd}
        AND YPODT.DEL_FLAG = '0'
		AND YPODT.PR_TYPE = 'R' -- 거래유형이 반품이거 제외
		AND YPODT.PO_NO = #{PO_NO}
		AND YPODT.CPO_NO = #{CPO_NO}

	</select>

	<select id="getBackMaster" parameterType="hashMap" resultType="hashMap">
		SELECT
		 A.CPO_NO
		,A.CPO_DATE
		,A.PR_SUBJECT
		,<include refid="com.sql.dbo"/>getUserName(GATE_CD, CPO_USER_ID, 'KO') AS CPO_USER_NM
		,A.CPO_USER_ID
		,A.CPO_AMT
		,( SELECT MAX(TO_CHAR(HOPE_DUE_DATE,'YYYYMMDD')) FROM STOUPODT WHERE GATE_CD = A.GATE_CD AND CUST_CD = A.CUST_CD AND CPO_NO = A.CPO_NO ) HOPE_DUE_DATE
		,A.RMKS
		FROM STOUPOHD A
		WHERE A.GATE_CD = #{ses.gateCd}
		AND A.CUST_CD = #{CUST_CD}
		AND A.CPO_NO = #{CPO_NO}
	</select>

	<select id="bod1110Dosearch" parameterType="hashMap" resultType="hashMap">
        SELECT YPOHD.GATE_CD
            , APAR.CLOSING_YEAR_MONTH AS O_CLOSING_YEAR_MONTH
            , <include refid="com.sql.subStr"/>(APAR.CLOSING_YEAR_MONTH, 1, 4) || '년 ' || <include refid="com.sql.subStr"/>(APAR.CLOSING_YEAR_MONTH, 5, 2) || '월' AS CLOSING_YEAR_MONTHXXX

			,APAR.CLOSING_YEAR_MONTH
			<if test="_databaseId == 'mssql'">
            , CASE WHEN APAR.CLOSING_CNT = '9' THEN '최종' ELSE CONVERT(VARCHAR, APAR.CLOSING_CNT) END AS CLOSING_CNT
			</if>
			<if test="_databaseId == 'oracle'">
            , CASE WHEN APAR.CLOSING_CNT = '9' THEN '최종' ELSE TO_CHAR(APAR.CLOSING_CNT) END AS CLOSING_CNT
			</if>
            , <include refid="com.sql.nvl"/>(APAR.CUST_CONFIRM_FLAG, '0') AS CUST_CONFIRM_FLAG
            , <include refid="com.sql.dbo"/>GETCOMCODE (APAR.GATE_CD, 'M044', <include refid="com.sql.nvl"/>(APAR.CUST_CONFIRM_FLAG, '0'), '0', #{ses.langCd}) AS CUST_CONFIRM_NM
            , YPOHD.CUST_CD
			, <include refid="com.sql.dbo"/>getCustName(YPOHD.GATE_CD, YPOHD.CUST_CD) AS CUST_NM
            , YPOHD.CPO_USER_DEPT_CD AS DEPT_CD
            , APAR.GR_NO
            , APAR.GR_SEQ
            , YPODT.ITEM_CD
            , YPODT.CUST_ITEM_CD
            , YPODT.ITEM_DESC
            , YPODT.ITEM_SPEC
            , YPODT.MAKER_CD
            , YPODT.MAKER_NM
            , YPODT.MAKER_PART_NO
            , YPODT.UNIT_CD
            , APAR.CLOSE_QTY
            , APAR.CUR
            , APAR.GR_UNIT_PRICE
            , APAR.GR_ITEM_AMT
            , APAR.GR_ITEM_TAX_AMT
            , APAR.PO_GR_UNIT_PRICE
            , APAR.PO_GR_ITEM_AMT
            , APAR.PO_GR_ITEM_TAX_AMT
            , CASE WHEN APAR.PO_GR_ITEM_AMT = 0 THEN 0 ELSE ROUND (((APAR.GR_ITEM_AMT - APAR.PO_GR_ITEM_AMT) / APAR.GR_ITEM_AMT) * 100, 1) END  AS ITEM_AMT_RATE
            , APAR.GR_ITEM_AMT - APAR.PO_GR_ITEM_AMT AS PROFIT_AMT
            , <include refid="com.sql.toDateChar"/>(APAR.CLOSE_DATE, 'YYYYMMDD') AS CLOSE_DATE
            , YPODT.BD_DEPT_CD
            , YPODT.ACCOUNT_CD
            , YPODT.TAX_CD TAX_NM
            , YPODT.VENDOR_CD
			, <include refid="com.sql.dbo"/>GETVENDORNAME(YPODT.GATE_CD, YPODT.VENDOR_CD, #{ses.langCd}) AS VENDOR_NM
            , APAR.PO_NO
            , APAR.PO_SEQ
            , YPODT.REF_MNG_NO
            , YPODT.CPO_NO
            , YPODT.CPO_SEQ
            , <include refid="com.sql.toDateChar"/>(YPOHD.CPO_DATE, 'YYYYMMDD') AS CPO_DATE
            , YPOHD.CPO_USER_ID
            , CVUR.USER_NM AS CPO_USER_NM
            , APAR.GR_USER_ID
            , APAR.DOC_TYPE
            , <include refid="com.sql.dbo"/>GETCODENAME(APAR.GATE_CD, 'MP017', APAR.DOC_TYPE, #{ses.langCd}) AS DOC_TYPE_NM
            , APAR.CLOSING_NO
            , APAR.CLOSING_SEQ
            , YPODT.BRAND_CD
            , YPODT.BRAND_NM
            , YPODT.ORIGIN_CD
            , YPODT.DEAL_CD
            , APAR.INV_NO
            , APAR.INV_SEQ
            , APAR.IV_NO
            , APAR.IV_SEQ
            , APAR.AP_TAX_NUM
            , APAR.AP_TAX_SEQ
            , APAR.AR_TAX_NUM
            , APAR.AR_TAX_SEQ
            , APAR.AP_TAX_NUM AS TAX_NUM
            , APAR.AP_TAX_SEQ AS TAX_SEQ


            , CASE WHEN YPODT.NAP_FLAG = '1' THEN 'Y' ELSE 'N' END NAP_FLAG
            , YPODT.AM_USER_ID
		    , <include refid="com.sql.dbo"/>GETUSERNAME(YPODT.GATE_CD, YPODT.AM_USER_ID, #{ses.langCd}) AS AM_USER_NM
            , YPODT.PLANT_CD

			, APAR.RMK
			, YPOHD.PR_TYPE
			,<include refid="com.sql.dbo"/>getPlantName(YPODT.GATE_CD, YPODT.CUST_CD, YPODT.PLANT_CD, #{ses.langCd}) AS PLANT_NM
			,<include refid="com.sql.dbo"/>getCpoDeptInfo(YPODT.GATE_CD, YPODT.CPO_NO, #{ses.langCd}) AS DEPT_NM
			,(SELECT PR_SUBJECT FROM STOUPOHD WHERE GATE_CD=YPODT.GATE_CD AND CUST_CD = YPODT.CUST_CD AND CPO_NO=YPODT.CPO_NO) PR_SUBJECT

			,APAR.INV_NO
			,APAR.INV_SEQ
			,APAR.IV_NO
			,APAR.IV_SEQ
			,YPODT.CPO_QTY
			,APAR.CLOSE_QTY INV_QTY
			,APAR.CLOSE_QTY GR_QTY

			,APAR.TAX_CD

            , APAR.CUBL_SQ AS CUBL_SQ
            , APAR.CUBL_NM AS CUBL_NM
            , APAR.CUBL_COMPANY_NM AS CUBL_COMPANY_NM
            , APAR.CUBL_IRS_NUM AS CUBL_IRS_NUM
            ,CASE WHEN APAR.CUBL_ZIP_CD IS NOT NULL THEN
            	'(' <include refid="com.sql.stringMerge"/> APAR.CUBL_ZIP_CD <include refid="com.sql.stringMerge"/> ') ' <include refid="com.sql.stringMerge"/> APAR.CUBL_ADDR1 <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> <include refid="com.sql.nvl"/>(APAR.CUBL_ADDR2, '')
				ELSE '' END AS CUBL_ADDR
			<if test="_databaseId == 'mssql'">
            , APAR.CPO_NO <include refid="com.sql.stringMerge"/> CAST(APAR.CPO_SEQ AS NVARCHAR(20)) AS CPO_NO_SEQ --주문키
            , APAR.GR_NO <include refid="com.sql.stringMerge"/> CAST(APAR.GR_SEQ AS NVARCHAR(20)) AS GR_NO_SEQ
			</if>
			<if test="_databaseId == 'oracle'">
            , APAR.CPO_NO <include refid="com.sql.stringMerge"/> TO_CHAR(APAR.CPO_SEQ) AS CPO_NO_SEQ --주문키
            , APAR.GR_NO <include refid="com.sql.stringMerge"/> TO_CHAR(APAR.GR_SEQ) AS GR_NO_SEQ
			</if>
			,YPODT.HOPE_DUE_DATE
			,YPODT.PO_DATE
			,YPODT.CSDM_SEQ
			,YPODT.RECIPIENT_NM
			,GRDT.GR_CLOSE_DATE
			,GRDT.CLOSING_AP_NO
			,GRDT.CLOSING_AP_SEQ
			,GRDT.GR_DATE
			, <include refid="com.sql.dbo"/>GETCODENAME(YPOHD.GATE_CD, 'M044', YPODT.PRIOR_GR_FLAG, #{ses.langCd}) AS PRIOR_GR_FLAG_NM
			,YPODT.CPO_UNIT_PRICE          --주문단가
			,YPODT.CPO_ITEM_AMT            --주문금액
			,YPODT.PO_UNIT_PRICE           --매입단가
			,YPODT.PO_ITEM_AMT             --매입금액
			,GRDT.GR_UNIT_PRICE            --입고단가
			,GRDT.GR_ITEM_AMT GR_AMT       --입고금액
			,TTID.TAX_NUM TAX_NO
			,YPODT.IF_CPO_NO
        FROM STOCAPAR APAR
        JOIN STOCGRDT GRDT
        	ON GRDT.GATE_CD = APAR.GATE_CD
        	AND GRDT.GR_NO = APAR.GR_NO
        	AND GRDT.GR_SEQ = APAR.GR_SEQ
        	AND GRDT.DEL_FLAG = '0'
        JOIN STOYPODT YPODT
            ON  YPODT.GATE_CD = APAR.GATE_CD
            AND YPODT.CUST_CD = APAR.CUST_CD
            AND YPODT.CPO_NO = APAR.CPO_NO
            AND YPODT.CPO_SEQ = APAR.CPO_SEQ
            AND YPODT.DEL_FLAG = '0'
        JOIN STOYPOHD YPOHD
            ON  YPODT.GATE_CD = YPOHD.GATE_CD
            AND YPODT.CUST_CD = YPOHD.CUST_CD
            AND YPODT.PO_NO = YPOHD.PO_NO
            AND YPOHD.DEL_FLAG = '0'
        JOIN STOCCVUR CVUR
            ON  YPOHD.GATE_CD = CVUR.GATE_CD
            AND YPOHD.CUST_CD = CVUR.COMPANY_CD
            AND YPOHD.CPO_USER_ID = CVUR.USER_ID
            AND CVUR.USER_TYPE = 'B'
        JOIN STOCTTID TTID
            ON  TTID.GATE_CD = APAR.GATE_CD
            AND TTID.CLOSING_NO = APAR.CLOSING_NO
            AND TTID.CLOSING_SEQ = APAR.CLOSING_SEQ
			AND TTID.DEL_FLAG = '0'
		JOIN STOCSLHD SLHD
		    ON SLHD.MGRNO = TTID.TAX_NUM
		    AND SLHD.STATUS = 'S'
		-- 매출,매입 동시에 잡은건만 나타나게 할라고.
        JOIN STOCTTID TTID_AR
            ON  TTID_AR.GATE_CD = GRDT.GATE_CD
            AND TTID_AR.CLOSING_NO = GRDT.CLOSING_AP_NO
            AND TTID_AR.CLOSING_SEQ = GRDT.CLOSING_AP_SEQ
			AND TTID_AR.DEL_FLAG = '0'
		JOIN STOCSLHD SLHD_AR
		    ON SLHD_AR.MGRNO = TTID_AR.TAX_NUM
		    AND SLHD_AR.STATUS = 'S'
        WHERE YPODT.GATE_CD  = #{ses.gateCd}
        AND APAR.DEL_FLAG = '0'
        AND APAR.CLOSING_TYPE = 'AP' -- 매출
		AND YPOHD.PR_TYPE != 'R' -- 거래유형이 반품이거 제외
		<if test="ses.userType!='C'.toString()">
			AND YPODT.CUST_CD = #{ses.companyCd}
		</if>
		/*
		AND NOT EXISTS (
			SELECT '1' FROM STOUPODT
			WHERE GATE_CD     = YPODT.GATE_CD
			AND PREV_CPO_NO   = YPODT.CPO_NO
			AND PREV_CPO_SEQ  = YPODT.CPO_SEQ
			AND DEL_FLAG = '0'
		)
		*/
		<if test="ADD_DATE_FROM != '' and ADD_DATE_FROM != null">
			AND YPOHD.CPO_DATE BETWEEN <include refid="com.sql.toDate"/>#{ADD_DATE_FROM}<include refid="com.sql.dateFrom"/> AND <include refid="com.sql.toDate"/>#{ADD_DATE_TO}<include refid="com.sql.dateTo"/>
		</if>
		<if test="CUST_CD != '' and CUST_CD != null">
			AND YPODT.CUST_CD <include refid="com.sql.likeL"/> #{CUST_CD} <include refid="com.sql.likeR"/>
		</if>
		<if test="CUST_NM != '' and CUST_NM != null">
			AND <include refid="com.sql.dbo"/>getCustName(YPOHD.GATE_CD, YPOHD.CUST_CD) <include refid="com.sql.likeL"/> #{CUST_NM} <include refid="com.sql.likeR"/>
		</if>
		<if test="PLANT_CD != '' and PLANT_CD != null">
			AND YPODT.PLANT_CD <include refid="com.sql.likeL"/> #{PLANT_CD} <include refid="com.sql.likeR"/>
		</if>
		<if test="PLANT_NM != '' and PLANT_NM != null">
			AND <include refid="com.sql.dbo"/>getPlantName(#{ses.gateCd}, YPODT.CUST_CD, YPODT.PLANT_CD, #{ses.langCd}) <include refid="com.sql.likeL"/> #{PLANT_NM} <include refid="com.sql.likeR"/>
		</if>
		<if test="DDP_CD != '' and DDP_CD != null">
			AND <include refid="com.sql.dbo"/>getCpoDeptInfo(YPODT.GATE_CD, YPODT.CPO_NO, #{ses.langCd}) <include refid="com.sql.likeL"/> UPPER(#{DDP_CD}) <include refid="com.sql.likeR"/>
		</if>
       	<if test="DIVISION_CD != '' and DIVISION_CD != null">
			AND CVUR.DIVISION_CD = #{DIVISION_CD}
	   	</if>
       	<if test="DEPT_CD != '' and DEPT_CD != null">
			AND CVUR.DEPT_CD = #{DEPT_CD}
	   	</if>
       	<if test="PART_CD != '' and PART_CD != null">
			AND CVUR.PART_CD = #{PART_CD}
	   	</if>
       	<if test="PR_TYPE != '' and PR_TYPE != null">
			AND UPODT.PR_TYPE = #{PR_TYPE}
	   	</if>
       	<if test="DEAL_CD != '' and DEAL_CD != null">
			AND UPODT.DEAL_CD = #{DEAL_CD}
	   	</if>
        <if test="RMK != '' and RMK != null">
           AND APAR.RMK <include refid="com.sql.likeL"/> #{RMK} <include refid="com.sql.likeR"/>
        </if>
        <if test="CPO_NO != '' and CPO_NO != null">
           AND (YPODT.CPO_NO <include refid="com.sql.likeL"/> #{CPO_NO} <include refid="com.sql.likeR"/>
            OR (SELECT PR_SUBJECT FROM STOUPOHD WHERE GATE_CD=YPODT.GATE_CD AND CUST_CD = YPODT.CUST_CD AND CPO_NO=YPODT.CPO_NO) <include refid="com.sql.likeL"/> #{CPO_NO} <include refid="com.sql.likeR"/>)
        </if>
        <if test="CPO_USER_ID != '' and CPO_USER_ID != null">
            AND YPOHD.CPO_USER_ID <include refid="com.sql.likeL"/> #{CPO_USER_ID} <include refid="com.sql.likeR"/>
        </if>
        <if test="CPO_USER_NM != '' and CPO_USER_NM != null">
            AND CVUR.USER_NM <include refid="com.sql.likeL"/> #{USER_NM} <include refid="com.sql.likeR"/>
        </if>
        <if test="CUST_CONFIRM_YN != '' and CUST_CONFIRM_YN != null and (CUST_CONFIRM_YN eq '1'.toString() or CUST_CONFIRM_YN eq '0'.toString())">
            AND APAR.CUST_CONFIRM_FLAG = #{CUST_CONFIRM_YN}
        </if>
        <if test="VENDOR_CD != '' and VENDOR_CD != null">
            AND YPODT.VENDOR_CD <include refid="com.sql.likeL"/> #{VENDOR_CD} <include refid="com.sql.likeR"/>
        </if>
        <if test="ITEM_CD != '' and ITEM_CD != null">
            <if test="ITEM_CNT == 1">
                AND (YPODT.ITEM_CD IN ${ITEM_CD} OR YPODT.CUST_ITEM_CD IN ${ITEM_CD})
            </if>
            <if test="ITEM_CNT == 0">
                AND (YPODT.ITEM_CD <include refid="com.sql.likeL"/> #{ITEM_CD} <include refid="com.sql.likeR"/> OR YPODT.CUST_ITEM_CD <include refid="com.sql.likeL"/> #{CUST_ITEM_CD} <include refid="com.sql.likeR"/>)
            </if>
        </if>
        <if test="ITEM_DESC != '' and ITEM_DESC != null">
            AND (${ITEM_DESC_01} OR  ${ITEM_DESC_02} OR ${ITEM_DESC_03} OR ${ITEM_DESC_04})
        </if>
        <if test="MAKER_CD != '' and MAKER_CD != null">
            AND ${MAKER_CD_01}
        </if>
        <if test="MAKER_NM != '' and MAKER_NM != null">
            AND ${MAKER_NM_01}
        </if>
        <if test="ACCOUNT_CD != '' and ACCOUNT_CD != null">
            AND YPODT.ACCOUNT_CD <include refid="com.sql.likeL"/> #{ACCOUNT_CD} <include refid="com.sql.likeR"/>
        </if>
        <if test="ACCOUNT_NM != '' and ACCOUNT_NM != null">
            AND CUAC.ACCOUNT_NM <include refid="com.sql.likeL"/> #{ACCOUNT_NM} <include refid="com.sql.likeR"/>
        </if>
        <if test="PLANT_CD != '' and PLANT_CD != null">
            AND YPODT.PLANT_CD = #{PLANT_CD}
        </if>
        <if test="AM_USER_ID != '' and AM_USER_ID != null">
            AND YPODT.AM_USER_ID = #{AM_USER_ID}
        </if>
        <if test="CUBL_SQ != '' and CUBL_SQ != null">
            AND APAR.CUBL_SQ <include refid="com.sql.likeL"/> #{CUBL_SQ} <include refid="com.sql.likeR"/>
        </if>
        <if test="CUBL_NM != '' and CUBL_NM != null">
            AND APAR.CUBL_NM <include refid="com.sql.likeL"/> #{CUBL_NM} <include refid="com.sql.likeR"/>
        </if>
        <if test="TAX_NUM != '' and TAX_NUM != null">
            AND APAR.AP_TAX_NUM IN (${TAX_NUM})
        </if>
        ORDER BY YPODT.CUST_CD,YPODT.CPO_NO, YPODT.CPO_SEQ

	</select>







	<select id="bod1010_doSearch_MysiteNo" parameterType="hashMap" resultType="hashMap">
		SELECT
		    A.*, IMGI.FILE_EXTENSION, IMGI.FILE_PATH,
		    CASE WHEN IMGI.FILE_PATH = '' OR IMGI.FILE_PATH IS NULL THEN '/images/noimage.jpg'
		         ELSE IMGI.FILE_PATH <include refid="com.sql.stringMerge"/> '/' <include refid="com.sql.stringMerge"/>  IMGI.FILE_NM <include refid="com.sql.stringMerge"/> '.' <include refid="com.sql.stringMerge"/> IMGI.FILE_EXTENSION
		         END AS MAIN_IMG,
			<include refid="com.sql.dbo"/>fn_getSalesUnitPrice(A.GATE_CD, A.APPLY_COM, A.APPLY_PLANT, A.CONT_NO, A.CONT_SEQ) AS UNIT_PRICE,
			<include refid="com.sql.dbo"/>getRegionInfoByCont(A.GATE_CD, A.APPLY_COM, A.CONT_NO, A.CONT_SEQ, #{ses.langCd}) AS CONT_REGION_NM,
			(SELECT COUNT(ATCH.UUID_SQ)
			   FROM STOCATCH ATCH
			  WHERE ATCH.GATE_CD = A.GATE_CD
			    AND ATCH.UUID = A.IMG_ATT_FILE_NUM
			    AND ATCH.DEL_FLAG = '0') AS IMG_FILE_CNT,
			<include refid="com.sql.dbo"/>GETMKBRNAME(A.GATE_CD, 'MK', A.MAKER_CD) AS MAKER_NM,
			<include refid="com.sql.dbo"/>GETMKBRNAME(A.GATE_CD, 'BR', A.BRAND_CD) AS BRAND_NM,
			<include refid="com.sql.dbo"/>getComCode(A.GATE_CD, 'M004', A.ORIGIN_CD, 0, #{ses.langCd}) AS ORIGIN_NM,
			<include refid="com.sql.dbo"/>getComCode(A.GATE_CD, 'M037', A.UNIT_CD, 0, #{ses.langCd}) AS UNIT_NM,
			<include refid="com.sql.dbo"/>getItemClassPath(A.GATE_CD, #{ses.manageCd}, A.ITEM_CD) AS ITEM_CLS_NM,
			<include refid="com.sql.dbo"/>getUserName(A.GATE_CD, A.CMS_CTRL_USER_ID, #{ses.langCd}) AS CMS_CTRL_USER_NM,
			<include refid="com.sql.dbo"/>getUserName(A.GATE_CD, A.SG_CTRL_USER_ID, #{ses.langCd}) AS SG_CTRL_USER_NM,
			<include refid="com.sql.dbo"/>getUserName(A.GATE_CD, A.MOD_USER_ID, #{ses.langCd}) AS MOD_USER_NM,
			<include refid="com.sql.toDateChar"/>(A.MOD_DATE, 'YYYY-MM-DD HH24:MI') AS MOD_DATE,
			<include refid="com.sql.dbo"/>getComCode(A.GATE_CD, 'M036', A.VAT_CD, 0, #{ses.langCd}) AS VAT_NM,
			(SELECT CASE WHEN COUNT(TX.GATE_CD) <![CDATA[>]]> 0 THEN 'Y' ELSE '' END
			   FROM STOCTXTD TX <include refid="com.sql.noLock"/>
			  WHERE TX.GATE_CD = A.GATE_CD
			    AND TX.TEXT_NUM = A.ITEM_DETAIL_TEXT_NUM) AS ITEM_DETAIL_TEXT_FLAG
		FROM (
			SELECT
				 (SELECT MAX(UUID) AS CNT
					FROM STOCMTIM MTIM
					WHERE MTIM.GATE_CD = MTGL.GATE_CD
					AND MTIM.ITEM_CD = MTGL.ITEM_CD
					AND MTIM.DEL_FLAG = '0') AS IMG_FILE_NUM
				,(SELECT MAX(UUID) AS UUID
					FROM STOCMTIM
					WHERE GATE_CD = MTGL.GATE_CD
					AND ITEM_CD = MTGL.ITEM_CD
					AND DEL_FLAG = '0') AS IMG_ATT_FILE_NUM
				,(SELECT MAX(UUID_SQ) AS UUID
					FROM STOCMTIM MTIM
					WHERE MTIM.GATE_CD = MTGL.GATE_CD
					AND MTIM.ITEM_CD = MTGL.ITEM_CD
					AND MTIM.MAIN_IMAGE_FLAG = '1'
					AND MTIM.DEL_FLAG = '0') AS MAIN_IMG_SQ
				,(SELECT COUNT(UUID) AS CNT
					FROM STOCATCH ATCH
					WHERE ATCH.GATE_CD = MTGL.GATE_CD
					AND ATCH.UUID = MTGL.ATT_FILE_NUM
					AND ATCH.DEL_FLAG = '0') AS ATT_FILE_CNT
				,(SELECT MAX(UUID) AS CNT
					FROM STOCATCH ATCH
					WHERE ATCH.GATE_CD = MTGL.GATE_CD
					AND ATCH.UUID = MTGL.ATT_FILE_NUM
					AND ATCH.DEL_FLAG = '0') AS ATT_FILE_NUM
				,MTGL.GATE_CD
				,MTGL.ITEM_STATUS
				,MTGL.STD_FLAG
				,MTGL.ITEM_CD
				,MTGL.ITEM_DESC
				,MTGL.ITEM_SPEC
				,MTGL.MAKER_CD
				,MTGL.BRAND_CD
				,MTGL.MAKER_PART_NO
				,MTGL.ORIGIN_CD
				,<include refid="com.sql.nvl"/>(MTGL.UNIT_CD,INFO.UNIT_CD) AS UNIT_CD
				,MTGL.CMS_CTRL_USER_ID AS CMS_CTRL_USER_ID
				,MTGL.SG_CTRL_USER_ID AS SG_CTRL_USER_ID
				,MTGL.ITEM_CHG_TYPE
				,MTGL.ITEM_CHG_REASON
				,MTGL.NOT_STD_REMARK
				,MTGL.NOT_STD_TYPE
				,MTGL.REG_DATE
				,MTGL.MOD_USER_ID
				,MTGL.MOD_DATE
				,MTGL.ITEM_DETAIL_URL
				,MTGC.ITEM_CLS1
				,MTGC.ITEM_CLS2
				,MTGC.ITEM_CLS3
				,MTGC.ITEM_CLS4
				,<include refid="com.sql.nvl"/>(INFO.TAX_CD,MTGL.VAT_CD) AS VAT_CD
				,MTGL.ITEM_DETAIL_TEXT_NUM
				,VNGL.VENDOR_NM AS VENDOR_NM
				,INFO.VENDOR_CD
				,MTGB.CUST_ITEM_CD
				,INFO.APPLY_COM
				,INFO.CONT_NO
				,INFO.CONT_SEQ
				,INFO.APPLY_PLANT
				,INFO.DEAL_CD
				,INFO.CUR
				,
				 CASE WHEN <include refid="com.sql.nvl"/>(INFO.MOQ_QTY,0) <![CDATA[<=]]> <include refid="com.sql.nvl"/>(INFO.RV_QTY,0) THEN INFO.RV_QTY
				      ELSE <include refid="com.sql.nvl"/>(INFO.MOQ_QTY,0)
				 END
				 AS CART_QT
				,<include refid="com.sql.nvl"/>(INFO.MOQ_QTY, 0) AS MOQ_QTY
				,<include refid="com.sql.nvl"/>(INFO.RV_QTY, 0) AS RV_QTY
				,<include refid="com.sql.nvl"/>(INFO.LEAD_TIME,0) AS LEAD_TIME
				,INFO.LEAD_TIME_CD
				,INFO.LEAD_TIME_RMK
				,(CASE WHEN INFO.LEAD_TIME_RMK IS NULL THEN '' ELSE 'Y' END) AS LEAD_TIME_RMK_YN

				,(SELECT COUNT(I.CONT_NO)
				  FROM STOYINFO I
				  WHERE I.GATE_CD = MTGL.GATE_CD
				  AND I.ITEM_CD = MTGL.ITEM_CD
				  AND TO_CHAR(<include refid="com.sql.sysdate"/>,'YYYYMMDD') BETWEEN I.VALID_FROM_DATE AND I.VALID_TO_DATE
				  AND I.SIGN_STATUS = 'E'
				  AND I.APPLY_COM = #{ses.companyCd}
				  AND I.APPLY_PLANT = #{ses.plantCd}
				  AND I.DEL_FLAG = '0') AS CHECK_PLANT


				,#{ses.userId} as USER_ID
				,<include refid="com.sql.nvl"/>(MTGL.ITEM_DESC, '') <include refid="com.sql.stringMerge"/> <include refid="com.sql.nvl"/>(MTGL.ITEM_SPEC, '') <include refid="com.sql.stringMerge"/> <include refid="com.sql.nvl"/>(MTGL.ITEM_CD, '') <include refid="com.sql.stringMerge"/> <include refid="com.sql.nvl"/>(MTGB.CUST_ITEM_CD, '') AS LIKE_STR

				,UINFO.PLANT_CD


			FROM STOCMTGL MTGL
			JOIN (SELECT
						 M.GATE_CD, M.ITEM_CD
						,M.ITEM_CLS1, M.ITEM_CLS2
						,M.ITEM_CLS3, M.ITEM_CLS4
					FROM STOCMTGC M
				   WHERE M.GATE_CD   = #{ses.gateCd}
					 AND M.BUYER_CD  = #{ses.manageCd}
					 AND M.M_CATE_YN = '1'
					 AND M.DEL_FLAG  = '0'
				<if test="ITEM_CLS1 != null and ITEM_CLS1 != ''">
					AND M .ITEM_CLS1 = #{ITEM_CLS1}
				</if>
				<if test="ITEM_CLS2 != null and ITEM_CLS2 != ''">
					AND M.ITEM_CLS2 = #{ITEM_CLS2}
				</if>
				<if test="ITEM_CLS3 != null and ITEM_CLS3 != ''">
					AND M.ITEM_CLS3 = #{ITEM_CLS3}
				</if>
				<if test="ITEM_CLS4 != null and ITEM_CLS4 != ''">
					AND M.ITEM_CLS4 = #{ITEM_CLS4}
				</if>
					) MTGC
				 ON (MTGL.GATE_CD = MTGC.GATE_CD
				 AND MTGL.ITEM_CD = MTGC.ITEM_CD)
			JOIN STOUINFO UINFO
				 ON (UINFO.GATE_CD  = MTGL.GATE_CD
				 AND UINFO.ITEM_CD  = MTGL.ITEM_CD
				 AND UINFO.CUST_CD  = #{ses.companyCd}
				 AND UINFO.PLANT_CD IN ('*',#{ses.plantCd}))
			JOIN STOYINFO INFO
				 ON (INFO.GATE_CD  = UINFO.GATE_CD
				 AND INFO.ITEM_CD  = UINFO.ITEM_CD
				 AND INFO.CONT_NO  = UINFO.CONT_NO
				 AND INFO.CONT_SEQ = UINFO.CONT_SEQ
				 AND INFO.APPLY_COM IN (#{ses.manageCd}, #{ses.companyCd}, #{MG_CD})
				 AND INFO.APPLY_PLANT IN ('*',#{ses.plantCd})
				 AND TO_CHAR(<include refid="com.sql.sysdate"/>,'YYYYMMDD') BETWEEN INFO.VALID_FROM_DATE AND INFO.VALID_TO_DATE
				 AND INFO.SIGN_STATUS = 'E'
				 AND INFO.DEL_FLAG = '0')
			LEFT JOIN STOCVNGL VNGL
				 ON (INFO.GATE_CD = VNGL.GATE_CD
				 AND INFO.VENDOR_CD = VNGL.VENDOR_CD
				 AND <include refid="com.sql.nvl"/>(VNGL.BLOCK_FLAG, '0') != '1')
			LEFT JOIN STOCMTGB MTGB
				 ON (MTGL.GATE_CD = MTGB.GATE_CD
				 AND MTGL.ITEM_CD = MTGB.ITEM_CD
				 AND MTGB.CUST_CD = <include refid="com.sql.nvl"/>(#{ses.companyCd}, #{MG_CD})
				 AND MTGB.DEL_FLAG = '0')
		   WHERE MTGL.GATE_CD = #{ses.gateCd}
			 AND MTGL.ITEM_STATUS = '10'
			 AND MTGL.DEL_FLAG = '0'

			<if test="MAKER_CD != null and MAKER_CD != ''">
			  AND MTGL.MAKER_CD <include refid="com.sql.likeL"/> #{MAKER_CD} <include refid="com.sql.likeR"/>
			</if>
			<if test="CUST_ITEM_CD != null and CUST_ITEM_CD != ''">
				AND MTGB.CUST_ITEM_CD <include refid="com.sql.likeL"/> #{CUST_ITEM_CD} <include refid="com.sql.likeR"/>
			</if>
			<if test="MAKER_PART_NO != null and MAKER_PART_NO != ''">
				AND MTGL.MAKER_PART_NO <include refid="com.sql.likeL"/> #{MAKER_PART_NO} <include refid="com.sql.likeR"/>
			</if>
			<if test="BRAND_CD != null and BRAND_CD != ''">
				AND MTGL.BRAND_CD <include refid="com.sql.likeL"/> #{BRAND_CD} <include refid="com.sql.likeR"/>
			</if>
			<if test="VENDOR_CD != null and VENDOR_CD != ''">
				AND INFO.VENDOR_CD <include refid="com.sql.likeL"/> #{VENDOR_CD} <include refid="com.sql.likeR"/>
			</if>
			<if test="VENDOR_NM != null and VENDOR_NM != ''">
				AND VNGL.VENDOR_NM <include refid="com.sql.likeL"/> #{VENDOR_NM} <include refid="com.sql.likeR"/>
			</if>
			<if test="ITEM_CD != null and ITEM_CD != ''">
				<if test="ITEM_CNT == 1">
					AND MTGL.ITEM_CD IN ${ITEM_CD}
				</if>
				<if test="ITEM_CNT == 0">
					AND MTGL.ITEM_CD <include refid="com.sql.likeL"/> #{ITEM_CD} <include refid="com.sql.likeR"/>
				</if>
			</if>
		) A
		LEFT OUTER JOIN STOCATCH IMGI
		 ON (A.GATE_CD = IMGI.GATE_CD
		 AND A.IMG_ATT_FILE_NUM = IMGI.UUID
		 AND A.MAIN_IMG_SQ = IMGI.UUID_SQ
		 AND IMGI.DEL_FLAG = '0')
	   WHERE 1 = 1

		AND CASE WHEN CHECK_PLANT = 0 THEN 'true'
		    ELSE
				CASE WHEN A.PLANT_CD = #{ses.plantCd} THEN 'true' ELSE 'false' END
		    END = 'true'


		<if test="MAKER_NM != null and MAKER_NM != ''">
			AND <include refid="com.sql.dbo"/>GETMKBRNAME(A.GATE_CD, 'MK', A.MAKER_CD) <include refid="com.sql.likeL"/> #{MAKER_NM} <include refid="com.sql.likeR"/>
		</if>
		<if test="ITEM_DESC != null and ITEM_DESC != ''">
			AND ${ITEM_DESC}
		</if>
		<if test="CUST_ITEM_CD != null and CUST_ITEM_CD != ''">
			<if test="CUST_ITEM_CNT == 1">
				AND A.CUST_ITEM_CD IN ${CUST_ITEM_CD}
			</if>
			<if test="CUST_ITEM_CNT == 0">
				AND A.CUST_ITEM_CD <include refid="com.sql.likeL"/> #{CUST_ITEM_CD} <include refid="com.sql.likeR"/>
			</if>
		</if>
		<if test="BRAND_NM != null and BRAND_NM != ''">
			AND <include refid="com.sql.dbo"/>GETMKBRNAME(A.GATE_CD, 'BR', A.BRAND_CD) <include refid="com.sql.likeL"/> #{BRAND_NM} <include refid="com.sql.likeR"/>
		</if>
		<if test="SG_CTRL_USER_ID != null and SG_CTRL_USER_ID != ''">
			AND A.SG_CTRL_USER_ID  = #{SG_CTRL_USER_ID}
		</if>

        <if test="SEARCH_COUNT_CD != '' and SEARCH_COUNT_CD != null">
           OFFSET #{SEARCH_COUNT_CD}*(#{SEARCH_PAGE_NO}-1) ROWS FETCH FIRST #{SEARCH_COUNT_CD} ROWS ONLY
        </if>

		--ORDER BY A.ITEM_CD

	</select>

	<select id="bod1010_doSearch_MySiteYes" parameterType="hashMap" resultType="hashMap">
		SELECT
			A.*,IMGI.FILE_EXTENSION, IMGI.FILE_PATH,
		    CASE WHEN IMGI.FILE_PATH = '' OR IMGI.FILE_PATH IS NULL THEN '/images/noimage.jpg'
		         ELSE IMGI.FILE_PATH <include refid="com.sql.stringMerge"/> '/' <include refid="com.sql.stringMerge"/>  IMGI.FILE_NM <include refid="com.sql.stringMerge"/> '.' <include refid="com.sql.stringMerge"/> IMGI.FILE_EXTENSION
		         END AS MAIN_IMG,
			<include refid="com.sql.dbo"/>fn_getSalesUnitPrice(A.GATE_CD, A.APPLY_COM, A.APPLY_PLANT, A.CONT_NO, A.CONT_SEQ) AS UNIT_PRICE,
			<include refid="com.sql.dbo"/>getRegionInfoByCont(A.GATE_CD, A.APPLY_COM, A.CONT_NO, A.CONT_SEQ, #{ses.langCd}) AS CONT_REGION_NM,
			(SELECT COUNT(ATCH.UUID_SQ)
			   FROM STOCATCH ATCH
			  WHERE ATCH.GATE_CD = A.GATE_CD
			    AND ATCH.UUID = A.IMG_ATT_FILE_NUM
			    AND ATCH.DEL_FLAG = '0') AS IMG_FILE_CNT,
			<include refid="com.sql.dbo"/>GETMKBRNAME(A.GATE_CD, 'MK', A.MAKER_CD) AS MAKER_NM,
			<include refid="com.sql.dbo"/>GETMKBRNAME(A.GATE_CD, 'BR', A.BRAND_CD) AS BRAND_NM,
			<include refid="com.sql.dbo"/>getComCode(A.GATE_CD, 'M004', A.ORIGIN_CD, 0, #{ses.langCd}) AS ORIGIN_NM,
			<include refid="com.sql.dbo"/>getComCode(A.GATE_CD, 'M037', A.UNIT_CD, 0, #{ses.langCd}) AS UNIT_NM,
			<include refid="com.sql.dbo"/>getItemClassPath(A.GATE_CD, #{ses.manageCd}, A.ITEM_CD) AS ITEM_CLS_NM,
			<include refid="com.sql.dbo"/>getUserName(A.GATE_CD, A.CMS_CTRL_USER_ID, #{ses.langCd}) AS CMS_CTRL_USER_NM,
			<include refid="com.sql.dbo"/>getUserName(A.GATE_CD, A.SG_CTRL_USER_ID, #{ses.langCd}) AS SG_CTRL_USER_NM,
			<include refid="com.sql.dbo"/>getUserName(A.GATE_CD, A.MOD_USER_ID, #{ses.langCd}) AS MOD_USER_NM,
			<include refid="com.sql.toDateChar"/>(A.MOD_DATE, 'YYYY-MM-DD HH24:MI') AS MOD_DATE,
			<include refid="com.sql.dbo"/>getComCode(A.GATE_CD, 'M036', A.VAT_CD, 0, #{ses.langCd}) AS VAT_NM,
			(SELECT CASE WHEN COUNT(TX.GATE_CD) <![CDATA[>]]> 0 THEN 'Y' ELSE '' END
			   FROM STOCTXTD TX <include refid="com.sql.noLock"/>
			  WHERE TX.GATE_CD = A.GATE_CD
			    AND TX.TEXT_NUM = A.ITEM_DETAIL_TEXT_NUM) AS ITEM_DETAIL_TEXT_FLAG
		FROM (
			SELECT
				 (SELECT MAX(UUID) AS CNT
				   FROM STOCMTIM MTIM
				  WHERE MTIM.GATE_CD = MTGL.GATE_CD
				    AND MTIM.ITEM_CD = MTGL.ITEM_CD
					AND MTIM.DEL_FLAG = '0') AS IMG_FILE_NUM
				,(SELECT MAX(UUID) AS UUID
					FROM STOCMTIM
				   WHERE GATE_CD = MTGL.GATE_CD
					 AND ITEM_CD = MTGL.ITEM_CD
					 AND DEL_FLAG = '0') AS IMG_ATT_FILE_NUM
				,(SELECT MAX(UUID_SQ) AS UUID
					FROM STOCMTIM MTIM
				   WHERE MTIM.GATE_CD = MTGL.GATE_CD
					 AND MTIM.ITEM_CD = MTGL.ITEM_CD
					 AND MTIM.MAIN_IMAGE_FLAG = '1'
					 AND MTIM.DEL_FLAG = '0') AS MAIN_IMG_SQ
				,(SELECT COUNT(UUID) AS CNT
					FROM STOCATCH ATCH
				   WHERE ATCH.GATE_CD = MTGL.GATE_CD
					 AND ATCH.UUID = MTGL.ATT_FILE_NUM
					 AND ATCH.DEL_FLAG = '0') AS ATT_FILE_CNT
				,(SELECT MAX(UUID) AS CNT
					FROM STOCATCH ATCH
				   WHERE ATCH.GATE_CD = MTGL.GATE_CD
					 AND ATCH.UUID = MTGL.ATT_FILE_NUM
					 AND ATCH.DEL_FLAG = '0') AS ATT_FILE_NUM
				,MTGL.GATE_CD
				,MTGL.ITEM_STATUS
				,MTGL.STD_FLAG
				,MTGL.ITEM_CD
				,MTGL.ITEM_DESC
				,MTGL.ITEM_SPEC
				,MTGL.MAKER_CD
				,MTGL.BRAND_CD
				,MTGL.MAKER_PART_NO
				,MTGL.ORIGIN_CD
				,MTGL.UNIT_CD
				,MTGL.CMS_CTRL_USER_ID AS CMS_CTRL_USER_ID
				,MTGL.SG_CTRL_USER_ID AS SG_CTRL_USER_ID
				,MTGL.ITEM_CHG_TYPE
				,MTGL.ITEM_CHG_REASON
				,MTGL.NOT_STD_REMARK
				,MTGL.NOT_STD_TYPE
				,MTGL.REG_DATE
				,MTGL.MOD_USER_ID
				,MTGL.MOD_DATE
				,MTGL.ITEM_DETAIL_URL
				,MTGC.ITEM_CLS1
				,MTGC.ITEM_CLS2
				,MTGC.ITEM_CLS3
				,MTGC.ITEM_CLS4
				,MTGL.VAT_CD
				,MTGL.ITEM_DETAIL_TEXT_NUM
				,VNGL.VENDOR_NM AS VENDOR_NM
				,INFO.VENDOR_CD
				,MTGB.CUST_ITEM_CD
				,INFO.APPLY_COM
				,INFO.CONT_NO
				,INFO.CONT_SEQ
				,INFO.APPLY_PLANT
				,INFO.DEAL_CD
				,INFO.CUR
				,<include refid="com.sql.nvl"/>(INFO.MOQ_QTY, 0) AS MOQ_QTY
				,<include refid="com.sql.nvl"/>(INFO.RV_QTY, 0) AS RV_QTY
				,<include refid="com.sql.nvl"/>(INFO.LEAD_TIME,0) AS LEAD_TIME
				,INFO.LEAD_TIME_CD
				,INFO.LEAD_TIME_RMK
				,(CASE WHEN INFO.LEAD_TIME_RMK IS NULL THEN '' ELSE 'Y' END) AS LEAD_TIME_RMK_YN
				,(SELECT COUNT(I.CONT_NO) FROM STOYINFO I  WHERE I.GATE_CD = MTGL.GATE_CD AND I.ITEM_CD = MTGL.ITEM_CD AND <include refid="com.sql.sysdate"/> BETWEEN I.VALID_FROM_DATE AND I.VALID_TO_DATE AND I.SIGN_STATUS = 'E' AND I.APPLY_COM = #{ses.manageCd} AND I.DEL_FLAG = '0') AS CHECK_YMRO
				,(SELECT COUNT(I.CONT_NO) FROM STOYINFO I  WHERE I.GATE_CD = MTGL.GATE_CD AND I.ITEM_CD = MTGL.ITEM_CD AND <include refid="com.sql.sysdate"/> BETWEEN I.VALID_FROM_DATE AND I.VALID_TO_DATE AND I.SIGN_STATUS = 'E' AND I.APPLY_COM = #{ses.companyCd} AND I.DEL_FLAG = '0') AS CHECK_CUST
				,(SELECT COUNT(I.CONT_NO) FROM STOYINFO I  WHERE I.GATE_CD = MTGL.GATE_CD AND I.ITEM_CD = MTGL.ITEM_CD AND <include refid="com.sql.sysdate"/> BETWEEN I.VALID_FROM_DATE AND I.VALID_TO_DATE AND I.SIGN_STATUS = 'E' AND I.APPLY_COM = #{MG_CD} AND I.DEL_FLAG = '0') AS CHECK_MG
				,#{ses.userId} as USER_ID
				,<include refid="com.sql.nvl"/>(MTGL.ITEM_DESC, '') <include refid="com.sql.stringMerge"/> <include refid="com.sql.nvl"/>(MTGL.ITEM_SPEC, '') <include refid="com.sql.stringMerge"/> <include refid="com.sql.nvl"/>(MTGL.ITEM_CD, '') <include refid="com.sql.stringMerge"/> <include refid="com.sql.nvl"/>(MTGB.CUST_ITEM_CD, '') AS LIKE_STR
			  FROM STOCMTGL MTGL
			  JOIN STOUINFO UINFO
			   	   ON (MTGL.GATE_CD = UINFO.GATE_CD
			   	   AND UINFO.CUST_CD = #{ses.companyCd}
			       AND MTGL.ITEM_CD = UINFO.ITEM_CD
			   	   AND UINFO.PLANT_CD = (SELECT CASE WHEN A.CNT = 0 THEN '*' ELSE #{ses.plantCd} END AS PLANT_CD
									  	  FROM (
											  	SELECT COUNT(*) CNT
											  	  FROM STOUINFO
											 	 WHERE GATE_CD = UINFO.GATE_CD
											   	   AND CUST_CD = UINFO.CUST_CD
											   	   AND ITEM_CD = UINFO.ITEM_CD
											   	   AND PLANT_CD = #{ses.plantCd}
											   	   AND DEL_FLAG = '0'
									  	   	   ) A)
			   	   AND UINFO.DEL_FLAG = '0')
			  JOIN (SELECT
						 M.GATE_CD, M.ITEM_CD
						,M.ITEM_CLS1, M.ITEM_CLS2
						,M.ITEM_CLS3, M.ITEM_CLS4
					 FROM STOCMTGC M
					WHERE M.GATE_CD   = #{ses.gateCd}
					  AND M.BUYER_CD  = CASE WHEN #{ses.userType} = 'C' THEN #{manageCd} ELSE '21' END	-- 고객사 분류는 21(소노인터네셔널)로 지정
					  AND M.M_CATE_YN = '1'
					  AND M.DEL_FLAG  = '0'
					<if test="ITEM_CLS1 != null and ITEM_CLS1 != ''">
						AND M.ITEM_CLS1 = #{ITEM_CLS1}
					</if>
					<if test="ITEM_CLS2 != null and ITEM_CLS2 != ''">
						AND M.ITEM_CLS2 = #{ITEM_CLS2}
					</if>
					<if test="ITEM_CLS3 != null and ITEM_CLS3 != ''">
						AND M.ITEM_CLS3 = #{ITEM_CLS3}
					</if>
					<if test="ITEM_CLS4 != null and ITEM_CLS4 != ''">
						AND M.ITEM_CLS4 = #{ITEM_CLS4}
					</if>
					  ) MTGC
				   ON (MTGL.GATE_CD = MTGC.GATE_CD
				   AND MTGL.ITEM_CD = MTGC.ITEM_CD)
			  JOIN STOYINFO INFO
				   ON (INFO.GATE_CD  = UINFO.GATE_CD
				   AND INFO.ITEM_CD  = UINFO.ITEM_CD
				   AND INFO.CONT_NO  = UINFO.CONT_NO
				   AND INFO.CONT_SEQ = UINFO.CONT_SEQ
				   AND TO_CHAR(<include refid="com.sql.sysdate"/>, 'YYYYMMDD') BETWEEN INFO.VALID_FROM_DATE AND INFO.VALID_TO_DATE
				   AND INFO.SIGN_STATUS ='E'
				   AND INFO.DEL_FLAG = '0')
			  JOIN STOCVNGL VNGL
				   ON (INFO.GATE_CD = VNGL.GATE_CD
				   AND INFO.VENDOR_CD = VNGL.VENDOR_CD
				   AND <include refid="com.sql.nvl"/>(VNGL.BLOCK_FLAG, '0') != '1')
			  LEFT JOIN STOCMTGB MTGB
				   ON (MTGL.GATE_CD = MTGB.GATE_CD
				   AND MTGL.ITEM_CD = MTGB.ITEM_CD
				   AND MTGB.CUST_CD = <include refid="com.sql.nvl"/>(#{ses.companyCd}, #{MG_CD})
				   AND MTGB.DEL_FLAG = '0')
			 WHERE MTGL.GATE_CD = #{ses.gateCd}
			   AND MTGL.ITEM_STATUS = '10'

			<if test="CUST_ITEM_CD != null and CUST_ITEM_CD != ''">
					AND MTGL.ITEM_CD IN (SELECT ITEM_CD FROM STOCMTGB WHERE CUST_ITEM_CD <include refid="com.sql.likeL"/> #{CUST_ITEM_CD} <include refid="com.sql.likeR"/>)
			</if>

			   AND MTGL.DEL_FLAG = '0'
			   AND INFO.APPLY_COM IN (#{ses.manageCd}, #{ses.companyCd}, #{MG_CD})

			<if test="MAKER_CD != null and MAKER_CD != ''">
				AND MTGL.MAKER_CD <include refid="com.sql.likeL"/> #{MAKER_CD} <include refid="com.sql.likeR"/>
			</if>
			<if test="MAKER_PART_NO != null and MAKER_PART_NO != ''">
				AND MTGL.MAKER_PART_NO <include refid="com.sql.likeL"/> #{MAKER_PART_NO} <include refid="com.sql.likeR"/>
			</if>
			<if test="BRAND_CD != null and BRAND_CD != ''">
				AND MTGL.BRAND_CD <include refid="com.sql.likeL"/> #{BRAND_CD} <include refid="com.sql.likeR"/>
			</if>
			<if test="VENDOR_CD != null and VENDOR_CD != ''">
				AND INFO.VENDOR_CD <include refid="com.sql.likeL"/> #{VENDOR_CD} <include refid="com.sql.likeR"/>
			</if>
			<if test="VENDOR_NM != null and VENDOR_NM != ''">
				AND VNGL.VENDOR_NM <include refid="com.sql.likeL"/> #{VENDOR_NM} <include refid="com.sql.likeR"/>
			</if>
			<if test="ITEM_CD != null and ITEM_CD != ''">
				<if test="ITEM_CNT == 1">
					AND MTGC.ITEM_CD IN ${ITEM_CD}
				</if>
				<if test="ITEM_CNT == 0">
					AND MTGC.ITEM_CD <include refid="com.sql.likeL"/> #{ITEM_CD} <include refid="com.sql.likeR"/>
				</if>
			</if>



		  ) A
		  LEFT OUTER JOIN STOCATCH IMGI
		   ON (A.GATE_CD = IMGI.GATE_CD
		   AND A.IMG_ATT_FILE_NUM = IMGI.UUID
		   AND A.MAIN_IMG_SQ = IMGI.UUID_SQ
		   AND IMGI.DEL_FLAG = '0')
		 WHERE 1 = 1
		   AND A.APPLY_COM = (CASE WHEN A.CHECK_CUST <![CDATA[>]]> 0 THEN #{ses.companyCd} ELSE (CASE WHEN A.CHECK_MG <![CDATA[>]]> 0 THEN #{MG_CD} ELSE (CASE WHEN A.CHECK_YMRO <![CDATA[>]]> 0 THEN #{ses.manageCd} ELSE '' END) END) END)

		<if test="MAKER_NM != null and MAKER_NM != ''">
			AND <include refid="com.sql.dbo"/>GETMKBRNAME(A.GATE_CD, 'MK', A.MAKER_CD) <include refid="com.sql.likeL"/> #{MAKER_NM} <include refid="com.sql.likeR"/>
		</if>
		<if test="ITEM_DESC != null and ITEM_DESC != ''">
			AND ${ITEM_DESC}
		</if>


		<if test="BRAND_NM != null and BRAND_NM != ''">
			AND <include refid="com.sql.dbo"/>GETMKBRNAME(A.GATE_CD, 'BR', A.BRAND_CD) <include refid="com.sql.likeL"/> #{BRAND_NM} <include refid="com.sql.likeR"/>
		</if>
		<if test="SG_CTRL_USER_ID != null and SG_CTRL_USER_ID != ''">
			AND A.SG_CTRL_USER_ID  = #{SG_CTRL_USER_ID}
		</if>





        <if test="SEARCH_COUNT_CD != '' and SEARCH_COUNT_CD != null">
           OFFSET #{SEARCH_COUNT_CD}*(#{SEARCH_PAGE_NO}-1) ROWS FETCH FIRST #{SEARCH_COUNT_CD} ROWS ONLY
        </if>
		--ORDER BY A.ITEM_CD
	</select>




	<select id="bod1010_getMgInfo" parameterType="hashMap" resultType="java.lang.String">
		SELECT <include refid="com.sql.dbo"/>getMgInfo(#{ses.gateCd}, #{ses.companyCd}, 'CD')<include refid="com.sql.dual"/>
	</select>




































	<select id="bod1120Dosearch" parameterType="hashMap" resultType="hashMap">
        SELECT YPOHD.GATE_CD
            , APAR.CLOSING_YEAR_MONTH AS O_CLOSING_YEAR_MONTH
            , <include refid="com.sql.subStr"/>(APAR.CLOSING_YEAR_MONTH, 1, 4) || '년 ' || <include refid="com.sql.subStr"/>(APAR.CLOSING_YEAR_MONTH, 5, 2) || '월' AS CLOSING_YEAR_MONTHXXX

			,APAR.CLOSING_YEAR_MONTH
			<if test="_databaseId == 'mssql'">
            , CASE WHEN APAR.CLOSING_CNT = '9' THEN '최종' ELSE CONVERT(VARCHAR, APAR.CLOSING_CNT) END AS CLOSING_CNT
			</if>
			<if test="_databaseId == 'oracle'">
            , CASE WHEN APAR.CLOSING_CNT = '9' THEN '최종' ELSE TO_CHAR(APAR.CLOSING_CNT) END AS CLOSING_CNT
			</if>
            , <include refid="com.sql.nvl"/>(APAR.CUST_CONFIRM_FLAG, '0') AS CUST_CONFIRM_FLAG
            , <include refid="com.sql.dbo"/>GETCOMCODE (APAR.GATE_CD, 'M044', <include refid="com.sql.nvl"/>(APAR.CUST_CONFIRM_FLAG, '0'), '0', #{ses.langCd}) AS CUST_CONFIRM_NM
            , YPOHD.CUST_CD
			, <include refid="com.sql.dbo"/>getCustName(YPOHD.GATE_CD, YPOHD.CUST_CD) AS CUST_NM
            , YPOHD.CPO_USER_DEPT_CD AS DEPT_CD
            , GRDT.GR_NO
            , GRDT.GR_SEQ
            , YPODT.ITEM_CD
            , YPODT.CUST_ITEM_CD
            , YPODT.ITEM_DESC
            , YPODT.ITEM_SPEC
            , YPODT.MAKER_CD
            , YPODT.MAKER_NM
            , YPODT.MAKER_PART_NO
            , YPODT.UNIT_CD
            , APAR.CLOSE_QTY
            , APAR.CUR
            , APAR.GR_UNIT_PRICE
            , APAR.GR_ITEM_AMT
            , APAR.GR_ITEM_TAX_AMT
            , APAR.PO_GR_UNIT_PRICE
            , APAR.PO_GR_ITEM_AMT
            , APAR.PO_GR_ITEM_TAX_AMT
            , CASE WHEN APAR.PO_GR_ITEM_AMT = 0 THEN 0 ELSE ROUND (((APAR.GR_ITEM_AMT - APAR.PO_GR_ITEM_AMT) / APAR.GR_ITEM_AMT) * 100, 1) END  AS ITEM_AMT_RATE
            , APAR.GR_ITEM_AMT - APAR.PO_GR_ITEM_AMT AS PROFIT_AMT
            , <include refid="com.sql.toDateChar"/>(APAR.CLOSE_DATE, 'YYYYMMDD') AS CLOSE_DATE
            , YPODT.BD_DEPT_CD
            , YPODT.ACCOUNT_CD
            , YPODT.VENDOR_CD
			, <include refid="com.sql.dbo"/>GETVENDORNAME(YPODT.GATE_CD, YPODT.VENDOR_CD, #{ses.langCd}) AS VENDOR_NM
            , YPODT.PO_NO
            , YPODT.PO_SEQ
            , YPODT.REF_MNG_NO
            , YPODT.CPO_NO
            , YPODT.CPO_SEQ
            , <include refid="com.sql.toDateChar"/>(YPOHD.CPO_DATE, 'YYYYMMDD') AS CPO_DATE
            , YPOHD.CPO_USER_ID
            , CVUR.USER_NM AS CPO_USER_NM
            , APAR.GR_USER_ID
            , APAR.DOC_TYPE
            , <include refid="com.sql.dbo"/>GETCODENAME(APAR.GATE_CD, 'MP017', APAR.DOC_TYPE, #{ses.langCd}) AS DOC_TYPE_NM
            , APAR.CLOSING_NO
            , APAR.CLOSING_SEQ
            , YPODT.BRAND_CD
            , YPODT.BRAND_NM
            , YPODT.ORIGIN_CD
            , YPODT.DEAL_CD
            , APAR.INV_NO
            , APAR.INV_SEQ
            , APAR.IV_NO
            , APAR.IV_SEQ
            , APAR.AP_TAX_NUM
            , APAR.AP_TAX_SEQ
            , APAR.AR_TAX_NUM
            , APAR.AR_TAX_SEQ
            , APAR.AP_TAX_NUM AS TAX_NUM
            , APAR.AP_TAX_SEQ AS TAX_SEQ

            , CASE WHEN YPODT.NAP_FLAG = '1' THEN 'Y' ELSE 'N' END NAP_FLAG
            , YPODT.AM_USER_ID
		    , <include refid="com.sql.dbo"/>GETUSERNAME(YPODT.GATE_CD, YPODT.AM_USER_ID, #{ses.langCd}) AS AM_USER_NM
            , YPODT.PLANT_CD

			, APAR.RMK
			, YPOHD.PR_TYPE
			,<include refid="com.sql.dbo"/>getPlantName(YPODT.GATE_CD, YPODT.CUST_CD, YPODT.PLANT_CD, #{ses.langCd}) AS PLANT_NM
			,<include refid="com.sql.dbo"/>getCpoDeptInfo(YPODT.GATE_CD, YPODT.CPO_NO, #{ses.langCd}) AS DEPT_NM
			,(SELECT PR_SUBJECT FROM STOUPOHD WHERE GATE_CD=YPODT.GATE_CD AND CUST_CD = YPODT.CUST_CD AND CPO_NO=YPODT.CPO_NO) PR_SUBJECT

			,APAR.INV_NO
			,APAR.INV_SEQ
			,APAR.IV_NO
			,APAR.IV_SEQ
			,YPODT.CPO_QTY
			,APAR.CLOSE_QTY INV_QTY
			,APAR.CLOSE_QTY GR_QTY

			,YPODT.TAX_CD
            , APAR.CUBL_SQ AS CUBL_SQ
            , APAR.CUBL_NM AS CUBL_NM
            , APAR.CUBL_COMPANY_NM AS CUBL_COMPANY_NM
            , APAR.CUBL_IRS_NUM AS CUBL_IRS_NUM
            ,

            	CASE WHEN APAR.CUBL_ZIP_CD IS NOT NULL THEN
            	'(' <include refid="com.sql.stringMerge"/> APAR.CUBL_ZIP_CD <include refid="com.sql.stringMerge"/> ') ' <include refid="com.sql.stringMerge"/> APAR.CUBL_ADDR1 <include refid="com.sql.stringMerge"/> ' ' <include refid="com.sql.stringMerge"/> <include refid="com.sql.nvl"/>(APAR.CUBL_ADDR2, '')
				ELSE '' END AS CUBL_ADDR

			<if test="_databaseId == 'mssql'">
            , APAR.CPO_NO <include refid="com.sql.stringMerge"/> CAST(APAR.CPO_SEQ AS NVARCHAR(20)) AS CPO_NO_SEQ --주문키
            , APAR.GR_NO <include refid="com.sql.stringMerge"/> CAST(APAR.GR_SEQ AS NVARCHAR(20)) AS GR_NO_SEQ
			</if>
			<if test="_databaseId == 'oracle'">
            , APAR.CPO_NO <include refid="com.sql.stringMerge"/> TO_CHAR(APAR.CPO_SEQ) AS CPO_NO_SEQ --주문키
            , APAR.GR_NO <include refid="com.sql.stringMerge"/> TO_CHAR(APAR.GR_SEQ) AS GR_NO_SEQ
			</if>


			,YPODT.HOPE_DUE_DATE
			,YPODT.PO_DATE
			,YPODT.CSDM_SEQ
			,YPODT.RECIPIENT_NM

			,GRDT.GR_CLOSE_DATE

			,GRDT.CLOSING_AP_NO
			,GRDT.CLOSING_AP_SEQ

			,GRDT.GR_DATE
			, <include refid="com.sql.dbo"/>GETCODENAME(YPOHD.GATE_CD, 'M044', YPODT.PRIOR_GR_FLAG, #{ses.langCd}) AS PRIOR_GR_FLAG_NM

			,YPODT.CPO_UNIT_PRICE          --주문단가
			,YPODT.CPO_ITEM_AMT            --주문금액
			,YPODT.PO_UNIT_PRICE           --매입단가
			,YPODT.PO_ITEM_AMT             --매입금액
			,GRDT.GR_UNIT_PRICE            --입고단가
			,GRDT.GR_ITEM_AMT GR_AMT       --입고금액
			,TTID.TAX_NUM TAX_NO
			,CASE WHEN GRDT.GR_NO IS NULL THEN 'N' ELSE 'Y' END SIGN_STATUS


			,YPODT.IF_CPO_NO

        FROM STOYPODT YPODT
        JOIN STOYPOHD YPOHD
            ON  YPODT.GATE_CD = YPOHD.GATE_CD
            AND YPODT.CUST_CD = YPOHD.CUST_CD
            AND YPODT.PO_NO = YPOHD.PO_NO
            AND YPOHD.DEL_FLAG = '0'
		LEFT OUTER JOIN STOCAPAR APAR
            ON  APAR.GATE_CD = YPODT.GATE_CD
            AND APAR.CUST_CD = YPODT.CUST_CD
            AND APAR.CPO_NO  = YPODT.CPO_NO
            AND APAR.CPO_SEQ = YPODT.CPO_SEQ
            AND APAR.CLOSING_TYPE = 'AP'
            AND APAR.DEL_FLAG = '0'
        LEFT OUTER JOIN STOCGRDT GRDT
        	ON GRDT.GATE_CD = YPODT.GATE_CD
        	AND GRDT.PO_NO = YPODT.PO_NO
        	AND GRDT.PO_SEQ = YPODT.PO_SEQ
        	AND GRDT.DEL_FLAG = '0'
        JOIN STOCCVUR CVUR
            ON  YPOHD.GATE_CD = CVUR.GATE_CD
            AND YPOHD.CUST_CD = CVUR.COMPANY_CD
            AND YPOHD.CPO_USER_ID = CVUR.USER_ID
            AND CVUR.USER_TYPE = 'B'
        LEFT OUTER JOIN STOCTTID TTID
            ON  TTID.GATE_CD = APAR.GATE_CD
            AND TTID.CLOSING_NO = APAR.CLOSING_NO
            AND TTID.CLOSING_SEQ = APAR.CLOSING_SEQ
			AND TTID.DEL_FLAG = '0'
		LEFT OUTER JOIN STOCSLHD SLHD
		    ON SLHD.MGRNO = TTID.TAX_NUM
		    AND SLHD.STATUS = 'S'
		-- 매출,매입 동시에 잡은건만 나타나게 할라고.
        LEFT OUTER JOIN STOCTTID TTID_AR
            ON  TTID_AR.GATE_CD = GRDT.GATE_CD
            AND TTID_AR.CLOSING_NO = GRDT.CLOSING_AP_NO
            AND TTID_AR.CLOSING_SEQ = GRDT.CLOSING_AP_SEQ
			AND TTID_AR.DEL_FLAG = '0'
	    LEFT OUTER JOIN STOCSLHD SLHD_AR
		    ON SLHD_AR.MGRNO = TTID_AR.TAX_NUM
		    AND SLHD_AR.STATUS = 'S'


        WHERE YPODT.GATE_CD  = #{ses.gateCd}
        AND YPODT.DEL_FLAG = '0'
		AND YPODT.PR_TYPE = 'R' -- 거래유형이 반품



		<if test="ses.userType!='C'.toString()">
			AND YPODT.CUST_CD = #{ses.companyCd}
		</if>

		<if test="ADD_DATE_FROM != '' and ADD_DATE_FROM != null">
			AND YPOHD.CPO_DATE BETWEEN <include refid="com.sql.toDate"/>#{ADD_DATE_FROM}<include refid="com.sql.dateFrom"/> AND <include refid="com.sql.toDate"/>#{ADD_DATE_TO}<include refid="com.sql.dateTo"/>
		</if>

		<if test="CUST_CD != '' and CUST_CD != null">
			AND YPODT.CUST_CD <include refid="com.sql.likeL"/> #{CUST_CD} <include refid="com.sql.likeR"/>
		</if>
		<if test="CUST_NM != '' and CUST_NM != null">
			AND <include refid="com.sql.dbo"/>getCustName(YPOHD.GATE_CD, YPOHD.CUST_CD) <include refid="com.sql.likeL"/> #{CUST_NM} <include refid="com.sql.likeR"/>
		</if>
		<if test="PLANT_CD != '' and PLANT_CD != null">
			AND YPODT.PLANT_CD <include refid="com.sql.likeL"/> #{PLANT_CD} <include refid="com.sql.likeR"/>
		</if>
		<if test="PLANT_NM != '' and PLANT_NM != null">
			AND <include refid="com.sql.dbo"/>getPlantName(#{ses.gateCd}, YPODT.CUST_CD, YPODT.PLANT_CD, #{ses.langCd}) <include refid="com.sql.likeL"/> #{PLANT_NM} <include refid="com.sql.likeR"/>
		</if>
		<if test="DDP_CD != '' and DDP_CD != null">
			AND <include refid="com.sql.dbo"/>getCpoDeptInfo(YPODT.GATE_CD, YPODT.CPO_NO, #{ses.langCd}) <include refid="com.sql.likeL"/> UPPER(#{DDP_CD}) <include refid="com.sql.likeR"/>
		</if>
       	<if test="DIVISION_CD != '' and DIVISION_CD != null">
			AND CVUR.DIVISION_CD = #{DIVISION_CD}
	   	</if>
       	<if test="DEPT_CD != '' and DEPT_CD != null">
			AND CVUR.DEPT_CD = #{DEPT_CD}
	   	</if>
       	<if test="PART_CD != '' and PART_CD != null">
			AND CVUR.PART_CD = #{PART_CD}
	   	</if>
       	<if test="PR_TYPE != '' and PR_TYPE != null">
			AND UPODT.PR_TYPE = #{PR_TYPE}
	   	</if>
       	<if test="DEAL_CD != '' and DEAL_CD != null">
			AND UPODT.DEAL_CD = #{DEAL_CD}
	   	</if>
        <if test="RMK != '' and RMK != null">
           AND APAR.RMK <include refid="com.sql.likeL"/> #{RMK} <include refid="com.sql.likeR"/>
        </if>
        <if test="CPO_NO != '' and CPO_NO != null">
           AND ( UPPER(YPOHD.CPO_NO) <include refid="com.sql.likeL"/> UPPER(#{CPO_NO}) <include refid="com.sql.likeR"/>
            OR (SELECT PR_SUBJECT FROM STOUPOHD WHERE GATE_CD=YPODT.GATE_CD AND CUST_CD = YPODT.CUST_CD AND CPO_NO=YPODT.CPO_NO) <include refid="com.sql.likeL"/> #{CPO_NO} <include refid="com.sql.likeR"/>)
        </if>
        <if test="CPO_USER_ID != '' and CPO_USER_ID != null">
            AND YPOHD.CPO_USER_ID <include refid="com.sql.likeL"/> #{CPO_USER_ID} <include refid="com.sql.likeR"/>
        </if>
        <if test="CPO_USER_NM != '' and CPO_USER_NM != null">
            AND CVUR.USER_NM <include refid="com.sql.likeL"/> #{USER_NM} <include refid="com.sql.likeR"/>
        </if>
        <if test="CUST_CONFIRM_YN != '' and CUST_CONFIRM_YN != null and (CUST_CONFIRM_YN eq '1'.toString() or CUST_CONFIRM_YN eq '0'.toString())">
            AND APAR.CUST_CONFIRM_FLAG = #{CUST_CONFIRM_YN}
        </if>
        <if test="VENDOR_CD != '' and VENDOR_CD != null">
            AND YPODT.VENDOR_CD <include refid="com.sql.likeL"/> #{VENDOR_CD} <include refid="com.sql.likeR"/>
        </if>
        <if test="ITEM_CD != '' and ITEM_CD != null">
            <if test="ITEM_CNT == 1">
                AND (YPODT.ITEM_CD IN ${ITEM_CD} OR YPODT.CUST_ITEM_CD IN ${ITEM_CD})
            </if>
            <if test="ITEM_CNT == 0">
                AND (YPODT.ITEM_CD <include refid="com.sql.likeL"/> #{ITEM_CD} <include refid="com.sql.likeR"/> OR YPODT.CUST_ITEM_CD <include refid="com.sql.likeL"/> #{CUST_ITEM_CD} <include refid="com.sql.likeR"/>)
            </if>
        </if>
        <if test="ITEM_DESC != '' and ITEM_DESC != null">
            AND (${ITEM_DESC_01} OR  ${ITEM_DESC_02} OR ${ITEM_DESC_03} OR ${ITEM_DESC_04})
        </if>
        <if test="MAKER_CD != '' and MAKER_CD != null">
            AND ${MAKER_CD_01}
        </if>
        <if test="MAKER_NM != '' and MAKER_NM != null">
            AND ${MAKER_NM_01}
        </if>
        <if test="ACCOUNT_CD != '' and ACCOUNT_CD != null">
            AND YPODT.ACCOUNT_CD <include refid="com.sql.likeL"/> #{ACCOUNT_CD} <include refid="com.sql.likeR"/>
        </if>
        <if test="ACCOUNT_NM != '' and ACCOUNT_NM != null">
            AND CUAC.ACCOUNT_NM <include refid="com.sql.likeL"/> #{ACCOUNT_NM} <include refid="com.sql.likeR"/>
        </if>
        <if test="PLANT_CD != '' and PLANT_CD != null">
            AND YPODT.PLANT_CD = #{PLANT_CD}
        </if>
        <if test="AM_USER_ID != '' and AM_USER_ID != null">
            AND YPODT.AM_USER_ID = #{AM_USER_ID}
        </if>
        <if test="CUBL_SQ != '' and CUBL_SQ != null">
            AND APAR.CUBL_SQ <include refid="com.sql.likeL"/> #{CUBL_SQ} <include refid="com.sql.likeR"/>
        </if>
        <if test="CUBL_NM != '' and CUBL_NM != null">
            AND APAR.CUBL_NM <include refid="com.sql.likeL"/> #{CUBL_NM} <include refid="com.sql.likeR"/>
        </if>
        <if test="TAX_NUM != '' and TAX_NUM != null">
            AND APAR.AP_TAX_NUM IN (${TAX_NUM})
        </if>
        ORDER BY YPODT.CUST_CD,YPODT.CPO_NO, YPODT.CPO_SEQ

	</select>




















































    <insert id="doInsertYPOHD" parameterType="hashmap">
      	INSERT INTO STOYPOHD (
      		  GATE_CD
			, PO_NO
			, REG_DATE
			, REG_USER_ID
			, MOD_DATE
			, MOD_USER_ID
			, DEL_FLAG
			, CUST_CD
			, VENDOR_CD
			, CPO_DATE
			, CPO_USER_ID
			, CPO_USER_DEPT_CD
			, CPO_USER_TEL_NUM
			, CPO_USER_CELL_NUM
			, SIGN_STATUS
			, SIGN_DATE
			, APP_DOC_NO
			, APP_DOC_CNT
			, SIGN_USER_ID
			, BUDGET_FLAG
			, APPROVE_FLAG
			, IF_CPO_NO
			, CPO_NO
			, ERP_IF_SEND_FLAG
      	    , SHIPPER_TYPE
      	    , PR_TYPE
      	)
      	SELECT
      		  GATE_CD
      		, #{PO_NO}
      		, <include refid="com.sql.sysdate"/>
			, #{ses.userId}
			, <include refid="com.sql.sysdate"/>
			, #{ses.userId}
			, '0'
			, CUST_CD
			, #{VENDOR_CD}
			, CPO_DATE
			, CPO_USER_ID
			, CPO_USER_DEPT_CD
			, CPO_USER_TEL_NUM
			, CPO_USER_CELL_NUM
			, SIGN_STATUS
			, SIGN_DATE
			, APP_DOC_NO
			, APP_DOC_CNT
			, #{ses.userId}
			, BUDGET_FLAG
			, APPROVE_FLAG
			, IF_CPO_NO
			, CPO_NO
			, '0' -- ERP_IF_SEND_FLAG
      		, SHIPPER_TYPE
      		, PR_TYPE
      	 FROM STOUPOHD <include refid="com.sql.noLock"/>
      	WHERE GATE_CD = #{ses.gateCd}
      	  AND CUST_CD =
		<choose>
			<when test="CUST_CD != null and CUST_CD != ''">#{CUST_CD}</when>
			<otherwise>#{ses.companyCd}</otherwise>
		</choose>
      	  AND CPO_NO   = #{CPO_NO}
      	  AND DEL_FLAG = '0'
	</insert>


    <!-- 공급사 PODT 등록 -->
    <insert id="doInsertYPODT" parameterType="hashmap">
     	INSERT INTO STOYPODT (
     		  GATE_CD
			, PO_NO
			, PO_SEQ
			, REG_DATE
			, REG_USER_ID
			, MOD_DATE
			, MOD_USER_ID
			, DEL_FLAG
			, CUST_CD
			, CUST_ITEM_CD
			, ITEM_CD
			, ITEM_DESC
			, ITEM_SPEC
			, MAKER_CD
			, MAKER_NM
			, MAKER_PART_NO
			, BRAND_CD
			, BRAND_NM
			, ORIGIN_CD
			, UNIT_CD
			, VENDOR_CD
			, MOQ_QTY
			, RV_QTY
			, CPO_QTY
			, CUR
			, CPO_UNIT_PRICE
			, CPO_ITEM_AMT
			, BD_DEPT_CD
			, ACCOUNT_CD
			, LEAD_TIME
			, HOPE_DUE_DATE
			, RECIPIENT_NM
			, RECIPIENT_DEPT_NM
			, RECIPIENT_TEL_NUM
			, RECIPIENT_CELL_NUM
			, RECIPIENT_FAX_NUM
			, RECIPIENT_EMAIL
			, DELY_ZIP_CD
			, DELY_ADDR_1
			, DELY_ADDR_2
			, REQ_TEXT
			, ATTACH_FILE_NO
			, GR_COMPLETE_FLAG
			, DEAL_CD
			, LOG_CD
			, WH_CD
			, TC_FLAG
			, PROGRESS_CD
			, SG_CTRL_USER_ID
			, AM_USER_ID
			, DOC_TYPE
			, TAX_CD
			, PO_UNIT_PRICE
			, PO_ITEM_AMT
			, CPO_NO
			, CPO_SEQ
			, APPLY_COM
			, CONT_NO
			, CONT_SEQ
			, APPLY_PLANT
			, AUTO_PO_FLAG
     	    , IF_CPO_NO
     	    , IF_CPO_SEQ
			, ERP_IF_SEND_FLAG
			, REF_MNG_NO
			, STD_UNIT_PRICE
			, STD_ITEM_AMT
			, DELY_NM
			, CSDM_SEQ
			, CUBL_SQ
			, ACC_CD
			, CUBL_NM
			, CUBL_ZIP_CD
			, CUBL_ADDR1
			, CUBL_ADDR2
			, CUBL_COMPANY_NM
			, CUBL_IRS_NUM
			, CUBL_CEO_USER_NM
			, CUBL_BUSINESS_TYPE
			, CUBL_INDUSTRY_TYPE
			, CUBL_IRS_SUB_NUM
			, CUBL_IRS_SUB_ADDR
			, CUBL_BANK_NM
			, CUBL_ACCOUNT_NUM
			, CUBL_ACCOUNT_NM
			, CUBL_USER_NM
			, CUBL_USER_TEL_NUM
			, CUBL_USER_FAX_NUM
			, CUBL_USER_CELL_NUM
			, CUBL_USER_EMAIL
			, CUBL_IRS_SUB_ZIP_CD
			, PLANT_CD
			, PLANT_NM
			, COST_CENTER_CD
			, COST_CENTER_NM_KOR
			, NAP_FLAG
     	    , DELY_PLACE
     	    , DELY_TYPE
     	    , AGENT_MEMO
			, SHIPPER_TYPE
			, PRIOR_GR_FLAG
     	    , REQ_USER_NM
     	    , REQ_USER_TEL_NUM
     	    , VENDOR_ITEM_CD
     	    , PO_DATE
     	    , PR_TYPE
     	)
     	SELECT
     		  UPODT.GATE_CD
     		, #{PO_NO}
     	    , ROW_NUMBER() over (PARTITION BY UPODT.CPO_NO ORDER BY UPODT.CPO_NO)
     		,<include refid="com.sql.sysdate"/>
			, #{ses.userId}
			,<include refid="com.sql.sysdate"/>
			, #{ses.userId}
			, '0'
     		, UPODT.CUST_CD
			, UPODT.CUST_ITEM_CD
     		, UPODT.ITEM_CD
			, UPODT.ITEM_DESC
			, UPODT.ITEM_SPEC
			, UPODT.MAKER_CD
			, UPODT.MAKER_NM
			, UPODT.MAKER_PART_NO
			, UPODT.BRAND_CD
			, UPODT.BRAND_NM
     		, UPODT.ORIGIN_CD
			, UPODT.UNIT_CD
			, UPODT.VENDOR_CD
     		, UPODT.MOQ_QTY
			, UPODT.RV_QTY
			, UPODT.CPO_QTY
			, UPODT.CUR
			, UPODT.CPO_UNIT_PRICE
			,<include refid="com.sql.nvl"/>(UPODT.CPO_ITEM_AMT, ROUND(UPODT.CPO_QTY * UPODT.CPO_UNIT_PRICE)) AS CPO_ITEM_AMT
			, UPODT.BD_DEPT_CD
			, UPODT.ACCOUNT_CD
			, UPODT.LEAD_TIME
			, UPODT.HOPE_DUE_DATE
			,(CASE WHEN UPODT.DELY_PLACE != '1' THEN CSDM.RECIPIENT_NM ELSE UPODT.RECIPIENT_NM END) AS RECIPIENT_NM
			,(CASE WHEN UPODT.DELY_PLACE != '1' THEN CSDM.RECIPIENT_DEPT_NM ELSE UPODT.RECIPIENT_DEPT_NM END)   AS RECIPIENT_DEPT_NM
			,(CASE WHEN UPODT.DELY_PLACE != '1' THEN CSDM.RECIPIENT_TEL_NUM ELSE UPODT.RECIPIENT_TEL_NUM END)   AS RECIPIENT_TEL_NUM
			,(CASE WHEN UPODT.DELY_PLACE != '1' THEN CSDM.RECIPIENT_CELL_NUM ELSE UPODT.RECIPIENT_CELL_NUM END) AS RECIPIENT_CELL_NUM
			,(CASE WHEN UPODT.DELY_PLACE != '1' THEN CSDM.RECIPIENT_FAX_NUM ELSE UPODT.RECIPIENT_FAX_NUM END) AS RECIPIENT_FAX_NUM
			,(CASE WHEN UPODT.DELY_PLACE != '1' THEN CSDM.RECIPIENT_EMAIL ELSE UPODT.RECIPIENT_EMAIL END) AS RECIPIENT_EMAIL
			,(CASE WHEN UPODT.DELY_PLACE != '1' THEN CSDM.DELY_ZIP_CD ELSE UPODT.DELY_ZIP_CD END) AS DELY_ZIP_CD
			,(CASE WHEN UPODT.DELY_PLACE != '1' THEN CSDM.DELY_ADDR_1 ELSE UPODT.DELY_ADDR_1 END) AS DELY_ADDR_1
			,(CASE WHEN UPODT.DELY_PLACE != '1' THEN CSDM.DELY_ADDR_2 ELSE UPODT.DELY_ADDR_2 END) AS DELY_ADDR_2
			, UPODT.REQ_TEXT
			, UPODT.ATTACH_FILE_NO
			, '0' AS GR_COMPLETE_FLAG
			, UPODT.DEAL_CD
			, UPODT.LOG_CD
			, UPODT.WH_CD
			, UPODT.TC_FLAG
			, #{PROGRESS_CD}
			, UPODT.SG_CTRL_USER_ID
			, UPODT.AM_USER_ID
			, UPODT.DOC_TYPE
			, UPODT.TAX_CD
			, UPODT.TEMP_PO_UNIT_PRICE AS PO_UNIT_PRICE
			, <include refid="com.sql.nvl"/>(UPODT.TEMP_PO_ITEM_AMT, ROUND(UPODT.CPO_QTY * UPODT.TEMP_PO_UNIT_PRICE)) AS PO_ITEM_AMT
			, UPODT.CPO_NO
			, UPODT.CPO_SEQ
			, UPODT.APPLY_COM
			, UPODT.CONT_NO
			, UPODT.CONT_SEQ
			, UPODT.APPLY_PLANT
			, UPODT.AUTO_PO_FLAG
     	    , UPODT.IF_CPO_NO
     		, UPODT.IF_CPO_SEQ
			, '0' AS ERP_IF_SEND_FLAG
			, UPODT.REF_MNG_NO
			,(SELECT STD_UNIT_PRICE FROM STOYINFO <include refid="com.sql.noLock"/> WHERE GATE_CD = UPODT.GATE_CD
			     AND APPLY_COM = UPODT.APPLY_COM AND CONT_NO = UPODT.CONT_NO
			     AND CONT_SEQ  = UPODT.CONT_SEQ) -- 표준단가
			,(SELECT STD_UNIT_PRICE FROM STOYINFO <include refid="com.sql.noLock"/> WHERE GATE_CD = UPODT.GATE_CD
			     AND APPLY_COM = UPODT.APPLY_COM AND CONT_NO = UPODT.CONT_NO
			     AND CONT_SEQ  = UPODT.CONT_SEQ) * UPODT.CPO_QTY -- 표준금액
			,(CASE WHEN UPODT.DELY_PLACE != '1' THEN CSDM.DELY_NM ELSE UPODT.DELY_NM END) AS DELY_NM
			,(CASE WHEN UPODT.DELY_PLACE != '1' THEN CSDM.SEQ ELSE UPODT.CSDM_SEQ END) AS CSDM_SEQ
			, UPODT.CUBL_SQ
			, UPODT.ACC_CD
			, UPODT.CUBL_NM
			, UPODT.CUBL_ZIP_CD
			, UPODT.CUBL_ADDR1
			, UPODT.CUBL_ADDR2
			, UPODT.CUBL_COMPANY_NM
			, UPODT.CUBL_IRS_NUM
			, UPODT.CUBL_CEO_USER_NM
			, UPODT.CUBL_BUSINESS_TYPE
			, UPODT.CUBL_INDUSTRY_TYPE
			, UPODT.CUBL_IRS_SUB_NUM
			, UPODT.CUBL_IRS_SUB_ADDR
			, UPODT.CUBL_BANK_NM
			, UPODT.CUBL_ACCOUNT_NUM
			, UPODT.CUBL_ACCOUNT_NM
			, UPODT.CUBL_USER_NM
			, UPODT.CUBL_USER_TEL_NUM
			, UPODT.CUBL_USER_FAX_NUM
			, UPODT.CUBL_USER_CELL_NUM
			, UPODT.CUBL_USER_EMAIL
			, UPODT.CUBL_IRS_SUB_ZIP_CD
			, UPODT.PLANT_CD
			, UPODT.PLANT_NM
			, UPODT.COST_CENTER_CD
			, UPODT.COST_CENTER_NM_KOR
			, UPODT.NAP_FLAG
     	    , UPODT.DELY_PLACE
     	    , UPODT.DELY_TYPE
     	    , UPODT.AGENT_MEMO
			, UPODT.SHIPPER_TYPE
			, UPODT.PRIOR_GR_FLAG
     		, UPODT.REQ_USER_NM
     		, UPODT.REQ_USER_TEL_NUM
     		, UPODT.VENDOR_ITEM_CD
			, SYSDATE AS PO_DATE
			, UPODT.PR_TYPE
     	FROM STOUPODT UPODT
     	LEFT JOIN STOCCSDM CSDM
     	     ON (CSDM.GATE_CD  = UPODT.GATE_CD
			 AND CSDM.CUST_CD  = #{ses.manageCd}
			 AND CSDM.SEQ = UPODT.DELY_PLACE
			 AND CSDM.DEL_FLAG = '0')
      	WHERE UPODT.GATE_CD = #{ses.gateCd}
      	  AND UPODT.CUST_CD  = #{CUST_CD}
      	  AND UPODT.CPO_NO   = #{CPO_NO}
      	  AND UPODT.DEL_FLAG = '0'
	</insert>

</mapper>