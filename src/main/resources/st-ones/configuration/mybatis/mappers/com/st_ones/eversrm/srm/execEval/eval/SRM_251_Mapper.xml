<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.st_ones.eversrm.srm.execEval.eval.SRM_251_Mapper">

	<select id="SRM_251_doCheck" parameterType="hashmap" resultType="hashmap">
		SELECT *
		  FROM STOCEVEM
		WHERE EV_NUM   	= #{EV_NUM}
		     AND GATE_CD 		= #{ses.gateCd}
		     AND DEL_FLAG 	= '0'
	</select>

	<select id="SRM_251_doCheckEveu" parameterType="hashmap" resultType="hashmap">
		SELECT *
		  FROM STOCEVEU
		WHERE EV_NUM   		= #{EV_NUM}
		     AND VENDOR_CD	= #{VENDOR_CD}
		     AND EV_USER_ID	= #{EV_USER_ID}
		     AND GATE_CD 			= #{ses.gateCd}
		     AND DEL_FLAG 		= '0'
	</select>

	<select id="SRM_251_doCheckEvUserCnt" parameterType="hashmap" resultType="hashmap">
		SELECT COUNT(*)
		  FROM STOCEVEU
		WHERE EV_NUM   		= #{EV_NUM}
		     AND VENDOR_CD	= #{VENDOR_CD}
		     AND EV_USER_ID	= #{EV_USER_ID}
		     AND GATE_CD 			= #{ses.gateCd}
		     AND DEL_FLAG 		= '0'
	</select>

	<insert id="SRM_251_regEvtm" parameterType="hashmap">
		 INSERT INTO STOCEVTM(GATE_CD, EV_TPL_NUM, REG_DATE, REG_USER_ID, MOD_DATE, MOD_USER_ID, DEL_FLAG, EV_TPL_TYPE_CD, EV_TPL_SUBJECT, CREATE_TYPE_CD)
		 VALUES(#{ses.gateCd}, #{EV_TPL_NUM}, <include refid="com.sql.sysdate"/>, #{ses.userId}, <include refid="com.sql.sysdate"/>, #{ses.userId}, #{DEL_FLAG}, #{EV_TPL_TYPE_CD}, #{EV_TPL_SUBJECT}, #{CREATE_TYPE_CD})
	</insert>

	<update id="SRM_251_delEvtm" parameterType="hashmap">
		 UPDATE STOCEVTM
		       SET DEL_FLAG 			= '1'
		          ,  MOD_DATE 			= <include refid="com.sql.sysdate"/>
		          ,  MOD_USER_ID 	= #{ses.userId}
		 WHERE GATE_CD 			= #{ses.gateCd}
		      AND EV_TPL_NUM 	= #{EV_TPL_NUM}
	</update>

	<insert id="SRM_251_regEvim" parameterType="hashmap">
		 INSERT INTO STOCEVIM( GATE_CD, EV_ITEM_NUM, REG_DATE, REG_USER_ID, MOD_DATE, MOD_USER_ID, DEL_FLAG, EV_ITEM_TYPE_CD, EV_ITEM_SUBJECT, EV_ITEM_CONTENTS, EV_ITEM_KIND_CD, SCALE_TYPE_CD, EV_ITEM_METHOD_CD, CREATE_TYPE_CD )
		 VALUES( #{ses.gateCd}, #{EV_ITEM_NUM},  <include refid="com.sql.sysdate"/>, #{ses.userId}, <include refid="com.sql.sysdate"/>, #{ses.userId}, #{DEL_FLAG}, #{EV_ITEM_TYPE_CD}, #{EV_ITEM_SUBJECT}, #{EV_ITEM_CONTENTS}, #{EV_ITEM_KIND_CD}, #{SCALE_TYPE_CD}, #{EV_ITEM_METHOD_CD}, #{CREATE_TYPE_CD} )
	</insert>

	<update id="SRM_251_delEvim" parameterType="hashmap">
		 UPDATE STOCEVIM
		       SET DEL_FLAG 			= '1'
		          ,  MOD_DATE 			= <include refid="com.sql.sysdate"/>
		          ,  MOD_USER_ID 	= #{ses.userId}
		 WHERE GATE_CD 			= #{ses.gateCd}
		      AND EV_ITEM_NUM 	= #{EV_ITEM_NUM}
	</update>

	<select id="SRM_251_getEvtd" parameterType="hashmap" resultType="hashmap">
		 SELECT *
		   FROM STOCEVTD
		 WHERE GATE_CD 			= #{ses.gateCd}
		      AND EV_TPL_NUM 	= #{EV_TPL_NUM}
		      AND DEL_FLAG			= '0'
	</select>

	<update id="SRM_251_delEvtd" parameterType="hashmap">
		 UPDATE STOCEVTD
		       SET DEL_FLAG 			= '1'
		          ,  MOD_DATE 			= <include refid="com.sql.sysdate"/>
		          ,  MOD_USER_ID 	= #{ses.userId}
		 WHERE GATE_CD 			= #{ses.gateCd}
		      AND EV_TPL_NUM 	= #{EV_TPL_NUM}
	</update>

	<insert id="SRM_251_regEvid" parameterType="hashmap">
		 INSERT INTO STOCEVID( GATE_CD, EV_ITEM_NUM, EV_ID_SQ, REG_DATE, REG_USER_ID, MOD_DATE, MOD_USER_ID, DEL_FLAG, EV_ID_ORDER, EV_ID_CONTENTS, EV_ID_SCORE )
		 VALUES( #{ses.gateCd}, #{EV_ITEM_NUM},  #{EV_ID_SQ}, <include refid="com.sql.sysdate"/>, #{ses.userId}, <include refid="com.sql.sysdate"/>, #{ses.userId}, #{DEL_FLAG}, #{EV_ID_ORDER}, #{EV_ID_CONTENTS}, #{EV_ID_SCORE} )
	</insert>


	<update id="SRM_251_delEvid" parameterType="hashmap">
		 UPDATE STOCEVID
		       SET DEL_FLAG 			= '1'
		          ,  MOD_DATE 			= <include refid="com.sql.sysdate"/>
		          ,  MOD_USER_ID 	= #{ses.userId}
		 WHERE GATE_CD 			= #{ses.gateCd}
		      AND EV_ITEM_NUM 	= #{EV_ITEM_NUM}
	</update>

	<update id="SRM_251_delEvee" parameterType="hashmap">
		 UPDATE STOCEVEE
		       SET DEL_FLAG 			= '1'
		          ,  MOD_DATE 			= <include refid="com.sql.sysdate"/>
		          ,  MOD_USER_ID 	= #{ses.userId}
		 WHERE GATE_CD 			= #{ses.gateCd}
		      AND EV_NUM 			= #{EV_NUM}
		      AND EV_TPL_NUM 	= #{EV_TPL_NUM}
		      AND EV_ITEM_NUM 	= #{EV_ITEM_NUM}
	</update>

	<insert id="SRM_251_regEvtd" parameterType="hashmap">
		 INSERT INTO STOCEVTD( GATE_CD, EV_TPL_NUM, EV_ITEM_NUM, REG_DATE, REG_USER_ID, MOD_DATE, MOD_USER_ID, DEL_FLAG, WEIGHT, SORT_SQ )
		 VALUES( #{ses.gateCd}, #{EV_TPL_NUM}, #{EV_ITEM_NUM},  <include refid="com.sql.sysdate"/>, #{ses.userId}, <include refid="com.sql.sysdate"/>, #{ses.userId}, #{DEL_FLAG}, #{WEIGHT}, #{SORT_SQ} )
	</insert>

	<update id="SRM_251_modifyEvem" parameterType="hashmap">
		 UPDATE STOCEVEM
		       SET EXEC_EV_TPL_NUM 	= #{EV_TPL_NUM}
		            , MOD_DATE 				= <include refid="com.sql.sysdate"/>
		            , MOD_USER_ID 			= #{ses.userId}
		 WHERE GATE_CD					= #{ses.gateCd}
		      AND EV_NUM 					= #{EV_NUM}
	</update>

	<select id="SRM_251_doSearchQuaH" parameterType="hashmap" resultType="hashmap">
		SELECT EV_NUM
		      ,VENDOR_CD
		      ,<include refid="com.sql.dbo"/>GETVENDORNAME(GATE_CD, VENDOR_CD, #{ses.langCd}) AS VENDOR_NM
		      ,EV_USER_ID
		      ,<include refid="com.sql.dbo"/>GETUSERNAME(GATE_CD, EV_USER_ID, #{ses.langCd}) AS EV_USER_NM
		      ,ATT_FILE_NUM
		      ,(SELECT COUNT(*)
				   FROM STOCATCH
				  WHERE GATE_CD 	= #{ses.gateCd}
				    AND UUID 			= ATT_FILE_NUM
				    AND DEL_FLAG 	= '0') AS ATT_FILE_CNT
		      ,(SELECT COUNT(*)
				   FROM STOCATCH
				  WHERE GATE_CD 	= #{ses.gateCd}
				    AND UUID 			= ATT_FILE_NUM
				    AND DEL_FLAG 	= '0') AS ATT_FILE
		      ,RMK
		FROM STOCEVEU
		WHERE GATE_CD 	= #{ses.gateCd}
		AND  EV_NUM 		= #{EV_NUM}
		AND  DEL_FLAG 		= '0'
	</select>

	<select id="SRM_251_doSearchQua" parameterType="hashmap" resultType="hashmap">
	  SELECT EVEU.VENDOR_CD
			      ,<include refid="com.sql.dbo"/>GETVENDORNAME(EVEU.GATE_CD, EVEU.VENDOR_CD, #{ses.langCd}) AS VENDOR_NM
			      ,EVEU.EV_USER_ID
			      ,<include refid="com.sql.dbo"/>GETUSERNAME(EVEU.GATE_CD, EVEU.EV_USER_ID, #{ses.langCd}) AS EV_USER_NM
			      ,EVIM.EV_ITEM_CONTENTS
			      ,EVIM.EV_ITEM_SUBJECT
			      ,EVID.EV_ID_SCORE
			      ,EVID.EV_ID_SQ
			      ,EVEE.EV_ID_SCORE AS EV_RESULT
			      ,EVEE.EV_REMARK
			      ,EVIM.EV_ITEM_NUM
			      ,EVID.EV_ID_SQ
			FROM STOCEVEM EVEM
			INNER JOIN STOCEVTM EVTM
			ON (
			           EVTM.GATE_CD = EVEM.GATE_CD
			   AND EVTM.EV_TPL_NUM = EVEM.EXEC_EV_TPL_NUM
			   AND EVTM.DEL_FLAG = '0'
			   )
			INNER JOIN STOCEVTD EVTD
			ON (
			            EVTD.GATE_CD = EVTM.GATE_CD
			    AND EVTD.EV_TPL_NUM = EVTM.EV_TPL_NUM
			    AND EVTD.DEL_FLAG = '0'
			   )
			INNER JOIN STOCEVIM EVIM
			ON (
			          EVIM.GATE_CD = EVTD.GATE_CD
			   AND EVIM.EV_ITEM_NUM = EVTD.EV_ITEM_NUM
			   AND EVIM.EV_ITEM_METHOD_CD = 'QUA'
			   AND EVIM.DEL_FLAG = '0'
			   )
			INNER JOIN STOCEVID EVID
			ON (
			          EVID.GATE_CD = EVIM.GATE_CD
			   AND EVID.EV_ITEM_NUM = EVIM.EV_ITEM_NUM
			   AND EVID.DEL_FLAG = '0'
			   )
			INNER JOIN STOCEVEU EVEU
			ON (
			            EVEU.GATE_CD = EVEM.GATE_CD
			    AND EVEU.EV_NUM = EVEM.EV_NUM
			    AND EVEU.DEL_FLAG = '0'
			   )
			LEFT OUTER JOIN STOCEVEE EVEE
			ON (
			          EVEE.GATE_CD = EVIM.GATE_CD
			  AND EVEE.EV_ITEM_NUM = EVID.EV_ITEM_NUM
			  AND EVEE.EV_ID_SQ = EVID.EV_ID_SQ
			  AND EVEE.VENDOR_CD  = EVEU.VENDOR_CD
			  AND EVEE.EV_USER_ID = EVEU.EV_USER_ID
			  AND EVEE.DEL_FLAG='0'
			  )
			WHERE EVEM.GATE_CD  		= #{ses.gateCd}
			     AND EVEM.EV_NUM   		= #{EV_NUM}
			     AND EVEM.DEL_FLAG		= '0'
			     AND EVEU.VENDOR_CD 	= #{VENDOR_CD}
			     AND EVEU.EV_USER_ID 	= #{EV_USER_ID}
			ORDER BY EVEU.VENDOR_CD, EVEU.EV_USER_ID, EVTD.SORT_SQ
	</select>

	<select id="SRM_251_getUserCount" parameterType="hashmap" resultType="int">
		SELECT COUNT(*)
		  FROM STOCUSER
		 WHERE GATE_CD 		= #{ses.gateCd}
		   AND USER_ID 			= #{EV_USER_ID}
		   AND DEL_FLAG 		= '0'
		   AND USE_FLAG 		= '1'
		   AND USER_TYPE		= 'B'
		   AND PROGRESS_CD 	= 'E'
	</select>

	<update id="SRM_251_updateEvee" parameterType="hashmap">
		MERGE INTO STOCEVEE TARGET
		USING (
						SELECT     #{ses.gateCd} 			AS GATE_CD
						     		  , #{EV_NUM} 			AS EV_NUM
						     		  , #{VENDOR_CD} 		AS VENDOR_CD
						     		  , #{EV_USER_ID} 		AS EV_USER_ID
						     		  , #{EV_TPL_NUM} 		AS EV_TPL_NUM
						     		  , #{EV_ITEM_NUM} 	AS EV_ITEM_NUM
						     		  , #{EV_ID_SQ} 			AS EV_ID_SQ
							          , #{EV_RESULT} 		AS EV_ID_SCORE
							          , #{EV_REMARK} 		AS EV_REMARK
							          , #{ses.userId} AS REG_USER_ID
						         	  , <include refid="com.sql.sysdate"/> 	AS REG_DATE
						       <include refid="com.sql.dual"/>
		            ) SOURCE
		ON      (
						TARGET.GATE_CD 			= SOURCE.GATE_CD
				AND TARGET.EV_NUM				= SOURCE.EV_NUM
				AND TARGET.VENDOR_CD		= SOURCE.VENDOR_CD
				AND TARGET.EV_USER_ID 		= SOURCE.EV_USER_ID
				AND TARGET.EV_TPL_NUM 		= SOURCE.EV_TPL_NUM
				AND TARGET.EV_ITEM_NUM 	= SOURCE.EV_ITEM_NUM
		           )
		WHEN MATCHED THEN
		UPDATE
		      SET EV_ID_SQ 			= SOURCE.EV_ID_SQ
		          ,  EV_ID_SCORE 		= SOURCE.EV_ID_SCORE
		          ,  EV_REMARK		= SOURCE.EV_REMARK
		          ,  MOD_DATE			= SOURCE.REG_DATE
		          ,  MOD_USER_ID	= SOURCE.REG_USER_ID
	    WHEN NOT MATCHED THEN
			INSERT  (GATE_CD, EV_NUM, SG_NUM, VENDOR_CD, EV_USER_ID, EV_TPL_NUM, EV_ITEM_NUM, REG_DATE, REG_USER_ID, MOD_DATE, MOD_USER_ID, DEL_FLAG, EV_ID_SQ, EV_ID_SCORE, EV_REMARK)
			VALUES  (SOURCE.GATE_CD, SOURCE.EV_NUM, ' ', SOURCE.VENDOR_CD, SOURCE.EV_USER_ID, SOURCE.EV_TPL_NUM, SOURCE.EV_ITEM_NUM, SOURCE.REG_DATE, SOURCE.REG_USER_ID, SOURCE.REG_DATE, SOURCE.REG_USER_ID, '0', SOURCE.EV_ID_SQ, SOURCE.EV_ID_SCORE, SOURCE.EV_REMARK<include refid="com.sql.mergeEnd"/>
	</update>

	<update id="SRM_251_updateEveu" parameterType="hashmap">
		UPDATE STOCEVEU
		      SET EV_SCORE 			= #{EV_SCORE}
		          ,  RMK					= #{RMK}
		          ,  ATT_FILE_NUM	= #{ATT_FILE_NUM}
		          ,  MOD_DATE			= <include refid="com.sql.sysdate"/>
		          ,  MOD_USER_ID	= #{ses.userId}
	   WHERE GATE_CD				= #{ses.gateCd}
	         AND EV_NUM				= #{EV_NUM}
	         AND VENDOR_CD		= #{VENDOR_CD}
	         AND SG_NUM				= #{SG_NUM}
	         AND EV_USER_ID		= #{EV_USER_ID}
	</update>

</mapper>
