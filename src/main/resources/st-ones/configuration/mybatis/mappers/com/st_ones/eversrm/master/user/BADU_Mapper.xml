<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.st_ones.eversrm.master.user.BADU_Mapper">

	<select id="doSearchUserSup" parameterType="hashMap" resultType="hashMap">

        SELECT USERS.GATE_CD
             , USERS.USER_ID  AS USER_ID
             , <include refid="com.sql.dbo"/>GETUSERNAME(USERS.GATE_CD, USERS.USER_ID, #{ses.langCd}) AS USER_NM
             , USERS.DEL_FLAG
             , USERS.USE_FLAG
             , (SELECT VENDOR_CD FROM STOCVNGL WHERE GATE_CD = USERS.GATE_CD AND VENDOR_CD = USERS.COMPANY_CD) AS BUYER_CD
             , USERS.USER_TYPE
             , <include refid="com.sql.dbo"/>GETUSERNAME(USERS.GATE_CD, USERS.USER_ID, #{ses.langCd}) USER_NM_DISPLAY
             , <include refid="com.sql.dbo"/>GETUSERNAME(USERS.GATE_CD, USERS.USER_ID, #{ses.langCd}) USER_NM_SEARCH
             , (SELECT VENDOR_NM FROM STOCVNGL WHERE GATE_CD = USERS.GATE_CD AND VENDOR_CD = USERS.COMPANY_CD) AS BUYER_NM
             , USERS.DEPT_CD
             , <include refid="com.sql.dbo"/>getUserDeptInfo(USERS.GATE_CD, USERS.USER_ID, #{ses.langCd}) AS DEPT_NM
             , USERS.POSITION_NM
             , USERS.DUTY_NM
          FROM STOCCVUR USERS
         WHERE USERS.GATE_CD = #{ses.gateCd}
           AND USERS.DEL_FLAG = '0'

	    <if test="USER_TYPE != '' and USER_TYPE != null">
            AND USERS.USER_TYPE = #{USER_TYPE}
	    </if>
        <if test="ses.userType eq 'S'.toString()">
            AND USERS.COMPANY_CD = #{ses.companyCd}
        </if>
        <if test="USER_NM != '' and USER_NM != null">
            AND <include refid="com.sql.dbo"/>GETUSERNAME(GATE_CD, USER_ID, #{ses.langCd}) <include refid="com.sql.likeL"/> #{USER_NM} <include refid="com.sql.likeR"/>
        </if>

	     ORDER BY USERS.USER_ID

    </select>

    <select id="doSearchUser" parameterType="hashMap" resultType="hashMap">

        SELECT A.*
          FROM (
         	SELECT
                  <include refid="com.sql.trim"/>(USERS.USER_ID)  AS USER_ID
                , USERS.USER_ID  AS USER_ID_V
                ,<include refid="com.sql.dbo"/>GETUSERNAME(USERS.GATE_CD, USERS.USER_ID, #{ses.langCd}) AS USER_NM_DISPLAY
                , USERS.COMPANY_CD
                , USERS.USER_TYPE
                ,(SELECT <include refid="com.sql.nvl"/>(BUYER_NM, BUYER_NM_ENG) FROM STOCOGCM WHERE GATE_CD = USERS.GATE_CD AND BUYER_CD = USERS.COMPANY_CD AND LANG_CD=#{ses.langCd}) AS COMPANY_NM
                , USERS.DEPT_CD
                ,<include refid="com.sql.dbo"/>GETDEPTNAME(USERS.GATE_CD, USERS.COMPANY_CD, USERS.DEPT_CD, #{ses.langCd}) AS DEPT_NM
                , USERS.GATE_CD
           FROM STOCUSER USERS
          WHERE USERS.GATE_CD  = #{ses.gateCd}
            AND USERS.DEL_FLAG = '0'

		<if test="USER_ID_SEARCH != '' and USER_ID_SEARCH != null">
            AND UPPER(USERS.USER_ID) <include refid="com.sql.likeL"/> UPPER(#{USER_ID_SEARCH}) <include refid="com.sql.likeR"/>
		</if>
		<if test="USER_NM_SEARCH != '' and USER_NM_SEARCH != null">
            AND UPPER(<include refid="com.sql.dbo"/>getUserName(USERS.GATE_CD, USERS.USER_ID, #{ses.langCd})) <include refid="com.sql.likeL"/> UPPER(#{USER_NM_SEARCH}) <include refid="com.sql.likeR"/>
		</if>
		<if test="S_DEPT_CD != '' and S_DEPT_CD != null">
            <choose>
              	<when test='INC_CHILD_DEPT != "Y"'>
		    AND UPPER(USERS.DEPT_CD) <include refid="com.sql.likeL"/> #{S_DEPT_CD} <include refid="com.sql.likeR"/>
              	</when>
            </choose>
		</if>
		<if test="S_DEPT_NM != '' and S_DEPT_NM != null">
            <choose>
              	<when test='INC_CHILD_DEPT != "Y"'>
            AND UPPER(<include refid="com.sql.dbo"/>GETDEPTNAME(USERS.GATE_CD, USERS.COMPANY_CD, USERS.DEPT_CD, #{ses.langCd})) <include refid="com.sql.likeL"/> UPPER(#{S_DEPT_NM}) <include refid="com.sql.likeR"/>
              	</when>
			</choose>
		</if>
          
        UNION ALL
        
        SELECT
              <include refid="com.sql.trim"/>(CVUR.USER_ID) AS USER_ID
            , CVUR.USER_ID  AS USER_ID_V
            , CVUR.USER_NM  AS USER_NM_DISPLAY
            , CVUR.COMPANY_CD
            , CVUR.USER_TYPE
            ,(CASE WHEN CVUR.USER_TYPE='S'
                	    THEN (SELECT VENDOR_NM FROM STOCVNGL WHERE GATE_CD=#{ses.gateCd} AND VENDOR_CD=CVUR.COMPANY_CD AND DEL_FLAG='0')
                   ELSE (SELECT CUST_NM FROM STOCCUST WHERE GATE_CD=#{ses.gateCd} AND CUST_CD=CVUR.COMPANY_CD AND DEL_FLAG='0')
              END) AS COMPANY_NM
            , '' AS DEPT_CD
            , CVUR.DEPT_NM AS DEPT_NM
            , CVUR.GATE_CD
         FROM STOCCVUR CVUR
        WHERE CVUR.GATE_CD  = #{ses.gateCd}
          AND CVUR.DEL_FLAG = '0'

        <if test="USER_ID_SEARCH != '' and USER_ID_SEARCH != null">
          AND UPPER(CVUR.USER_ID) <include refid="com.sql.likeL"/> #{USER_ID_SEARCH} <include refid="com.sql.likeR"/>
        </if>
        <if test="USER_NM_SEARCH != '' and USER_NM_SEARCH != null">
          AND UPPER(<include refid="com.sql.dbo"/>GETUSERNAME(CVUR.GATE_CD, CVUR.USER_ID, #{ses.langCd})) <include refid="com.sql.likeL"/> UPPER(#{USER_NM_SEARCH}) <include refid="com.sql.likeR"/>
        </if>
        <if test="S_DEPT_NM != '' and S_DEPT_NM != null">
          <choose>
            <when test='INC_CHILD_DEPT != "Y"'>
              AND UPPER(CVUR.DEPT_NM) <include refid="com.sql.likeL"/> UPPER(#{S_DEPT_NM}) <include refid="com.sql.likeR"/>
            </when>
          </choose>
        </if>
       )A
        WHERE 1=1
        <if test="USER_TYPE_SEARCH != '' and USER_TYPE_SEARCH != null">
            AND A.USER_TYPE = #{USER_TYPE_SEARCH}
        </if>
        <if test="COMPANY_CD_SEARCH != '' and COMPANY_CD_SEARCH != null">
            AND UPPER(A.COMPANY_CD) <include refid="com.sql.likeL"/> #{COMPANY_CD_SEARCH} <include refid="com.sql.likeR"/>
        </if>
        <if test="COMPANY_NM_SEARCH != '' and COMPANY_NM_SEARCH != null">
            AND A.COMPANY_NM <include refid="com.sql.likeL"/> #{COMPANY_NM_SEARCH} <include refid="com.sql.likeR"/>
        </if>
        <if test="S_DEPT_CD != '' and S_DEPT_CD != null">
            <choose>
                <when test='INC_CHILD_DEPT == "Y"'>
                    AND ( UPPER(a.DEPT_CD) <include refid="com.sql.likeL"/> #{S_DEPT_CD} <include refid="com.sql.likeR"/>

                          OR a.DEPT_CD IN (SELECT DEPT_CD FROM STOCOGDP
                                            WHERE GATE_CD  = A.GATE_CD
                                              AND BUYER_CD = A.COMPANY_CD
                                              AND DEL_FLAG = '0'
                                            START WITH PARENT_DEPT_CD = #{S_DEPT_CD}
                                            CONNECT BY PARENT_DEPT_CD = PRIOR DEPT_CD
                                           UNION ALL
                                           SELECT DEPT_CD FROM STOCOGDP
                                            WHERE GATE_CD  = A.GATE_CD
                                              AND BUYER_CD = A.COMPANY_CD
                                              AND DEPT_CD  = #{S_DEPT_CD}
                                              AND DEL_FLAG = '0')
                     )
                </when>
            </choose>
        </if>
        <if test="S_DEPT_NM != '' and S_DEPT_NM != null">
            <choose>
                 <when test='INC_CHILD_DEPT == "Y"'>
                    AND ( UPPER(a.DEPT_NM) <include refid="com.sql.likeL"/> #{S_DEPT_NM} <include refid="com.sql.likeR"/>

                          OR a.DEPT_CD IN (SELECT DEPT_CD FROM STOCOGDP
                                            WHERE GATE_CD  = A.GATE_CD
                                              AND BUYER_CD = A.COMPANY_CD
                                              AND DEL_FLAG = '0'
                                            START WITH PARENT_DEPT_CD IN (SELECT DEPT_CD
                                                                            FROM STOCOGDP
                                                                           WHERE GATE_CD = A.GATE_CD AND BUYER_CD = A.COMPANY_CD AND DEL_FLAG = '0'
                                                                             AND DEPT_NM <include refid="com.sql.likeL"/>#{S_DEPT_NM}<include refid="com.sql.likeR"/>)
                                            CONNECT BY PARENT_DEPT_CD = PRIOR DEPT_CD
                                           UNION ALL
                                           SELECT DEPT_CD FROM STOCOGDP
                                            WHERE GATE_CD  = A.GATE_CD
                                              AND BUYER_CD = A.COMPANY_CD
                                              AND DEPT_CD IN (SELECT DEPT_CD FROM STOCOGDP
                                                               WHERE GATE_CD = A.GATE_CD AND BUYER_CD = A.COMPANY_CD AND DEL_FLAG = '0'
                                                                 AND DEPT_NM <include refid="com.sql.likeL"/>#{S_DEPT_NM}<include refid="com.sql.likeR"/>)
                                              AND DEL_FLAG = '0')
                     )
                 </when>
            </choose>
        </if>

	     ORDER BY A.USER_ID

    </select>

	<!-- System > 사용자관리 > 사용자 기본정보 (BSB_060) : 운영사 사용자 기본정보 가져오기 -->
    <select id="doGetUser" resultType="hashMap">

        SELECT
        	   USERS.GATE_CD
             , USERS.USER_ID  AS USER_ID
             , USERS.USER_ID  AS USER_ID_ORI
             ,<include refid="com.sql.dbo"/>getGmtDate(USERS.MOD_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateValueFormat}) AS MOD_DATE_LAST
             ,<include refid="com.sql.dbo"/>getGmtDate(USERS.MOD_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateValueFormat}) AS MOD_DATE
             , USERS.MOD_USER_ID  AS MOD_USER_ID
             ,<include refid="com.sql.dbo"/>GETUSERNAME(USERS.GATE_CD, USERS.MOD_USER_ID, #{ses.langCd}) AS MOD_USER_NM
             ,<include refid="com.sql.dbo"/>GETUSERNAME(USERS.GATE_CD, USERS.MOD_USER_ID, #{ses.langCd}) AS CHANGE_USER_ID
             , USERS.DEL_FLAG
             , USERS.USE_FLAG
             , USERS.COMPANY_CD
             ,<include refid="com.sql.dbo"/>getCompanyName(USERS.GATE_CD, USERS.COMPANY_CD, #{ses.langCd}) AS COMPANY_NM
             , USERS.PLANT_CD
             ,<include refid="com.sql.dbo"/>getUserPlantName(USERS.GATE_CD, USERS.USER_ID, #{ses.langCd}) AS PLANT_NM
             , USERS.DIVISION_CD
             ,<include refid="com.sql.dbo"/>getUserDivisionName(USERS.GATE_CD, USERS.USER_ID, #{ses.langCd}) AS DIVISION_NM
             , USERS.DEPT_CD
             ,<include refid="com.sql.dbo"/>getUserDeptName(USERS.GATE_CD, USERS.USER_ID, #{ses.langCd}) AS DEPT_NM
             , USERS.PART_CD
             ,<include refid="com.sql.dbo"/>getUserPartName(USERS.GATE_CD, USERS.USER_ID, #{ses.langCd}) AS PART_NM
             , USERS.USER_TYPE
             , USERS.WORK_TYPE
             , USERS.USER_NM     AS USER_NM
             , USERS.USER_NM_ENG AS USER_NM_ENG
             , USERS.PASSWORD    AS PASSWORD
             , USERS.PASSWORD    AS PASSWORD_CHECK
             , USERS.PASSWORD    AS TMP_WORD
             , USERS.PASSWORD    AS TMP_WORD_CHK
             , USERS.POSITION_NM
             , USERS.DUTY_NM
             , USERS.EMPLOYEE_NUM  AS EMPLOYEE_NUM
             , USERS.EMAIL    AS EMAIL
             , USERS.TEL_NUM  AS TEL_NUM
             , USERS.CELL_NUM AS CELL_NUM
             , USERS.FAX_NUM  AS FAX_NUM
             , USERS.COUNTRY_CD
             , USERS.PROGRESS_CD
             , USERS.PW_WRONG_CNT
             , USERS.PW_RESET_FLAG
             , <include refid="com.sql.dbo"/>getGmtDate(USERS.PW_RESET_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateValueFormat}) AS PW_RESET_DATE
             , <include refid="com.sql.dbo"/>getGmtDate(USERS.LAST_LOGIN_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateValueFormat}) AS LAST_LOGIN_DATE
             , <include refid="com.sql.dbo"/>getGmtDate(USERS.LAST_LOGIN_DATE, #{ses.userGmt}, #{ses.systemGmt}, 'hh24:mi:ss') AS LAST_LOGIN_TIME
             , USERS.IP_ADDR
             , 'U' AS INSERT_FLAG
             , <include refid="com.sql.nvl"/>(USERS.SUPER_USER_FLAG, '0') AS SUPER_USER_FLAG
             , USERS.PROGRESS_CD
             , USERS.USER_DATE_FORMAT_CD
             , USERS.USER_NUMBER_FORMAT_CD
             , <include refid="com.sql.nvl"/>(USERS.IF_USER_FLAG, '0') AS IF_USER_FLAG	-- 인터페이스 사용자의 조직정보는 변경하지 않는다.
          FROM STOCUSER USERS
         WHERE USERS.GATE_CD  = #{ses.gateCd}
           AND USERS.DEL_FLAG = '0'
           AND UPPER(USERS.USER_ID) = UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))
    </select>

	<!-- System > 사용자관리 > 사용자 기본정보 (BSB_060) : 고객 및 공급사 사용자 기본정보 가져오기 -->
    <select id="doGetUser_VNGL" resultType="hashMap">

        SELECT
        	   CVUR.GATE_CD
             , <include refid="com.sql.trim"/>(CVUR.USER_ID) AS USER_ID
             , <include refid="com.sql.trim"/>(CVUR.USER_ID) AS USER_ID_ORI
             ,<include refid="com.sql.dbo"/>getGmtDate(CVUR.MOD_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateValueFormat}) AS MOD_DATE_LAST
             ,<include refid="com.sql.dbo"/>getGmtDate(CVUR.MOD_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateValueFormat}) AS MOD_DATE
             , CVUR.MOD_USER_ID  AS MOD_USER_ID
             ,<include refid="com.sql.dbo"/>GETUSERNAME(CVUR.GATE_CD, CVUR.MOD_USER_ID, #{ses.langCd}) AS MOD_USER_NM
             ,<include refid="com.sql.dbo"/>GETUSERNAME(CVUR.GATE_CD, CVUR.MOD_USER_ID, #{ses.langCd}) AS CHANGE_USER_ID
             , CVUR.DEL_FLAG
             , CVUR.USE_FLAG
             , CVUR.COMPANY_CD
             ,<include refid="com.sql.dbo"/>getCompanyName(CVUR.GATE_CD, CVUR.COMPANY_CD, #{ses.langCd}) AS COMPANY_NM
             , CVUR.PLANT_CD
             ,<include refid="com.sql.dbo"/>getUserPlantName(CVUR.GATE_CD, CVUR.USER_ID, #{ses.langCd}) AS PLANT_NM
             , CVUR.DIVISION_CD
             ,<include refid="com.sql.dbo"/>getUserDivisionName(CVUR.GATE_CD, CVUR.USER_ID, #{ses.langCd}) AS DIVISION_NM
             , CVUR.DEPT_CD
             ,<include refid="com.sql.dbo"/>getUserDeptName(CVUR.GATE_CD, CVUR.USER_ID, #{ses.langCd}) AS DEPT_NM
             , CVUR.PART_CD
             ,<include refid="com.sql.dbo"/>getUserPartName(CVUR.GATE_CD, CVUR.USER_ID, #{ses.langCd}) AS PART_NM
             , CVUR.USER_TYPE
             , NULL AS WORK_TYPE
             , CVUR.USER_NM   AS USER_NM
             , CVUR.USER_NM   AS USER_NM_ENG
             , CVUR.PASSWORD  AS PASSWORD
             , CVUR.PASSWORD  AS PASSWORD_CHECK
             , CVUR.PASSWORD  AS TMP_WORD
             , CVUR.PASSWORD  AS TMP_WORD_CHK
             , CVUR.POSITION_NM AS POSITION_NM
             , CVUR.POSITION_NM AS DUTY_NM
             , ' ' AS EMPLOYEE_NUM
             , CVUR.EMAIL    AS EMAIL
             , CVUR.TEL_NUM  AS TEL_NUM
             , CVUR.CELL_NUM AS CELL_NUM
             , CVUR.FAX_NUM  AS FAX_NUM
             , 'KR' AS COUNTRY_CD
             , CVUR.PROGRESS_CD AS PROGRESS_CD
             , CVUR.PW_WRONG_CNT
             , CVUR.PW_RESET_FLAG
             , <include refid="com.sql.dbo"/>getGmtDate(CVUR.PW_RESET_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateValueFormat}) AS PW_RESET_DATE
             , <include refid="com.sql.dbo"/>getGmtDate(CVUR.LAST_LOGIN_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateValueFormat}) AS LAST_LOGIN_DATE
             , <include refid="com.sql.dbo"/>getGmtDate(CVUR.LAST_LOGIN_DATE, #{ses.userGmt}, #{ses.systemGmt}, 'hh24:mi:ss') AS LAST_LOGIN_TIME
             , CVUR.IP_ADDR
             , 'U' AS INSERT_FLAG
             , <include refid="com.sql.nvl"/>(CVUR.MNG_YN, '0') AS SUPER_USER_FLAG
             , NULL AS USER_DATE_FORMAT_CD
           	 , NULL AS USER_NUMBER_FORMAT_CD
           	 , CASE WHEN CVUR.DATA_CREATION_TYPE IN ('I', '1') THEN '1' ELSE '0' END AS IF_USER_FLAG	-- 인터페이스 사용자의 조직정보는 변경하지 않는다.
        FROM STOCCVUR CVUR
  	   WHERE CVUR.GATE_CD  = #{ses.gateCd}
	     AND CVUR.DEL_FLAG = '0'
	     AND UPPER(CVUR.USER_ID) = UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))
    </select>

    <select id="doGetAuProfile" parameterType="hashMap" resultType="hashMap">

        SELECT DISTINCT
              CASE WHEN USAP.AUTH_CD IS NOT NULL THEN '1' ELSE '0' END SELECTED
            , AUPF.AUTH_CD
            , <include refid="com.sql.dbo"/>GETMULTINAME(AUPF.GATE_CD, 'AU', #{ses.langCd}, AUPF.AUTH_CD, '') AS AUTH_NM
            , <include refid="com.sql.dbo"/>GETMULTIDESC(AUPF.GATE_CD, 'AU', #{ses.langCd}, AUPF.AUTH_CD, '') AS AUTH_DESC
            , <include refid="com.sql.dbo"/>getGmtDate(USAP.VALID_FROM_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS VALID_FROM_DATE
            , <include refid="com.sql.dbo"/>getGmtDate(USAP.VALID_TO_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS VALID_TO_DATE
            , #{ses.userId} AS USER_ID
            , AUPF.GATE_CD
            , <include refid="com.sql.dbo"/>GETCOMCODE(AUPF.GATE_CD, 'M006', AUPF.USER_TYPE, '0', #{ses.langCd}) AS USER_TYPE
         FROM STOCAUPF AUPF LEFT OUTER JOIN STOCUSAP USAP
	          ON (AUPF.GATE_CD  = USAP.GATE_CD
	          AND AUPF.AUTH_CD  = USAP.AUTH_CD
	          AND USAP.DEL_FLAG = '0'
	          AND USAP.USER_ID  = #{USER_ID} )
        WHERE AUPF.GATE_CD  = #{ses.gateCd}
          AND AUPF.DEL_FLAG = '0'

        <if test='USER_TYPE == "S"'>
          AND AUPF.USER_TYPE = #{USER_TYPE}
        </if>
        <if test='USER_TYPE == "B"'>
          AND AUPF.USER_TYPE = #{USER_TYPE}
        </if>
        <if test='USER_TYPE == "C"'>
            <if test="USER_ID != '' and USER_ID != null">
          AND AUPF.USER_TYPE = (SELECT US.USER_TYPE FROM STOCUSER US WHERE US.GATE_CD = AUPF.GATE_CD AND US.USER_ID = #{USER_ID} )
            </if>
        </if>

        ORDER BY SELECTED DESC, AUTH_CD
    </select>

    <select id="doGetAcProfile"  parameterType="hashMap" resultType="hashMap">
		SELECT DISTINCT
              CASE WHEN USAC.ACTION_PROFILE_CD IS NOT NULL THEN '1' ELSE '0' END SELECTED
            , ACPH.ACTION_PROFILE_CD
            , <include refid="com.sql.dbo"/>GETMULTINAME(ACPH.GATE_CD, 'AP', #{ses.langCd}, ACPH.ACTION_PROFILE_CD, '') AS PROFILE_NM
            , <include refid="com.sql.dbo"/>GETMULTIDESC(ACPH.GATE_CD, 'AP', #{ses.langCd}, ACPH.ACTION_PROFILE_CD, '') AS AUTH_DESC
            , <include refid="com.sql.dbo"/>getGmtDate(USAC.VALID_FROM_DATE, #{ses.userGmt}, #{ses.systemGmt},<include refid="com.sql.dateFormat"/>) AS VALID_FROM_DATE
            , <include refid="com.sql.dbo"/>getGmtDate(USAC.VALID_TO_DATE, #{ses.userGmt}, #{ses.systemGmt},<include refid="com.sql.dateFormat"/>) AS VALID_TO_DATE
            , #{USER_ID} AS USER_ID
            , ACPH.GATE_CD
            , <include refid="com.sql.dbo"/>GETCOMCODE(ACPH.GATE_CD, 'M006', ACPH.USER_TYPE, '0', #{ses.langCd}) AS USER_TYPE
         FROM STOCACPH ACPH LEFT OUTER JOIN STOCUSAC USAC
              ON  ACPH.GATE_CD = USAC.GATE_CD
              AND ACPH.ACTION_PROFILE_CD = USAC.ACTION_PROFILE_CD
              AND USAC.DEL_FLAG = '0'
              AND USAC.USER_ID  = #{USER_ID}
        WHERE 1 = 1
          AND ACPH.GATE_CD = #{ses.gateCd}
          AND ACPH.DEL_FLAG = '0'
		<if test='userType =="S"'>
          AND EXISTS (SELECT 'X' FROM STOCUSAC SUSAC
			           WHERE 1 = 1
			             AND ACPH.GATE_CD = SUSAC.GATE_CD
			             AND ACPH.ACTION_PROFILE_CD = SUSAC.ACTION_PROFILE_CD
			             AND SUSAC.USER_ID =  #{ses.userId}
			             AND SUSAC.DEL_FLAG = '0')
		</if>
        ORDER BY SELECTED DESC, ACTION_PROFILE_CD
    </select>
	
	<!-- 운영사 사용자 체크 -->
    <select id="existsUserInformation" parameterType="hashMap" resultType="java.lang.Integer">
    	SELECT COUNT(USER_ID) AS CNT
          FROM STOCUSER
         WHERE GATE_CD = #{ses.gateCd}
           AND UPPER(USER_ID) = UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))
    </select>

    <insert id="createUserInformation" parameterType="hashMap">

        INSERT INTO STOCUSER (
			  GATE_CD
            , USER_ID
            , REG_DATE
            , REG_USER_ID
            , DEL_FLAG
            , USE_FLAG
            , COMPANY_CD
            , PLANT_CD
            , DIVISION_CD
            , DEPT_CD
            , DEPT_NM
            , PART_CD
            , USER_TYPE
            , WORK_TYPE
            , USER_NM
            , USER_NM_ENG
            , PASSWORD
            , POSITION_NM
            , DUTY_NM
            , EMPLOYEE_NUM
            , EMAIL
            , TEL_NUM
            , CELL_NUM
            , FAX_NUM
            , LANG_CD
            , COUNTRY_CD
            , SUPER_USER_FLAG
            , PROGRESS_CD
            , GMT_CD
            , USER_DATE_FORMAT_CD
            , USER_NUMBER_FORMAT_CD
		)
		VALUES (
			  #{ses.gateCd}
            , UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))
            , <include refid="com.sql.sysdate"/>
            , #{ses.userId}
            , '0'
            , #{USE_FLAG}
            , #{COMPANY_CD}
            , #{PLANT_CD}
            , #{DIVISION_CD}
            , #{DEPT_CD}
            , #{DEPT_NM}
            , #{PART_CD}
            , #{USER_TYPE}
            , #{WORK_TYPE}
            , #{USER_NM}
            , #{USER_NM_ENG}
            , #{PASSWORD}
            , #{POSITION_NM}
            , #{DUTY_NM}
            , #{EMPLOYEE_NUM}
            , #{EMAIL}
            , #{TEL_NUM}
            , #{CELL_NUM}
            , #{FAX_NUM}
            , <include refid="com.sql.nvl"/>(#{ses.langCd}, 'KO')
            , <include refid="com.sql.nvl"/>(#{ses.countryCd},'KR')
            , #{SUPER_USER_FLAG}
            , #{PROGRESS_CD}
            , <include refid="com.sql.nvl"/>(#{ses.userGmt},'GMT+09:00')
            , <include refid="com.sql.nvl"/>(CASE WHEN #{USER_DATE_FORMAT_CD} = '' THEN NULL ELSE #{USER_DATE_FORMAT_CD} END, '01')
            , <include refid="com.sql.nvl"/>(CASE WHEN #{USER_NUMBER_FORMAT_CD} = '' THEN NULL ELSE #{USER_NUMBER_FORMAT_CD} END, '01')
		)
    </insert>

    <insert id="createUserInformation_VNGL" parameterType="hashMap">

        INSERT INTO STOCCVUR (
              GATE_CD
            , USER_ID
            , REG_DATE
            , REG_USER_ID
            , MOD_DATE
            , MOD_USER_ID
            , DEL_FLAG
            , COMPANY_CD
            , PLANT_CD
            , DIVISION_CD
            , DEPT_CD
            , DEPT_NM
            , PART_CD
            , MNG_YN
            , USER_TYPE
            , USER_NM
            , PASSWORD
            , POSITION_NM
            , DUTY_NM
            , EMPLOYEE_NO
            , TEL_NUM
            , FAX_NUM
            , CELL_NUM
            , EMAIL
            , USE_FLAG
            , PROGRESS_CD
        )
        VALUES (
              #{ses.gateCd}
            , UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))
            ,<include refid="com.sql.sysdate"/>
            , #{ses.userId}
            ,<include refid="com.sql.sysdate"/>
            , #{ses.userId}
            ,'0'
            , #{COMPANY_CD}
            ,(CASE WHEN #{USER_TYPE} = 'S' THEN #{COMPANY_CD} ELSE #{PLANT_CD} END)
            , #{DIVISION_CD}
            , #{DEPT_CD}
            , #{DEPT_NM}
            , #{PART_CD}
            ,<include refid="com.sql.nvl"/>(#{SUPER_USER_FLAG}, '0')
            , #{USER_TYPE}
            , #{USER_NM}
            , #{PASSWORD}
            , #{POSITION_NM}
            , #{DUTY_NM}
            , #{EMPLOYEE_NUM}
            , #{TEL_NUM}
            , #{FAX_NUM}
            , #{CELL_NUM}
            , #{EMAIL}
            , #{USE_FLAG}
            , #{PROGRESS_CD}
        )

    </insert>
	
	<!-- 공급사 및 고객사 사용자 체크 -->
    <select id="existsUserInformation_VNGL" parameterType="hashMap" resultType="java.lang.Integer">
        SELECT COUNT(USER_ID) AS CNT
          FROM STOCCVUR
         WHERE GATE_CD = #{ses.gateCd}
           AND UPPER(USER_ID) = UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))
    </select>

    <select id="existsMYNUser_VNGL" parameterType="hashMap" resultType="java.lang.Integer">

        SELECT COUNT(CVUR.USER_ID) AS CNT
          FROM STOCCVUR CVUR
          JOIN STOCVNGL A
               ON (CVUR.GATE_CD = A.GATE_CD
               AND CVUR.COMPANY_CD = A.VENDOR_CD)
         WHERE CVUR.GATE_CD = #{ses.gateCd}
           AND CVUR.COMPANY_CD = #{COMPANY_CD}
           AND CVUR.MNG_YN  = '1'
           AND UPPER(CVUR.USER_ID) != UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))
    </select>

    <select id="existsMYNUser_CUST" parameterType="hashMap" resultType="java.lang.Integer">

        SELECT COUNT(CVUR.USER_ID) AS CNT
          FROM STOCCVUR CVUR
          JOIN STOCCUST A
               ON (CVUR.GATE_CD = A.GATE_CD
               AND CVUR.COMPANY_CD = A.CUST_CD)
         WHERE CVUR.GATE_CD = #{ses.gateCd}
           AND CVUR.COMPANY_CD = #{COMPANY_CD}
           AND CVUR.MNG_YN  = '1'
           AND UPPER(CVUR.USER_ID) != UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))
    </select>

    <select id="CheckUserInfoPassWordSame" parameterType="hashMap" resultType="java.lang.Integer">
     SELECT MAX(A.CNT) AS CNT
       FROM (
            SELECT COUNT(USER_ID) AS CNT
              FROM STOCUSER
             WHERE GATE_CD  = #{ses.gateCd}
               AND UPPER(USER_ID) = UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))
               AND PASSWORD = #{PASSWORD}

              UNION ALL

             SELECT COUNT(USER_ID) AS CNT
               FROM STOCCVUR
              WHERE GATE_CD  = #{ses.gateCd}
                AND UPPER(USER_ID) = UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))
                AND PASSWORD = #{PASSWORD}
            ) A
    </select>

    <update id="updateUserInformation" parameterType="hashMap">

        UPDATE STOCUSER
           SET MOD_DATE = <include refid="com.sql.sysdate"/>
             , MOD_USER_ID =  #{ses.userId}
             , USE_FLAG = #{USE_FLAG}
             , COMPANY_CD = #{COMPANY_CD}
             , PLANT_CD = #{PLANT_CD}
             , DIVISION_CD = #{DIVISION_CD}
             , DEPT_CD = #{DEPT_CD}
             , PART_CD = #{PART_CD}
		<if test="CHANGE_PW !='' and CHANGE_PW !=null">
			 , PASSWORD = #{PASSWORD}
		</if>
             , USER_TYPE = #{USER_TYPE}
             , USER_NM =  #{USER_NM}
             , USER_NM_ENG =  #{USER_NM_ENG}
             , POSITION_NM = #{POSITION_NM}
             , DUTY_NM = #{DUTY_NM}
             , EMPLOYEE_NUM = #{EMPLOYEE_NUM}
             , EMAIL = #{EMAIL}
             , TEL_NUM = #{TEL_NUM}
             , CELL_NUM = #{CELL_NUM}
             , FAX_NUM = #{FAX_NUM}
             , LANG_CD = <include refid="com.sql.nvl"/>(#{ses.langCd}, 'KO')
             , COUNTRY_CD = <include refid="com.sql.nvl"/>(#{ses.countryCd},'KR')
             , SUPER_USER_FLAG = <include refid="com.sql.nvl"/>(#{SUPER_USER_FLAG}, '0')
             , GMT_CD = <include refid="com.sql.nvl"/>(#{ses.userGmt},'GMT+09:00')
             , PROGRESS_CD = #{PROGRESS_CD}
             , USER_DATE_FORMAT_CD = <include refid="com.sql.nvl"/>(CASE WHEN #{USER_DATE_FORMAT_CD} = '' THEN NULL ELSE #{USER_DATE_FORMAT_CD} END, '01')
             , USER_NUMBER_FORMAT_CD = <include refid="com.sql.nvl"/>(CASE WHEN #{USER_NUMBER_FORMAT_CD} = '' THEN NULL ELSE #{USER_NUMBER_FORMAT_CD} END, '01')
         WHERE GATE_CD = #{ses.gateCd}
           AND UPPER(USER_ID) = UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))
    </update>

    <select id="CheckUserInfoPassWordSame_VNGL" parameterType="hashMap" resultType="java.lang.Integer">
        SELECT COUNT(USER_ID)
          FROM STOCCVUR
         WHERE GATE_CD = #{ses.gateCd}
           AND UPPER(USER_ID) = UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))
           AND PASSWORD = #{PASSWORD}
    </select>

    <update id="updateUserInformation_VNGL" parameterType="hashMap">

        UPDATE STOCCVUR
           SET MOD_DATE = <include refid="com.sql.sysdate"/>
             , MOD_USER_ID = #{ses.userId}
             , USE_FLAG = #{USE_FLAG}
             , COMPANY_CD = #{COMPANY_CD}
             , PLANT_CD = #{PLANT_CD}
             , DIVISION_CD = #{DIVISION_CD}
             , DEPT_CD = #{DEPT_CD}
             , DEPT_NM = #{DEPT_NM}
             , PART_CD = #{PART_CD}
		<if test="CHANGE_PW !='' and CHANGE_PW !=null">
             , PASSWORD = #{PASSWORD}
        </if>
             , USER_TYPE = #{USER_TYPE}
             , USER_NM = #{USER_NM}
             , POSITION_NM = #{POSITION_NM}
             , TEL_NUM = #{TEL_NUM}
             , FAX_NUM = #{FAX_NUM}
             , CELL_NUM = #{CELL_NUM}
             , EMAIL = #{EMAIL}
             , PROGRESS_CD = #{PROGRESS_CD}
             , MNG_YN = <include refid="com.sql.nvl"/>(#{SUPER_USER_FLAG}, '0')
        WHERE GATE_CD = #{ses.gateCd}
          AND UPPER(USER_ID) = UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))
    </update>

    <update id="doResetUserInfo" parameterType="hashMap">

        UPDATE STOCUSER
           SET MOD_DATE = <include refid="com.sql.sysdate"/>
             , MOD_USER_ID = #{ses.userId}
             , LAST_LOGIN_DATE = <include refid="com.sql.sysdate"/>
             , PW_WRONG_CNT = 0
             , PW_RESET_FLAG = '1'
             , PW_RESET_DATE = <include refid="com.sql.sysdate"/>
         WHERE GATE_CD = #{GATE_CD}
           AND UPPER(USER_ID) = UPPER(<include refid="com.sql.trim"/>(#{USER_ID_ORI}))
    </update>

    <update id="doSaveIssue" parameterType="hashMap">

        UPDATE STOCUSER
           SET MOD_DATE = <include refid="com.sql.sysdate"/>
             , MOD_USER_ID = #{ses.userId}
             , PASSWORD = #{PASSWORD}
             , PW_WRONG_CNT = 0
             , PW_RESET_FLAG = '1'
             , PW_RESET_DATE = <include refid="com.sql.sysdate"/>
         WHERE GATE_CD = #{ses.gateCd}
           AND UPPER(USER_ID) = UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))
    </update>

    <update id="doSaveIssue_CVUR" parameterType="hashMap">

        UPDATE STOCCVUR
           SET MOD_DATE = <include refid="com.sql.sysdate"/>
             , MOD_USER_ID = #{ses.userId}
             , PASSWORD = #{PASSWORD}
             , PW_WRONG_CNT = 0
             , PW_RESET_FLAG = '1'
             , PW_RESET_DATE = <include refid="com.sql.sysdate"/>
         WHERE GATE_CD = #{ses.gateCd}
           AND UPPER(USER_ID) = UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))

    </update>

    <select id="existsUSAP" parameterType="hashMap" resultType="java.lang.Integer">

		SELECT COUNT(AUTH_CD) AS CNT FROM STOCUSAP
         WHERE GATE_CD = #{GATE_CD}
           AND UPPER(USER_ID) = UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))
           AND AUTH_CD = #{AUTH_CD}

    </select>

    <delete id="RealdeleteUSAP" parameterType="hashmap">

        DELETE FROM STOCUSAP
        WHERE GATE_CD = #{ses.gateCd}
          AND UPPER(USER_ID) = UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))
    </delete>

    <insert id="createUSAP" parameterType="hashMap">

		INSERT INTO STOCUSAP (
			GATE_CD
            , USER_ID
            , AUTH_CD
            , REG_DATE
            , REG_USER_ID
            , MOD_DATE
            , MOD_USER_ID
            , DEL_FLAG
        <if test="VALID_FROM_DATE != '' and VALID_FROM_DATE != null">
            , VALID_FROM_DATE
        </if>
        <if test="VALID_TO_DATE != '' and VALID_TO_DATE != null">
            ,VALID_TO_DATE
        </if>
		)
		VALUES (
			  #{ses.gateCd}
            , <include refid="com.sql.trim"/>(#{USER_ID})
            , #{AUTH_CD}
            , <include refid="com.sql.sysdate"/>
            , #{ses.userId}
            , <include refid="com.sql.sysdate"/>
            , #{ses.userId}
            , '0'
        <if test="VALID_FROM_DATE != '' and VALID_FROM_DATE != null">
            , <include refid="com.sql.dbo"/>setGmtDate(#{VALID_FROM_DATE}, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>)
        </if>
        <if test="VALID_TO_DATE != '' and VALID_TO_DATE != null">
            , <include refid="com.sql.dbo"/>setGmtDate(#{VALID_TO_DATE}, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>)
        </if>
		)
    </insert>

    <insert id="createBACP" parameterType="hashMap">

        MERGE INTO STOCBACP BACP
        USING (SELECT #{ses.gateCd} AS GATE_CD
                    , #{COMPANY_CD} AS BUYER_CD
                    , 'BASIC' AS CTRL_CD
                    , UPPER(<include refid="com.sql.trim"/>(#{USER_ID})) AS CTRL_USER_ID
               <include refid="com.sql.dual"/>
	           ) DATA
	        ON (BACP.GATE_CD  = DATA.GATE_CD
	        AND BACP.BUYER_CD = DATA.BUYER_CD
	        AND BACP.CTRL_CD  = DATA.CTRL_CD
	        AND UPPER(BACP.CTRL_USER_ID) = DATA.CTRL_USER_ID)
        WHEN MATCHED THEN
        UPDATE SET
             MOD_DATE = <include refid="com.sql.sysdate"/>
            ,MOD_USER_ID = #{ses.userId}
            ,DEL_FLAG ='0'
        WHEN NOT MATCHED THEN
        INSERT (
             GATE_CD
            ,BUYER_CD
            ,CTRL_CD
            ,CTRL_USER_ID
            ,REG_DATE
            ,REG_USER_ID
            ,MOD_DATE
            ,MOD_USER_ID
            ,DEL_FLAG
            ,USE_FLAG
        )
        VALUES (
             #{ses.gateCd}
            ,#{COMPANY_CD}
            ,'BASIC'
            ,<include refid="com.sql.trim"/>(#{USER_ID})
            ,<include refid="com.sql.sysdate"/>
            ,#{ses.userId}
            ,<include refid="com.sql.sysdate"/>
            ,#{ses.userId}
            ,'0'
            ,'1'
        <include refid="com.sql.mergeEnd"/>
    </insert>

    <update id="updateUSAP" parameterType="hashMap">
        UPDATE STOCUSAP SET
            MOD_DATE = <include refid="com.sql.sysdate"/>
            , MOD_USER_ID =  #{ses.userId}
            , DEL_FLAG = '0'
            <if test="VALID_FROM_DATE != '' and VALID_FROM_DATE != null">
                , VALID_FROM_DATE = <include refid="com.sql.dbo"/>setGmtDate(#{VALID_FROM_DATE}, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>)
            </if>
            <if test="VALID_TO_DATE != '' and VALID_TO_DATE != null">
                , VALID_TO_DATE = <include refid="com.sql.dbo"/>setGmtDate(#{VALID_TO_DATE}, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>)
            </if>
         WHERE GATE_CD = #{GATE_CD}
           AND UPPER(USER_ID) = UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))
           AND AUTH_CD = #{AUTH_CD}
    </update>

    <update id="doDeleteUSAP" parameterType="hashMap">
        UPDATE STOCUSAP SET
               MOD_DATE = <include refid="com.sql.sysdate"/>
             , MOD_USER_ID =  #{ses.userId}
             , DEL_FLAG = '1'
         WHERE GATE_CD = #{GATE_CD}
           AND UPPER(USER_ID) = UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))
    </update>

    <select id="existsUSAC" parameterType="hashMap" resultType="java.lang.Integer">

        SELECT COUNT(ACTION_PROFILE_CD) FROM STOCUSAC
         WHERE GATE_CD  = #{GATE_CD}
           AND UPPER(USER_ID) = UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))
           AND ACTION_PROFILE_CD = #{ACTION_PROFILE_CD}
    </select>

    <insert id="createUSAC" parameterType="hashMap">

        INSERT INTO STOCUSAC (
        	GATE_CD
            , USER_ID
            , ACTION_PROFILE_CD
            , REG_DATE
            , REG_USER_ID
            , MOD_DATE
            , MOD_USER_ID
            , DEL_FLAG
            , VALID_FROM_DATE
            , VALID_TO_DATE
		)
		VALUES (
			  #{ses.gateCd}
            , #{USER_ID}
            , #{ACTION_PROFILE_CD}
            , <include refid="com.sql.sysdate"/>
            , #{ses.userId}
            , <include refid="com.sql.sysdate"/>
            , #{ses.userId}
            , '0'
            , <include refid="com.sql.dbo"/>setGmtDate(#{VALID_FROM_DATE}, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>)
            , <include refid="com.sql.dbo"/>setGmtDate(#{VALID_TO_DATE}, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>)
		)
    </insert>

    <update id="updateUSAC" parameterType="hashMap">
        UPDATE STOCUSAC SET
			VALID_FROM_DATE = <include refid="com.sql.dbo"/>setGmtDate(#{VALID_FROM_DATE}, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>)
           	, VALID_TO_DATE = <include refid="com.sql.dbo"/>setGmtDate(#{VALID_TO_DATE}, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>)
           	, MOD_DATE = <include refid="com.sql.sysdate"/>
           	, MOD_USER_ID =  #{ses.userId}
           	, DEL_FLAG = '0'
         WHERE GATE_CD = #{GATE_CD}
           AND UPPER(USER_ID) = UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))
           AND ACTION_PROFILE_CD = #{ACTION_PROFILE_CD}
    </update>

    <update id="doDeleteUSAC" parameterType="hashMap">
        UPDATE STOCUSAC SET
               MOD_DATE = <include refid="com.sql.sysdate"/>
           	 , MOD_USER_ID =  #{ses.userId}
           	 , DEL_FLAG = '1'
         WHERE GATE_CD = #{GATE_CD}
           AND UPPER(USER_ID) = UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))
    </update>

    <update id="doDeleteUserInfo" parameterType="hashMap">

        UPDATE STOCUSER SET
        	DEL_FLAG = '1'
            , MOD_DATE = <include refid="com.sql.sysdate"/>
            , MOD_USER_ID =  #{ses.userId}
         WHERE GATE_CD = #{GATE_CD}
           AND UPPER(USER_ID) = UPPER(<include refid="com.sql.trim"/>(#{USER_ID_ORI}))

    </update>

    <update id="doResetUserInfoCVUR" parameterType="hashMap">

        UPDATE STOCCVUR
           SET MOD_DATE = <include refid="com.sql.sysdate"/>
             , MOD_USER_ID = #{ses.userId}
             , LAST_LOGIN_DATE = <include refid="com.sql.sysdate"/>
             , PW_WRONG_CNT = 0
             , PW_RESET_FLAG = '1'
             , PW_RESET_DATE = <include refid="com.sql.sysdate"/>
         WHERE GATE_CD = #{ses.gateCd}
           AND UPPER(USER_ID) = UPPER(<include refid="com.sql.trim"/>(#{USER_ID}))

    </update>

	<select id="selectUserSearch" parameterType="hashmap" resultType="hashmap">

		SELECT DISTINCT
              USER_TBL.USER_ID AS USER_ID
			, <include refid="com.sql.dbo"/>getUserName(USER_TBL.GATE_CD, USER_TBL.USER_ID, #{ses.langCd}) AS USER_NM
			, <include refid="com.sql.dbo"/>getUserName(USER_TBL.GATE_CD, USER_TBL.USER_ID, #{ses.langCd}) AS HIDDEN_USER_NM
			, USER_TBL.USER_TYPE
			, USER_TBL.COMPANY_CD
            , (SELECT BUYER_NM FROM STOCOGCM WHERE GATE_CD = USER_TBL.GATE_CD AND BUYER_CD = USER_TBL.COMPANY_CD AND LANG_CD=#{ses.langCd}) AS BUYER_NM
            , <include refid="com.sql.dbo"/>getUserDeptInfo(USER_TBL.GATE_CD, USER_TBL.USER_ID, #{ses.langCd}) AS DEPT_NM
			, OGDP.DEPT_CD
			, USER_TBL.POSITION_NM
			, USER_TBL.DUTY_NM
	      FROM STOCUSER USER_TBL
	      LEFT JOIN STOCOGCM OGCM ON USER_TBL.COMPANY_CD = OGCM.BUYER_CD AND USER_TBL.GATE_CD = OGCM.GATE_CD AND OGCM.DEL_FLAG = '0'
	      LEFT JOIN STOCOGDP OGDP ON USER_TBL.DEPT_CD = OGDP.DEPT_CD AND USER_TBL.GATE_CD = OGDP.GATE_CD AND USER_TBL.COMPANY_CD = OGDP.BUYER_CD AND OGDP.DEL_FLAG = '0'
	     WHERE USER_TBL.GATE_CD = #{ses.gateCd}
	       AND USER_TBL.DEL_FLAG = '0'
	       
	    <if test="USER_TYPE != '' and USER_TYPE != null">
	        AND USER_TBL.USER_TYPE = UPPER(<include refid="com.sql.trim"/>(#{USER_TYPE}))
	    </if>
	    <if test="BUYER_NM != '' and BUYER_NM != null">
	        AND (SELECT BUYER_NM FROM STOCOGCM WHERE GATE_CD = USER_TBL.GATE_CD AND BUYER_CD = USER_TBL.COMPANY_CD AND LANG_CD=#{ses.langCd}) <include refid="com.sql.likeL"/> #{BUYER_NM} <include refid="com.sql.likeR"/>
	    </if>
	    <if test="USER_NM != '' and USER_NM != null">
            AND UPPER(<include refid="com.sql.dbo"/>getUserName(USER_TBL.GATE_CD, USER_TBL.USER_ID, #{ses.langCd}))  LIKE #{USER_NM} <include refid="com.sql.stringMerge"/>'%'
	    </if>
	    <if test="DEPT_NM != '' and DEPT_NM != null">
	        AND <include refid="com.sql.dbo"/>getDeptName(USER_TBL.GATE_CD, USER_TBL.COMPANY_CD, USER_TBL.DEPT_CD, #{ses.langCd}) <include refid="com.sql.likeL"/> #{DEPT_NM} <include refid="com.sql.likeR"/>
	    </if>

    </select>

    <select id="doSearchUserWorkHistory" parameterType="hashMap" resultType="hashMap">

       SELECT
             <include refid="com.sql.dbo"/>getGmtDate(ULOG.JOB_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateFormat}<include refid="com.sql.stringMerge"/>' hh24:mi:ss') AS JOB_DATE
            , ULOG.JOB_TYPE
            , ULOG.JOB_DESC
            , ULOG.MODULE_NM
            , ULOG.METHOD_NM
            , ULOG.USER_TYPE
            , ULOG.USER_ID  AS USER_ID
            , <include refid="com.sql.dbo"/>GETUSERNAME(ULOG.GATE_CD, ULOG.USER_ID, #{ses.langCd}) AS USER_NM
            , ULOG.IP_ADDR
            , ULOG.SCREEN_ID AS SCREEN_ID
            , <include refid="com.sql.dbo"/>GETMULTINAME(ULOG.GATE_CD, 'SC', #{ses.langCd}, '', ULOG.SCREEN_ID) AS SCREEN_NM
            , ULOG.ACTION_CD AS ACTION_CD
            , <include refid="com.sql.dbo"/>GETMULTINAME(ULOG.GATE_CD, 'SA', #{ses.langCd}, ULOG.ACTION_CD, ULOG.SCREEN_ID) AS ACTION_NM
            , ULOG.GATE_CD
        FROM STOCULOG ULOG JOIN STOCUSER U ON ULOG.GATE_CD=U.GATE_CD AND ULOG.USER_ID=U.USER_ID
       WHERE ULOG.GATE_CD = #{ses.gateCd}
        <if test="REG_DATE_FROM != '' and REG_DATE_FROM != null and REG_DATE_TO != '' and REG_DATE_TO != null">
        	AND ULOG.JOB_DATE BETWEEN <include refid="com.sql.toDate"/>#{REG_DATE_FROM}, 'YYYYMMDD HH24:MI:SS') AND <include refid="com.sql.toDate"/>#{REG_DATE_TO}, 'YYYYMMDD HH24:MI:SS')
        </if>
        <if test="JOB_TYPE != '' and JOB_TYPE != null">
			AND ULOG.JOB_TYPE = #{JOB_TYPE}
        </if>
        <if test="USER_ID != '' and USER_ID != null">
            AND UPPER(ULOG.USER_ID) <include refid="com.sql.likeL"/> UPPER(#{USER_ID}) <include refid="com.sql.likeR"/>
        </if>
        <if test="USER_TYPE != '' and USER_TYPE != null">
        	AND ULOG.USER_TYPE = #{USER_TYPE}
        </if>
        <if test="USER_NM != '' and USER_NM != null">
            AND UPPER(<include refid="com.sql.dbo"/>getUserName(ULOG.GATE_CD, ULOG.REQ_USER_ID, #{ses.langCd})) <include refid="com.sql.likeL"/> UPPER(#{USER_NM}) <include refid="com.sql.likeR"/>
        </if>
        <if test="IP_ADDR != '' and IP_ADDR != null">
			AND ULOG.IP_ADDR <include refid="com.sql.likeL"/> #{IP_ADDR} <include refid="com.sql.likeR"/>
        </if>
        <if test="METHOD_NM != '' and METHOD_NM != null">
			AND ULOG.METHOD_NM <include refid="com.sql.likeL"/> #{METHOD_NM} <include refid="com.sql.likeR"/>
        </if>
        <if test="MODULE_NM != '' and MODULE_NM != null">
			AND ULOG.MODULE_NM <include refid="com.sql.likeL"/> #{MODULE_NM} <include refid="com.sql.likeR"/>
        </if>
		<if test="JOB_DESC != '' and JOB_DESC != null">
			AND ULOG.JOB_DESC <include refid="com.sql.likeL"/> #{JOB_DESC} <include refid="com.sql.likeR"/>
        </if>
        <if test="SCREEN_ID != '' and SCREEN_ID != null">
        	AND ULOG.SCREEN_ID <include refid="com.sql.likeL"/> #{SCREEN_ID} <include refid="com.sql.likeR"/>
        </if>
        <if test="ACTION_CD != '' and ACTION_CD != null">
        	AND ULOG.ACTION_CD <include refid="com.sql.likeL"/> #{ACTION_CD} <include refid="com.sql.likeR"/>
        </if>

        ORDER BY ULOG.JOB_DATE DESC

    </select>

    <select id="getUserInfo" parameterType="hashmap" resultType="hashmap">
       <if test="USER_TYPE == 'O'.toString()">
           SELECT GATE_CD
                 ,USER_ID  AS USER_ID
                 ,USER_NM  AS USER_NM
                 ,CELL_NUM AS CELL_NUM
                 ,COMPANY_CD
             FROM STOCUSER
            WHERE GATE_CD = '100'
              AND USER_ID = #{userId}
       </if>
       <if test="USER_TYPE == 'CS'.toString()">
           SELECT GATE_CD
                 ,USER_ID
                 ,USER_NM  AS USER_NM
                 ,CELL_NUM AS CELL_NUM
                 ,COMPANY_CD
             FROM STOCCVUR
            WHERE GATE_CD = '100'
              AND USER_ID = #{userId}
       </if>
    </select>

    <select id="doSearchUserCust" parameterType="hashMap" resultType="java.util.Map">

        SELECT USERS.GATE_CD
             , USERS.USER_ID  AS USER_ID
             , <include refid="com.sql.dbo"/>getUserName(USERS.GATE_CD, USERS.USER_ID, #{ses.langCd}) AS USER_NM
             , USERS.DEL_FLAG
             , USERS.USE_FLAG
             , (SELECT CUST_CD FROM STOCCUST WHERE GATE_CD = USERS.GATE_CD AND CUST_CD = USERS.COMPANY_CD) AS BUYER_CD
             , USERS.USER_TYPE
             , <include refid="com.sql.dbo"/>GETUSERNAME(USERS.GATE_CD, USERS.USER_ID, #{ses.langCd}) USER_NM_DISPLAY
             , <include refid="com.sql.dbo"/>GETUSERNAME(USERS.GATE_CD, USERS.USER_ID, #{ses.langCd}) USER_NM_SEARCH
             , (SELECT CUST_NM FROM STOCCUST WHERE GATE_CD = USERS.GATE_CD AND CUST_CD = USERS.COMPANY_CD) AS BUYER_NM
             , USERS.DEPT_CD
             , <include refid="com.sql.dbo"/>getUserDeptInfo(USERS.GATE_CD, USERS.USER_ID, #{ses.langCd}) as DEPT_NM
             , USERS.POSITION_NM
             , USERS.DUTY_NM
          FROM STOCCVUR USERS
         WHERE USERS.GATE_CD  = #{ses.gateCd}
           AND USERS.DEL_FLAG = '0'

        <if test="USER_TYPE != '' and USER_TYPE != null">
           AND USERS.USER_TYPE = #{USER_TYPE}
        </if>
        <if test="USER_NM != '' and USER_NM != null">
           AND <include refid="com.sql.dbo"/>GETUSERNAME(GATE_CD, USER_ID, #{ses.langCd}) <include refid="com.sql.likeL"/> #{USER_NM} <include refid="com.sql.likeR"/>
        </if>
        <if test="BUYER_NM != '' and BUYER_NM != null">
           AND (SELECT CUST_NM FROM STOCCUST WHERE GATE_CD = USERS.GATE_CD AND CUST_CD = USERS.COMPANY_CD) <include refid="com.sql.likeL"/> #{BUYER_NM} <include refid="com.sql.likeR"/>
        </if>
        <if test="DEPT_NM != '' and DEPT_NM != null">
           AND <include refid="com.sql.dbo"/>GETDEPTNAME(USERS.GATE_CD, USERS.COMPANY_CD, USERS.DEPT_CD, #{ses.langCd}) <include refid="com.sql.likeL"/> #{DEPT_NM} <include refid="com.sql.likeR"/>
        </if>

         ORDER BY USER_NM
    </select>

</mapper>