<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.st_ones.evermp.OD01.PO0310_Mapper">

	<!-- 재고관리 > 출하관리 > 출하지시 대기 (PO0310) -->
    <select id="PO0310_doSearch" parameterType="hashMap" resultType="hashMap">

        SELECT UPOHD.CUST_CD  --고객사코드
            , CUST.CUST_NM   --고객사명
            , UPOHD.CPO_USER_DEPT_CD AS DEPT_CD -- 주문자부서코드
            , <include refid="com.sql.dbo"/>getCpoDeptInfo(UPOHD.GATE_CD, UPODT.CPO_NO, #{ses.langCd}) AS DEPT_NM
            , UPOHD.CPO_USER_ID -- 주문자ID
            , <include refid="com.sql.dbo"/>GETUSERNAME(UPOHD.GATE_CD,UPOHD.CPO_USER_ID,#{ses.langCd}) AS CPO_USER_NM	   -- 주문자명
            , <include refid="com.sql.dbo"/>GETUSERNAME(UPOHD.GATE_CD,UPODT.AM_USER_ID,#{ses.langCd}) AS AM_USER_NM	   -- 구매담당자명
            , UPODT.AM_USER_ID AS AM_USER_ID -- 운영사 담당자 ID
            , UPODT.BD_DEPT_CD -- 예산부서코드
            , <include refid="com.sql.dbo"/>getBdDeptNm(#{ses.gateCd},UPODT.BD_DEPT_CD,#{ses.langCd}) AS BD_DEPT_NM
            , UPODT.ACCOUNT_CD -- 예산계정코드
            , UPODT.COST_CENTER_CD -- 코스트센터코드
            , UPODT.COST_CENTER_NM_KOR AS COST_CENTER_NM -- 코스트센터명
            , CUPL.PLANT_NM AS PLANT_NM -- 플랜트
			, UPODT.PLANT_CD
            , UPODT.PROGRESS_CD --진행상태
            , <include refid="com.sql.dbo"/>GETCOMCODE(UPODT.GATE_CD, 'M062', UPODT.PROGRESS_CD,'3', #{ses.langCd}) AS PROGRESS_NM --진행상태
            , UPODT.PRIOR_GR_FLAG --선입고여부
            , UPODT.CPO_NO  -- 주문번호
            , UPODT.CPO_SEQ -- 주문항번
            , UPODT.REF_MNG_NO -- 관리번호
            , UPODT.ITEM_CD  -- 품목코드
            , UPODT.ITEM_CD AS ORG_ITEM_CD
            , UPODT.CUST_ITEM_CD  -- 고객사품목코드
            , UPODT.NAP_FLAG AS NAP_FLAG -- 국책여부
            , UPODT.NAP_FLAG AS ORG_NAP_FLAG
            , UPODT.ITEM_DESC -- 상품명
            , UPODT.ITEM_SPEC -- 규격
            , UPODT.MAKER_CD -- 제조사 코드
            , UPODT.MAKER_NM -- 제조사명
            , UPODT.MAKER_PART_NO --모델번호
            , UPODT.BRAND_CD -- 브랜드코드
            , UPODT.BRAND_NM -- 브랜드명
            , UPODT.ORIGIN_CD --원산지코드
            , <include refid="com.sql.dbo"/>GETCODENAME(UPODT.GATE_CD,'M004',UPODT.ORIGIN_CD,#{ses.langCd}) AS ORIGIN_NM -- 원산지명
            , UPODT.UNIT_CD -- 단위
            , <include refid="com.sql.nvl"/>(UPODT.MOQ_QTY, 1) AS MOQ_QTY --최소주문수량
            , <include refid="com.sql.nvl"/>(UPODT.RV_QTY, 1)  AS RV_QTY --발주배수
            , <include refid="com.sql.nvl"/>(UPODT.CPO_QTY, 0) AS CPO_QTY --주문수량
            , <include refid="com.sql.nvl"/>(UPODT.CPO_QTY, 0) AS ORG_CPO_QTY
            , UPODT.CUR -- 통화
            , <include refid="com.sql.nvl"/>(UPODT.CPO_UNIT_PRICE, 0) AS CPO_UNIT_PRICE -- 주문단가
            , <include refid="com.sql.nvl"/>(UPODT.CPO_UNIT_PRICE, 0) AS ORG_CPO_UNIT_PRICE
            , <include refid="com.sql.nvl"/>(UPODT.CPO_ITEM_AMT, 0)   AS CPO_ITEM_AMT   -- 주문금액
            , <include refid="com.sql.nvl"/>(UPODT.CPO_ITEM_AMT, 0) AS ORG_CPO_ITEM_AMT
            , <include refid="com.sql.nvl"/>(UPODT.TEMP_PO_UNIT_PRICE, 0) AS PO_UNIT_PRICE
            , <include refid="com.sql.nvl"/>(UPODT.TEMP_PO_UNIT_PRICE, 0) AS ORG_PO_UNIT_PRICE
            , <include refid="com.sql.nvl"/>(UPODT.TEMP_PO_ITEM_AMT, 0) AS PO_ITEM_AMT -- 매입금액
            , <include refid="com.sql.nvl"/>(UPODT.TEMP_PO_ITEM_AMT, 0) AS ORG_PO_ITEM_AMT
            , (CASE WHEN ( <include refid="com.sql.nvl"/>(UPODT.CPO_ITEM_AMT, 0) <![CDATA[>]]> 0 AND <include refid="com.sql.nvl"/>(YPODT.PO_ITEM_AMT, UPODT.TEMP_PO_ITEM_AMT) <![CDATA[>]]> 0)
                    THEN ROUND((<include refid="com.sql.nvl"/>(UPODT.CPO_ITEM_AMT, 0) - <include refid="com.sql.nvl"/>(YPODT.PO_ITEM_AMT, UPODT.TEMP_PO_ITEM_AMT) ) / <include refid="com.sql.nvl"/>(UPODT.CPO_ITEM_AMT, 0) * 100, 1)
                    ELSE 0 END) AS PROFIT_RATE
            , <include refid="com.sql.nvl"/>(UPODT.LEAD_TIME, 0) AS LEAD_TIME -- 납기일자
            , <include refid="com.sql.toDateChar"/>(UPOHD.CPO_DATE, 'yyyyMMdd') AS CPO_DATE -- 주문일자
            , <include refid="com.sql.toDateChar"/>(<include refid="com.sql.dbo"/>fn_GetTotalWorkingDaysFromParamDate(UPOHD.CPO_DATE, <include refid="com.sql.nvl"/>(UPODT.LEAD_TIME, 0)), 'yyyyMMdd') AS LEAD_TIME_DATE -- 표준납기일자
            , <include refid="com.sql.toDateChar"/>(UPODT.HOPE_DUE_DATE, 'yyyyMMdd') AS HOPE_DUE_DATE -- 희망납기일자
            , <include refid="com.sql.toDateChar"/>(UPODT.HOPE_DUE_DATE, 'yyyyMMdd') AS ORG_HOPE_DUE_DATE
            , UPODT.DELY_PLACE -- 배송장소
            , UPODT.DELY_TYPE -- 배송방법
            , <include refid="com.sql.toDateChar"/>(UPODT.CPO_CANCLE_DATE, 'yyyyMMdd') AS CPO_CANCLE_DATE --주문취소일자
            , UPODT.CPO_CANCLE_USER_ID -- 주문취소자ID
            , <include refid="com.sql.dbo"/>GETUSERNAME(UPODT.GATE_CD,UPODT.CPO_CANCLE_USER_ID,#{ses.langCd}) AS CPO_CANCLE_USER_NM	   -- 주문취소자명
            , UPODT.CSDM_SEQ -- 배송지코드
            , UPODT.CSDM_SEQ AS ORG_CSDM_SEQ
            , UPODT.DELY_NM  -- 배송지명
            , UPODT.RECIPIENT_NM	   -- 인수자명
            , UPODT.RECIPIENT_DEPT_NM  -- 인수자부서명
            , UPODT.RECIPIENT_TEL_NUM  -- 인수자전화번호
            , UPODT.RECIPIENT_FAX_NUM -- 인수자팩스번호
            , UPODT.RECIPIENT_CELL_NUM -- 인수자휴대전화번호
            , UPODT.RECIPIENT_EMAIL -- 인수자이메일
            , UPODT.DELY_ZIP_CD  -- 납품장소 우편번호
            , UPODT.DELY_ADDR_1  -- 납품장소 기본주소
            , UPODT.DELY_ADDR_2  -- 납품장소 상세주소
            , UPODT.REQ_TEXT  --요청사항
            , UPODT.AGENT_ATTACH_FILE_NO
            , <include refid="com.sql.dbo"/>GETFILECOUNT(UPODT.GATE_CD,UPODT.AGENT_ATTACH_FILE_NO) AS AGENT_ATTACH_FILE_CNT
            , UPODT.ATTACH_FILE_NO
            , <include refid="com.sql.dbo"/>GETFILECOUNT(UPODT.GATE_CD,UPODT.ATTACH_FILE_NO) AS ATTACH_FILE_CNT
            , YPODT.PO_NO   -- 발주번호
            , YPODT.PO_SEQ  -- 발주항번
            , UPODT.VENDOR_CD
            , <include refid="com.sql.dbo"/>getCompanyName(UPODT.GATE_CD,UPODT.VENDOR_CD,#{ses.langCd}) AS VENDOR_NM

            , UPODT.AM_USER_CHANGE_RMK -- 이관사유
            , UPODT.CONFIRM_REQ_RMK -- 승인요청사유
            , UPODT.PO_CONFIRM_REJECT_RMK -- 발주승인반려사유
            , YPODT.DELY_REJECT_CD	-- 납품거부사유
            , <include refid="com.sql.dbo"/>GETCODENAME(YPODT.GATE_CD,'MP057',YPODT.DELY_REJECT_CD,#{ses.langCd}) AS DELY_REJECT_NM -- 납품거부사유명
            , YPODT.DELY_REJECT_REASON-- 납품거부상세사유
            , <include refid="com.sql.toDateChar"/>(YPODT.DELY_REJECT_DATE, 'yyyyMMdd') AS DELY_REJECT_DATE -- 납품거부일자
            , ROW_NUMBER() over (PARTITION BY UPODT.CPO_NO, UPODT.CPO_SEQ ORDER BY UPODT.CPO_NO, UPODT.CPO_SEQ) AS CPO_CNT -- 주문건 수
            , CASE WHEN ROW_NUMBER() over (PARTITION BY UPODT.CPO_NO, UPODT.CPO_SEQ ORDER BY UPODT.CPO_NO, UPODT.CPO_SEQ) = 1 THEN <include refid="com.sql.nvl"/>(UPODT.CPO_ITEM_AMT, 0) ELSE 0 END HDN_CPO_ITEM_AMT -- 주문금액
            , CASE WHEN ROW_NUMBER() over (PARTITION BY UPODT.CPO_NO, UPODT.CPO_SEQ ORDER BY UPODT.CPO_NO, UPODT.CPO_SEQ) = 1 THEN <include refid="com.sql.nvl"/>(YPODT.PO_ITEM_AMT, 0) ELSE 0 END HDN_PO_ITEM_AMT -- 매입금액
            , (CASE WHEN ( (CASE WHEN ROW_NUMBER() over (PARTITION BY UPODT.CPO_NO, UPODT.CPO_SEQ ORDER BY UPODT.CPO_NO, UPODT.CPO_SEQ) = 1 THEN <include refid="com.sql.nvl"/>(UPODT.CPO_ITEM_AMT, 0) ELSE 0 END)  >  0 AND (CASE WHEN ROW_NUMBER() over (PARTITION BY UPODT.CPO_NO, UPODT.CPO_SEQ ORDER BY UPODT.CPO_NO, UPODT.CPO_SEQ) = 1 THEN <include refid="com.sql.nvl"/>(YPODT.PO_ITEM_AMT, 0) ELSE 0 END)  >  0)
               THEN ROUND(( (CASE WHEN ROW_NUMBER() over (PARTITION BY UPODT.CPO_NO, UPODT.CPO_SEQ ORDER BY UPODT.CPO_NO, UPODT.CPO_SEQ) = 1 THEN <include refid="com.sql.nvl"/>(UPODT.CPO_ITEM_AMT, 0) ELSE 0 END) - (CASE WHEN ROW_NUMBER() over (PARTITION BY UPODT.CPO_NO, UPODT.CPO_SEQ ORDER BY UPODT.CPO_NO, UPODT.CPO_SEQ) = 1 THEN <include refid="com.sql.nvl"/>(YPODT.PO_ITEM_AMT, 0) ELSE 0 END) ) / (CASE WHEN ROW_NUMBER() over (PARTITION BY UPODT.CPO_NO, UPODT.CPO_SEQ ORDER BY UPODT.CPO_NO, UPODT.CPO_SEQ) = 1 THEN <include refid="com.sql.nvl"/>(UPODT.CPO_ITEM_AMT, 0) ELSE 0 END) * 100, 2)
               ELSE 0 END) AS HDN_PROFIT_RATE -- 이익율
            , UPODT.OREFITEM -- 일련번호 구 시스템
            , UPODT.APPLY_COM -- 공통계약고객사코드(1000:공통, 이외:개별)
            , UPODT.CONT_NO   -- 계약번호
            , UPODT.CONT_SEQ  -- 계약항번
            , UPODT.AGENT_MEMO
            , UPODT.SHIPPER_TYPE
            , UPODT.REQ_USER_NM
            , UPODT.REQ_USER_TEL_NUM
            , UPODT.IF_CPO_NO
            , UPODT.IF_CPO_SEQ
			<if test="_databaseId == 'mssql'">
            , UPODT.IF_CPO_NO<include refid="com.sql.stringMerge"/>'-'<include refid="com.sql.stringMerge"/>CAST(UPODT.IF_CPO_SEQ AS NVARCHAR(20)) AS IF_CPO_NO_SEQ
			</if>
			<if test="_databaseId == 'oracle'">
            , UPODT.IF_CPO_NO<include refid="com.sql.stringMerge"/>'-'<include refid="com.sql.stringMerge"/>TO_CHAR(UPODT.IF_CPO_SEQ) AS IF_CPO_NO_SEQ
			</if>
            , UPODT.IF_ID
            , YPODT.DEAL_CD
            , CUST.BUDGET_USE_FLAG
            , UPODT.VENDOR_ITEM_CD
			<if test="_databaseId == 'mssql'">
            , UPODT.CPO_NO<include refid="com.sql.stringMerge"/>'-'<include refid="com.sql.stringMerge"/>CAST(UPODT.CPO_SEQ AS NVARCHAR(20)) AS CPO_NO_SEQ
			</if>
			<if test="_databaseId == 'oracle'">
            , UPODT.CPO_NO<include refid="com.sql.stringMerge"/>'-'<include refid="com.sql.stringMerge"/>TO_CHAR(UPODT.CPO_SEQ) AS CPO_NO_SEQ
			</if>
			,UPOHD.PR_TYPE
			,UPOHD.PR_SUBJECT
            ,UPODT.DELY_TYPE
			,YPODT.SIGN_STATUS
			,CASE WHEN YPODT.SIGN_STATUS = 'P' THEN '변경상신중'
                  WHEN YPODT.SIGN_STATUS = 'E' THEN '변경완료'
                  ELSE '' END SIGN_STATUS_NM
            ,YPODT.APP_DOC_NO
            ,YPODT.APP_DOC_CNT
            ,<include refid="com.sql.nvl"/>(REAL_QTY, 0) AS CUR_QTY
            ,MTGL.SG_CTRL_USER_ID
            ,MTGL.VAT_CD
          FROM STOUPODT UPODT
          JOIN STOUPOHD UPOHD
	         ON (UPODT.GATE_CD  = UPOHD.GATE_CD
	         AND UPODT.CUST_CD  = UPOHD.CUST_CD
	         AND UPODT.CPO_NO   = UPOHD.CPO_NO
	         AND UPOHD.SIGN_STATUS IN ('P', 'E') -- 결재중, 결재승인
	         AND UPOHD.DEL_FLAG = '0')
          JOIN STOYPODT YPODT
	         ON (UPODT.GATE_CD  = YPODT.GATE_CD
	         AND UPODT.CUST_CD  = YPODT.CUST_CD
	         AND UPODT.CPO_NO   = YPODT.CPO_NO
	         AND UPODT.CPO_SEQ  = YPODT.CPO_SEQ
	         AND YPODT.DEL_FLAG = '0')
          JOIN STOYPOHD YPOHD
	         ON (YPODT.GATE_CD  = YPOHD.GATE_CD
	         AND YPODT.PO_NO    = YPOHD.PO_NO
	         AND YPOHD.SIGN_STATUS = 'E' -- 결재완료
	         AND YPOHD.DEL_FLAG = '0')
     LEFT JOIN STOCCUST CUST
	         ON (UPOHD.GATE_CD = CUST.GATE_CD
	         AND UPOHD.CUST_CD = CUST.CUST_CD)
     LEFT JOIN STOCCUPL CUPL
	         ON (CUPL.GATE_CD  = UPODT.GATE_CD
	         AND CUPL.CUST_CD  = UPODT.CUST_CD
	         AND CUPL.PLANT_CD = UPODT.PLANT_CD
	         AND CUPL.DEL_FLAG = '0')
          JOIN STOCCVUR CVUR
          	 ON (CVUR.GATE_CD = UPOHD.GATE_CD
          	 AND CVUR.USER_ID = UPOHD.CPO_USER_ID)
     LEFT JOIN (
      	  SELECT
      	  		 A.GATE_CD
                ,A.DEAL_CD
                ,A.ITEM_CD
                ,SUM(<include refid="com.sql.nvl"/>(BASE_QTY,0)+<include refid="com.sql.nvl"/>(ESUM,0) - <include refid="com.sql.nvl"/>(XSUM,0)) AS REAL_QTY--재고수량
			FROM (SELECT
					 GATE_CD
					,DEAL_CD
					,ITEM_CD
					,RD_DATE
					,WAREHOUSE_CODE
					,STR_CTRL_CODE
					,SUM(ITEM_QTY) AS ITEM_QTY
					,SUM(CASE WHEN 100 <![CDATA[<=]]> MOVEMENT_TYPE AND 110 <![CDATA[>=]]> MOVEMENT_TYPE THEN ITEM_QTY END)AS ESUM --입고수량
	            	,SUM(CASE WHEN 900 <![CDATA[<=]]> MOVEMENT_TYPE AND 998 <![CDATA[>=]]> MOVEMENT_TYPE THEN ITEM_QTY END)AS XSUM --출고수량
					,SUM(CASE WHEN 999 <![CDATA[=]]> MOVEMENT_TYPE THEN ITEM_QTY END ) AS BASE_QTY --기초수량
				FROM STOIMMRS
				WHERE DEL_FLAG ='0'
				  AND RD_DATE BETWEEN TRUNC( SYSDATE ,'MM') AND SYSDATE
				GROUP BY GATE_CD,RD_DATE,STR_CTRL_CODE,WAREHOUSE_CODE,ITEM_CD,DEAL_CD
				) A
				JOIN STOCMTGL B
				   ON  A.GATE_CD=B.GATE_CD
				   AND A.ITEM_CD =B.ITEM_CD
				JOIN STOCOGWH C
				   ON A.GATE_CD = C.GATE_CD
				   AND A.STR_CTRL_CODE = C.STR_CTRL_CODE
				   AND A.WAREHOUSE_CODE = C.WAREHOUSE_CODE
			   	   AND C.DEL_FLAG = '0'
			    GROUP BY  A.DEAL_CD		   --거래유형 [MP021] - 재고, VMI
						 ,A.GATE_CD
				         ,A.ITEM_CD
			)MMRS ON YPODT.GATE_CD  = MMRS.GATE_CD
				 AND YPODT.DEAL_CD  = MMRS.DEAL_CD
				 AND YPODT.ITEM_CD  = MMRS.ITEM_CD
            LEFT OUTER JOIN STOCMTGL MTGL
                 ON (UPODT.GATE_CD = MTGL.GATE_CD
                 AND UPODT.ITEM_CD = MTGL.ITEM_CD
                 AND MTGL.DEL_FLAG ='0')
         WHERE UPODT.GATE_CD  = #{ses.gateCd}
           AND UPODT.DEL_FLAG = '0'
           AND UPODT.CUST_CD != #{ses.manageCd}	-- 운영사: 2518
		   AND UPODT.DEAL_CD IN ('100','400')	-- 100: 매입, 400: VMI
        <if test="PLANT_CD != '' and PLANT_CD != null">
            AND UPODT.PLANT_CD <include refid="com.sql.likeL"/> #{PLANT_CD} <include refid="com.sql.likeR"/>
        </if>
        <if test="PLANT_NM != '' and PLANT_NM != null">
            AND <include refid="com.sql.dbo"/>getPlantName(#{ses.gateCd}, UPODT.CUST_CD, UPODT.PLANT_CD, #{ses.langCd}) <include refid="com.sql.likeL"/> #{PLANT_NM} <include refid="com.sql.likeR"/>
        </if>
        <if test="DDP_CD != '' and DDP_CD != null">
            AND <include refid="com.sql.dbo"/>getCpoDeptInfo(UPOHD.GATE_CD, UPODT.CPO_NO, #{ses.langCd}) <include refid="com.sql.likeL"/> UPPER(#{DDP_CD}) <include refid="com.sql.likeR"/>
        </if>
       <if test="DIVISION_CD != '' and DIVISION_CD != null">
			AND CVUR.DIVISION_CD = #{DIVISION_CD}
	   </if>
       <if test="DEPT_CD != '' and DEPT_CD != null">
			AND CVUR.DEPT_CD = #{DEPT_CD}
	   </if>
       <if test="PART_CD != '' and PART_CD != null">
			AND CVUR.PART_CD = #{PART_CD}
	   </if>
        <if test="CPO_NO != '' and CPO_NO != null">
           AND UPOHD.CPO_NO <include refid="com.sql.likeL"/> #{CPO_NO} <include refid="com.sql.likeR"/>
        </if>
        <if test="PR_SUBJECT != '' and PR_SUBJECT != null">
           AND UPOHD.PR_SUBJECT <include refid="com.sql.likeL"/> #{PR_SUBJECT} <include refid="com.sql.likeR"/>
        </if>
        <if test="PR_TYPE != '' and PR_TYPE != null">
           AND UPOHD.PR_TYPE =#{PR_TYPE}
        </if>
        <if test="DEAL_CD != '' and DEAL_CD != null">
           AND UPODT.DEAL_CD =#{DEAL_CD}
        </if>
        <if test="CUST_CD != '' and CUST_CD != null">
           AND UPOHD.CUST_CD <include refid="com.sql.likeL"/> #{CUST_CD} <include refid="com.sql.likeR"/>
        </if>
        <if test="CUST_NM != '' and CUST_NM != null">
           AND <include refid="com.sql.dbo"/>getCompanyName(UPOHD.GATE_CD,UPOHD.CUST_CD,#{ses.langCd}) <include refid="com.sql.likeL"/> #{CUST_NM} <include refid="com.sql.likeR"/>
        </if>
        <if test="DEPT_CD != '' and DEPT_CD != null">
           AND UPOHD.CPO_USER_DEPT_CD <include refid="com.sql.likeL"/> #{DEPT_CD} <include refid="com.sql.likeR"/>
        </if>
        <if test="DEPT_NM != '' and DEPT_NM != null">
           AND <include refid="com.sql.dbo"/>getDeptName(UPOHD.GATE_CD,UPOHD.CUST_CD,UPOHD.CPO_USER_DEPT_CD,#{ses.langCd}) <include refid="com.sql.likeL"/> #{DEPT_NM} <include refid="com.sql.likeR"/>
        </if>
        <if test="CPO_USER_ID != '' and CPO_USER_ID != null">
           AND UPOHD.CPO_USER_ID <include refid="com.sql.likeL"/> #{CPO_USER_ID} <include refid="com.sql.likeR"/>
        </if>
        <if test="CPO_USER_NM != '' and CPO_USER_NM != null">
           AND <include refid="com.sql.dbo"/>GETUSERNAME(UPOHD.GATE_CD,UPOHD.CPO_USER_ID,#{ses.langCd}) <include refid="com.sql.likeL"/> #{CPO_USER_NM} <include refid="com.sql.likeR"/>
        </if>
        <if test="START_DATE != '' and START_DATE != null">
            <choose>
                <when test="START_DATE_COMBO != '' and START_DATE_COMBO != null and START_DATE_COMBO eq 'CPO_DATE'.toString()">
                    AND UPOHD.CPO_DATE BETWEEN <include refid="com.sql.toDate"/>#{START_DATE}<include refid="com.sql.dateFrom"/> AND <include refid="com.sql.toDate"/>#{END_DATE}<include refid="com.sql.dateTo"/>
                </when>
                <otherwise>
                    AND UPODT.HOPE_DUE_DATE BETWEEN <include refid="com.sql.toDate"/>#{START_DATE}<include refid="com.sql.dateFrom"/> AND <include refid="com.sql.toDate"/>#{END_DATE}<include refid="com.sql.dateTo"/>
                </otherwise>
            </choose>
        </if>
        <if test="DOC_NUM != '' and DOC_NUM != null">
            <choose>
                <when test="DOC_NUM_COMBO != '' and DOC_NUM_COMBO != null and DOC_NUM_COMBO eq 'CPO_NO'.toString()">
                    <if test="DOC_CNT == 1">
                            AND (UPOHD.CPO_NO IN ${DOC_NUM} OR UPODT.IF_CPO_NO IN ${DOC_NUM} OR UPODT.OREFITEM IN ${DOC_NUM})
                    </if>
                    <if test="DOC_CNT == 0">
                            AND (UPOHD.CPO_NO <include refid="com.sql.likeL"/> #{CPO_NO} <include refid="com.sql.likeR"/> OR UPODT.IF_CPO_NO <include refid="com.sql.likeL"/> #{IF_CPO_NO} <include refid="com.sql.likeR"/> OR UPODT.OREFITEM <include refid="com.sql.likeL"/> #{OREFITEM} <include refid="com.sql.likeR"/>)
                    </if>
                </when>
                <when test="DOC_NUM_COMBO != '' and DOC_NUM_COMBO != null and DOC_NUM_COMBO eq 'CPO_NO_SEQ'.toString()">
					<if test="DOC_CNT == 1">
					    <choose>
				            <when test="EXCLUDE != '' and EXCLUDE != null and EXCLUDE eq '1'.toString()">
								<if test="_databaseId == 'mssql'">
			                    AND UPODT.CPO_NO<include refid="com.sql.stringMerge"/>CAST(UPODT.CPO_SEQ AS NVARCHAR(20)) NOT IN ${DOC_NUM}
								</if>
								<if test="_databaseId == 'oracle'">
			                    AND UPODT.CPO_NO<include refid="com.sql.stringMerge"/>TO_CHAR(UPODT.CPO_SEQ) NOT IN ${DOC_NUM}
								</if>
                            </when>
                            <otherwise>
								<if test="_databaseId == 'mssql'">
                                AND UPODT.CPO_NO<include refid="com.sql.stringMerge"/>CAST(UPODT.CPO_SEQ AS NVARCHAR(20)) IN ${DOC_NUM}
								</if>
								<if test="_databaseId == 'oracle'">
                                AND UPODT.CPO_NO<include refid="com.sql.stringMerge"/>TO_CHAR(UPODT.CPO_SEQ) IN ${DOC_NUM}
								</if>
                            </otherwise>
                        </choose>
					</if>
					<if test="DOC_CNT == 0">
					    <choose>
				            <when test="EXCLUDE != '' and EXCLUDE != null and EXCLUDE eq '1'.toString()">
								<if test="_databaseId == 'mssql'">
			                    AND UPODT.CPO_NO<include refid="com.sql.stringMerge"/>CAST(UPODT.CPO_SEQ AS NVARCHAR(20)) NOT <include refid="com.sql.likeL"/> #{DOC_NUM_ORG} <include refid="com.sql.likeR"/>
								</if>
								<if test="_databaseId == 'oracle'">
			                    AND UPODT.CPO_NO<include refid="com.sql.stringMerge"/>TO_CHAR(UPODT.CPO_SEQ) NOT <include refid="com.sql.likeL"/> #{DOC_NUM_ORG} <include refid="com.sql.likeR"/>
								</if>
                            </when>
                            <otherwise>
								<if test="_databaseId == 'mssql'">
                                AND ${DOC_NUM_ORG_L} UPODT.CPO_NO<include refid="com.sql.stringMerge"/>CAST(UPODT.CPO_SEQ AS NVARCHAR(20)) ${DOC_NUM_ORG_R}
								</if>
								<if test="_databaseId == 'oracle'">
                                AND UPODT.CPO_NO<include refid="com.sql.stringMerge"/>TO_CHAR(UPODT.CPO_SEQ) <include refid="com.sql.likeL"/> #{DOC_NUM_ORG} <include refid="com.sql.likeR"/>
								</if>
                            </otherwise>
                        </choose>
					</if>
				</when>
                <otherwise>
                    <if test="DOC_CNT == 1">
                            AND UPODT.REF_MNG_NO IN ${DOC_NUM}
                    </if>
                    <if test="DOC_CNT == 0">
                            AND UPODT.REF_MNG_NO <include refid="com.sql.likeL"/> #{REF_MNG_NO} <include refid="com.sql.likeR"/>
                    </if>
                </otherwise>
            </choose>
        </if>
        <choose>
          <when test='autoSearchFlag == "Y" and callType == "A"'>
            AND (((UPODT.PROGRESS_CD IN ('30', '40') OR YPODT.PROGRESS_CD IN ('30', '40'))
              AND <include refid="com.sql.toDateChar"/>(<include refid="com.sql.sysdate"/>, 'yyyyMMdd') <![CDATA[>]]> <include refid="com.sql.toDateChar"/>(<include refid="com.sql.dbo"/>fn_GetTotalWorkingDaysFromParamDate(UPOHD.CPO_DATE, <include refid="com.sql.nvl"/>(UPODT.LEAD_TIME, 0)), 'yyyyMMdd'))
            OR ((UPODT.PROGRESS_CD IN ('50', '60', '65') OR YPODT.PROGRESS_CD IN ('50', '60', '65'))
              AND <include refid="com.sql.toDateChar"/>(YIVDT.DELY_COMPLETE_DATE, 'yyyyMMdd') <![CDATA[>]]> <include refid="com.sql.toDateChar"/>(<include refid="com.sql.dbo"/>fn_GetTotalWorkingDaysFromParamDate(UPOHD.CPO_DATE, <include refid="com.sql.nvl"/>(UPODT.LEAD_TIME, 0)), 'yyyyMMdd')))
          </when>
          <otherwise>
            <if test="PROGRESS_CD != '' and PROGRESS_CD != null">
              AND (UPODT.PROGRESS_CD IN
                <foreach item="item" index="index" collection="PROGRESS_CD_LIST" open="(" separator="," close=")">
                  #{item}
                </foreach>
              OR YPODT.PROGRESS_CD IN
                <foreach item="item" index="index" collection="PROGRESS_CD_LIST" open="(" separator="," close=")">
                  #{item}
                </foreach>

                <foreach item="item" index="index" collection="PROGRESS_CD_LIST" open="" separator="" close="">
                    <if test='item == "70"'>
                        OR CASE WHEN <include refid="com.sql.nvl"/>(GRDT.CLOSING_NO, '') = '' THEN 'N' ELSE 'Y' END = 'Y'
                    </if>
                </foreach>
              )
            </if>
            <if test="PROGRESS_CD == '' or PROGRESS_CD == null">
                AND UPODT.PROGRESS_CD IN ('5100')
            </if>
          </otherwise>
        </choose>
        <if test="AM_USER_ID != '' and AM_USER_ID != null">
           AND UPODT.AM_USER_ID = #{AM_USER_ID}
        </if>
        <if test="SG_CTRL_USER_ID != '' and SG_CTRL_USER_ID != null">
            AND MTGL.SG_CTRL_USER_ID = #{SG_CTRL_USER_ID}
        </if>
        <if test="VENDOR_CD != '' and VENDOR_CD != null">
           AND UPODT.VENDOR_CD <include refid="com.sql.likeL"/> #{VENDOR_CD} <include refid="com.sql.likeR"/>
        </if>
        <if test="VENDOR_NM != '' and VENDOR_NM != null">
           AND <include refid="com.sql.dbo"/>getCompanyName(UPODT.GATE_CD,UPODT.VENDOR_CD,#{ses.langCd}) <include refid="com.sql.likeL"/> #{VENDOR_NM} <include refid="com.sql.likeR"/>
        </if>
        <if test="DELY_REJECT_CD != '' and DELY_REJECT_CD != null">
            <choose>
                <when test="DELY_REJECT_CD eq '1'.toString()">
                    AND YPODT.DELY_REJECT_CD IS NOT NULL
                    AND YPODT.PROGRESS_CD = '38'
                </when>
                <otherwise>
                    AND YPODT.DELY_REJECT_CD IS NULL
                    AND YPODT.PROGRESS_CD = '38'
                </otherwise>
            </choose>
        </if>
        <!-- 동의/유사어 적용 -->
        <if test="ITEM_CD != '' and ITEM_CD != null">
            <if test="ITEM_CNT == 1">
                    AND (UPODT.ITEM_CD IN ${ITEM_CD} OR UPODT.CUST_ITEM_CD IN ${ITEM_CD})
            </if>
            <if test="ITEM_CNT == 0">
                    AND (UPODT.ITEM_CD <include refid="com.sql.likeL"/> #{ITEM_CD} <include refid="com.sql.likeR"/> OR UPODT.CUST_ITEM_CD <include refid="com.sql.likeL"/> #{CUST_ITEM_CD} <include refid="com.sql.likeR"/>)
            </if>
        </if>
        <if test="ITEM_DESC != '' and ITEM_DESC != null">
           AND (${ITEM_DESC}
            OR  ${ITEM_SPEC}
            OR  ${ITEM_CD}
            OR  ${CUST_ITEM_CD})
        </if>
        <if test="MAKER_CD != '' and MAKER_CD != null">
           AND ${MAKER_CD}
        </if>
        <if test="MAKER_NM != '' and MAKER_NM != null">
           AND ${MAKER_NM}
        </if>

         ORDER BY   UPODT.CPO_NO,UPODT.CPO_SEQ
                  , YPODT.PO_NO, YPODT.PO_SEQ
    </select>

	<!--  [출하지시 확정,취소] 고객사주문정보 업데이트 -->
    <update id="doPoConfirmUpo" parameterType="hashMap">
       UPDATE STOUPODT SET
              PROGRESS_CD = #{PROGRESS_CD}
            , MOD_DATE 	  = <include refid="com.sql.sysdate"/>
            , MOD_USER_ID = #{ses.userId}
        WHERE GATE_CD = #{ses.gateCd}
          AND CUST_CD = #{CUST_CD}
          AND CPO_NO  = #{CPO_NO}
          AND CPO_SEQ = #{CPO_SEQ}
    </update>


    <update id="doPoConfirmYPOHD" parameterType="hashMap">
       UPDATE STOYPOHD SET
              MOD_DATE 	  = <include refid="com.sql.sysdate"/>
            , MOD_USER_ID = #{ses.userId}
        WHERE GATE_CD = #{ses.gateCd}
          AND CUST_CD = #{CUST_CD}
          AND CPO_NO  = #{CPO_NO}
     </update>

<!--  [출하지시 확정,취소]  발주정보상세 업데이트 -->
    <update id="doPoConfirmYPODT" parameterType="hashMap">
       UPDATE STOYPODT SET
              PROGRESS_CD = #{PROGRESS_CD}
            , MOD_DATE 	  = <include refid="com.sql.sysdate"/>
            , MOD_USER_ID = #{ses.userId}
            , PO_DATE 	  = CASE WHEN #{PROGRESS_CD} = '6100' THEN SYSDATE ELSE NULL END
        WHERE GATE_CD = #{ses.gateCd}
          AND CUST_CD = #{CUST_CD}
          AND CPO_NO  = #{CPO_NO}
          AND CPO_SEQ = #{CPO_SEQ}
     </update>

	<!--[출하지시 취소]운영사 발주정보상세 삭제 -->
	<update id="doDelYPO" parameterType="hashMap">
        DELETE STOYPODT
        WHERE GATE_CD = #{ses.gateCd}
          AND CUST_CD = #{CUST_CD}
          AND CPO_NO  = #{CPO_NO}
          AND CPO_SEQ = #{CPO_SEQ}
    </update>
<!-- [출하지시 수정]  발주정보상세 업데이트-->
    <update id="YPODTChange" parameterType="hashMap">
		UPDATE STOYPODT SET
			   PREV_VENDOR_CD      = #{VENDOR_CD}
			  ,PREV_CPO_UNIT_PRICE = #{CPO_UNIT_PRICE}
			  ,PREV_CPO_QTY        = #{CPO_QTY}
			  ,PREV_PO_UNIT_PRICE  = #{PO_UNIT_PRICE}
			  ,PREV_DELY_NM        = #{DELY_NM}
			  ,PREV_CSDM_SEQ       = #{CSDM_SEQ}
			  ,PREV_DELY_ZIP_CD    = #{DELY_ZIP_CD}
			  ,PREV_DELY_ADDR_1    = #{DELY_ADDR_1}
			  ,PREV_DELY_ADDR_2    = #{DELY_ADDR_2}
			  ,PREV_DEAL_CD        = #{DEAL_CD}
			  ,SIGN_STATUS         = #{SIGN_STATUS}
			  ,APP_DOC_NO          = #{APP_DOC_NO}
			  ,APP_DOC_CNT         = #{APP_DOC_CNT}
			  ,CHANGE_REMARK       = #{PO_CHANGE_REASON}
		WHERE GATE_CD = #{ses.gateCd}
		  AND PO_NO   = #{PO_NO}
		  AND PO_SEQ  = #{PO_SEQ}
    </update>

<!--  [출하지시목록 담당자변경] -->
    <update id="doTransferAmUserYPODT" parameterType="hashMap">

       UPDATE STOYPODT SET
              AM_USER_ID = #{AM_USER_ID}
             ,AM_USER_CHANGE_RMK = #{AM_USER_CHANGE_RMK}
             ,MOD_DATE = <include refid="com.sql.sysdate"/>
             ,MOD_USER_ID = #{ses.userId}
        WHERE GATE_CD = #{ses.gateCd}
          AND CUST_CD = #{CUST_CD}
          AND CPO_NO  = #{CPO_NO}
          AND CPO_SEQ = #{CPO_SEQ}
    </update>

     <update id="doTransferAmUserUpo" parameterType="hashMap">

       UPDATE STOUPODT SET
              AM_USER_ID = #{AM_USER_ID}
             ,AM_USER_CHANGE_RMK = #{AM_USER_CHANGE_RMK}
             ,MOD_DATE = <include refid="com.sql.sysdate"/>
             ,MOD_USER_ID = #{ses.userId}
        WHERE GATE_CD = #{ses.gateCd}
          AND CUST_CD = #{CUST_CD}
          AND CPO_NO  = #{CPO_NO}
          AND CPO_SEQ = #{CPO_SEQ}
    </update>

<!-- [출하지시 결제상세보기] -->
    <select id="PO0311_doSearch" parameterType="hashMap" resultType="hashMap">
  		 SELECT
			<include refid="com.sql.dbo"/>GETVENDORNAME(A.GATE_CD,
			  CASE WHEN SIGN_STATUS = 'E' THEN PREV_VENDOR_CD     ELSE VENDOR_CD      END
			, #{ses.langCd}) AS VENDOR_NM
			,<include refid="com.sql.dbo"/>GETVENDORNAME(A.GATE_CD,
			  CASE WHEN SIGN_STATUS = 'E' THEN VENDOR_CD     ELSE PREV_VENDOR_CD      END
			, #{ses.langCd}) AS PREV_VENDOR_NM

		    ,CASE WHEN SIGN_STATUS = 'E' THEN PREV_CPO_UNIT_PRICE ELSE CPO_UNIT_PRICE      END CPO_UNIT_PRICE
		    ,CASE WHEN SIGN_STATUS = 'E' THEN CPO_UNIT_PRICE      ELSE PREV_CPO_UNIT_PRICE END PREV_CPO_UNIT_PRICE

		    ,CASE WHEN SIGN_STATUS = 'E' THEN PREV_CPO_QTY     	ELSE CPO_QTY      		 END CPO_QTY
		    ,CASE WHEN SIGN_STATUS = 'E' THEN CPO_QTY          	ELSE PREV_CPO_QTY 		 END PREV_CPO_QTY

			,CASE WHEN SIGN_STATUS = 'E' THEN PREV_PO_UNIT_PRICE  ELSE PO_UNIT_PRICE       END PO_UNIT_PRICE
			,CASE WHEN SIGN_STATUS = 'E' THEN PO_UNIT_PRICE       ELSE PREV_PO_UNIT_PRICE  END PREV_PO_UNIT_PRICE

			,CASE WHEN SIGN_STATUS = 'E' THEN PREV_DELY_NM     	ELSE DELY_NM      		 END DELY_NM
			,CASE WHEN SIGN_STATUS = 'E' THEN DELY_NM          	ELSE PREV_DELY_NM 		 END PREV_DELY_NM

			,CASE WHEN SIGN_STATUS = 'E' THEN PREV_CSDM_SEQ     	ELSE CSDM_SEQ      		 END CSDM_SEQ
			,CASE WHEN SIGN_STATUS = 'E' THEN CSDM_SEQ          	ELSE PREV_CSDM_SEQ 	   	 END PREV_CSDM_SEQ

			,CASE WHEN SIGN_STATUS = 'E' THEN PREV_DELY_ZIP_CD    ELSE DELY_ZIP_CD      	 END DELY_ZIP_CD
			,CASE WHEN SIGN_STATUS = 'E' THEN DELY_ZIP_CD         ELSE PREV_DELY_ZIP_CD 	 END PREV_DELY_ZIP_CD

			,CASE WHEN SIGN_STATUS = 'E' THEN PREV_DELY_ADDR_1    ELSE DELY_ADDR_1      	 END DELY_ADDR_1
			,CASE WHEN SIGN_STATUS = 'E' THEN DELY_ADDR_1         ELSE PREV_DELY_ADDR_1 	 END PREV_DELY_ADDR_1

			,CASE WHEN SIGN_STATUS = 'E' THEN PREV_DELY_ADDR_2    ELSE DELY_ADDR_2      	 END DELY_ADDR_2
			,CASE WHEN SIGN_STATUS = 'E' THEN DELY_ADDR_2         ELSE PREV_DELY_ADDR_2 	 END PREV_DELY_ADDR_2

			,CASE WHEN SIGN_STATUS = 'E' THEN PREV_DEAL_CD     	ELSE DEAL_CD      		 END DEAL_CD
			,CASE WHEN SIGN_STATUS = 'E' THEN DEAL_CD          	ELSE PREV_DEAL_CD 		 END PREV_DEAL_CD

	        ,PREV_VENDOR_CD VENDOR_CD
	        ,PO_NO
	        ,PO_SEQ
	        ,CUST_CD
	        ,CPO_NO
	        ,CPO_SEQ
	        ,ITEM_CD
	        ,ITEM_DESC

		FROM STOYPODT A
		WHERE GATE_CD     = #{ses.gateCd}
		  AND APP_DOC_NO  = #{APP_DOC_NUM}
		  AND APP_DOC_CNT = #{APP_DOC_CNT}
	</select>

	<!-- 주문진행상태[PROGRESS_CD] 체크 -->
	<select id="checkProgressCd" parameterType="hashMap" resultType="java.lang.String">

        SELECT UPODT.PROGRESS_CD
          FROM STOUPODT UPODT
         WHERE UPODT.GATE_CD  = #{ses.gateCd}
           AND UPODT.CUST_CD  = #{CUST_CD}
           AND UPODT.CPO_NO   = #{CPO_NO}
           AND UPODT.CPO_SEQ  = #{CPO_SEQ}
           AND UPODT.DEL_FLAG = '0'
    </select>


	<update id="yPoSignApply" parameterType="hashMap">
	UPDATE STOYPODT SET
           -- 변경완료 되면 체인지한다 VIEW 용
           PREV_VENDOR_CD      = VENDOR_CD
         , PREV_CPO_UNIT_PRICE = CPO_UNIT_PRICE
         , PREV_CPO_QTY        = CPO_QTY
         , PREV_PO_UNIT_PRICE  = PO_UNIT_PRICE
         , PREV_DELY_NM        = DELY_NM
         , PREV_CSDM_SEQ       = CSDM_SEQ
         , PREV_DELY_ZIP_CD    = DELY_ZIP_CD
         , PREV_DELY_ADDR_1    = DELY_ADDR_1
         , PREV_DELY_ADDR_2    = DELY_ADDR_2
         , PREV_DEAL_CD        = DEAL_CD
           -- 끝
         , VENDOR_CD      = #{VENDOR_CD}
         , CPO_UNIT_PRICE = #{CPO_UNIT_PRICE}
         , CPO_QTY        = #{CPO_QTY}
		 , CPO_ITEM_AMT   = #{CPO_UNIT_PRICE} * #{CPO_QTY}
         , PO_UNIT_PRICE  = #{PO_UNIT_PRICE}
		 , PO_ITEM_AMT    = #{PO_UNIT_PRICE} * #{CPO_QTY}
         , DELY_NM        = #{DELY_NM}
         , CSDM_SEQ       = #{CSDM_SEQ}
         , DELY_ZIP_CD    = #{DELY_ZIP_CD}
         , DELY_ADDR_1    = #{DELY_ADDR_1}
         , DELY_ADDR_2    = #{DELY_ADDR_2}
         , DEAL_CD        = #{DEAL_CD}
      WHERE GATE_CD = #{ses.gateCd}
        AND PO_NO   = #{PO_NO}
        AND PO_SEQ  = #{PO_SEQ}
    </update>

     <update id="uPoSignApply" parameterType="hashMap">
	UPDATE STOUPODT SET
           VENDOR_CD      	  = #{VENDOR_CD}
         , CPO_UNIT_PRICE 	  = #{CPO_UNIT_PRICE}
         , CPO_QTY        	  = #{CPO_QTY}
		 , CPO_ITEM_AMT   	  = #{CPO_UNIT_PRICE} * #{CPO_QTY}
		 , TEMP_PO_UNIT_PRICE = #{PO_UNIT_PRICE}     --매입단가
		 , TEMP_PO_ITEM_AMT   = #{PO_UNIT_PRICE} * #{CPO_QTY} --매입금액
         , DELY_NM        	  = #{DELY_NM}
         , CSDM_SEQ       	  = #{CSDM_SEQ}
         , DELY_ZIP_CD    	  = #{DELY_ZIP_CD}
         , DELY_ADDR_1    	  = #{DELY_ADDR_1}
         , DELY_ADDR_2    	  = #{DELY_ADDR_2}
         , DEAL_CD        	  = #{DEAL_CD}
      WHERE GATE_CD = #{ses.gateCd}
	  	AND CUST_CD = #{CUST_CD}
      	AND CPO_NO  = #{CPO_NO}
	  	AND CPO_SEQ = #{CPO_SEQ}
    </update>

    <update id="delYPODT" parameterType="hashMap">
		UPDATE STOYPODT SET
			  DEL_FLAG = '1'
		WHERE GATE_CD = #{ses.gateCd}
		  AND PO_NO   = #{PO_NO}
		  AND PO_SEQ  = #{PO_SEQ}
    </update>


    <update id="YPODTSignUpdate" parameterType="hashMap">
		UPDATE STOYPODT SET
			 SIGN_STATUS  = #{SIGN_STATUS}
			,SIGN_DATE    = CASE WHEN #{SIGN_STATUS} = 'E' THEN SYSDATE ELSE null END
			,SIGN_USER_ID = CASE WHEN #{SIGN_STATUS} = 'E' THEN #{ses.userId} ELSE null END
		WHERE GATE_CD     = #{ses.gateCd}
		  AND APP_DOC_NO  = #{APP_DOC_NUM}
		  AND APP_DOC_CNT = #{APP_DOC_CNT}
    </update>


    <update id="moveDohdToPohd" parameterType="hashMap">
		INSERT INTO STOYPOHD (
	   GATE_CD
         ,PO_NO
         ,REG_DATE
         ,REG_USER_ID
         ,MOD_DATE
         ,MOD_USER_ID
         ,DEL_FLAG
         ,CUST_CD
         ,PLANT_CD
         ,PR_TYPE
         ,VENDOR_CD
         ,CPO_DATE
         ,CPO_USER_ID
         ,CPO_USER_DIVISION_CD
         ,CPO_USER_DEPT_CD
         ,CPO_USER_PART_CD
         ,CPO_USER_TEL_NUM
         ,CPO_USER_CELL_NUM
         ,SIGN_STATUS
         ,SIGN_DATE
         ,APP_DOC_NO
         ,APP_DOC_CNT
         ,SIGN_USER_ID
         ,BUDGET_FLAG
         ,APPROVE_FLAG
         ,IF_CPO_NO
         ,CPO_NO
         ,ERP_IF_ID
         ,ERP_IF_SEND_FLAG
         ,PO_KEY_VALUE
         ,SHIPPER_TYPE
      )SELECT
         GATE_CD
         ,#{nPO_NO}
         ,REG_DATE
         ,REG_USER_ID
         ,MOD_DATE
         ,MOD_USER_ID
         ,'0' DEL_FLAG
         ,CUST_CD
         ,PLANT_CD
         ,PR_TYPE
         ,VENDOR_CD
         ,CPO_DATE
         ,CPO_USER_ID
         ,CPO_USER_DIVISION_CD
         ,CPO_USER_DEPT_CD
         ,CPO_USER_PART_CD
         ,CPO_USER_TEL_NUM
         ,CPO_USER_CELL_NUM
         ,SIGN_STATUS
         ,SIGN_DATE
         ,APP_DOC_NO
         ,APP_DOC_CNT
         ,SIGN_USER_ID
         ,BUDGET_FLAG
         ,APPROVE_FLAG
         ,IF_CPO_NO
         ,CPO_NO
         ,ERP_IF_ID
         ,ERP_IF_SEND_FLAG
         ,PO_KEY_VALUE
         ,SHIPPER_TYPE
		FROM STOUDOHD
		WHERE GATE_CD = #{ses.gateCd}
		  AND PO_NO = #{PO_NO}
    </update>


    <update id="moveDodtToPodt" parameterType="hashMap">
		INSERT INTO  STOYPODT  (
		    GATE_CD
            ,PO_NO
            ,PO_SEQ
            ,REG_DATE
            ,REG_USER_ID
            ,MOD_DATE
            ,MOD_USER_ID
            ,DEL_FLAG
            ,CUST_CD
            ,PLANT_CD
            ,PROGRESS_CD
            ,PR_TYPE
            ,CUST_ITEM_CD
            ,ITEM_CD
            ,ITEM_DESC
            ,ITEM_SPEC
            ,MAKER_CD
            ,MAKER_NM
            ,MAKER_PART_NO
            ,BRAND_CD
            ,BRAND_NM
            ,ORIGIN_CD
            ,UNIT_CD
            ,VENDOR_CD
            ,MOQ_QTY
            ,RV_QTY
            ,CPO_QTY
            ,CUR
            ,CPO_UNIT_PRICE
            ,CPO_ITEM_AMT
            ,BD_DEPT_CD
            ,ACCOUNT_CD
            ,LEAD_TIME
            ,HOPE_DUE_DATE
            ,RECIPIENT_NM
            ,RECIPIENT_DEPT_NM
            ,RECIPIENT_TEL_NUM
            ,RECIPIENT_CELL_NUM
            ,RECIPIENT_FAX_NUM
            ,RECIPIENT_EMAIL
            ,REQ_TEXT
            ,DELY_ZIP_CD
            ,DELY_ADDR_1
            ,DELY_ADDR_2
            ,ATTACH_FILE_NO
            ,GR_COMPLETE_FLAG
            ,INV_QTY
            ,GR_QTY
            ,DEAL_CD
            ,LOG_CD
            ,WH_CD
            ,TC_FLAG
            ,SG_CTRL_USER_ID
            ,AM_USER_ID
            ,DOC_TYPE
            ,TAX_CD
            ,SHIPPER_TYPE
            ,PRIOR_GR_FLAG
            ,DELY_REJECT_CD
            ,DELY_REJECT_REASON
            ,DELY_REJECT_DATE
            ,PO_UNIT_PRICE
            ,PO_ITEM_AMT
            ,CPO_NO
            ,CPO_SEQ
            ,PO_CHANGE_TYPE
            ,PO_CHANGE_REASON
            ,RETURN_REMARK
            ,FORCE_CLOSE_DATE
            ,FORCE_CLOSE_USER_ID
            ,FORCE_CLOSE_REASON
            ,APPLY_COM
            ,CONT_NO
            ,CONT_SEQ
            ,APPLY_PLANT
            ,AUTO_PO_FLAG
            ,IF_CPO_NO
            ,IF_CPO_SEQ
            ,ERP_IF_ID
            ,ERP_IF_SEND_FLAG
            ,REF_MNG_NO
            ,PREV_VENDOR_CD
            ,PREV_CPO_QTY
            ,PREV_CPO_UNIT_PRICE
            ,PREV_PO_UNIT_PRICE
            ,SIGN_STATUS
            ,SIGN_DATE
            ,APP_DOC_NO
            ,APP_DOC_CNT
            ,SIGN_USER_ID
            ,CHANGE_REMARK
            ,STD_UNIT_PRICE
            ,STD_ITEM_AMT
            ,DELY_TYPE
            ,DELY_NM
            ,CSDM_SEQ
            ,CUBL_SQ
            ,ACC_CD
            ,CUBL_NM
            ,CUBL_ZIP_CD
            ,CUBL_ADDR1
            ,CUBL_ADDR2
            ,CUBL_COMPANY_NM
            ,CUBL_IRS_NUM
            ,CUBL_CEO_USER_NM
            ,CUBL_BUSINESS_TYPE
            ,CUBL_INDUSTRY_TYPE
            ,CUBL_IRS_SUB_NUM
            ,CUBL_IRS_SUB_ADDR
            ,CUBL_BANK_NM
            ,CUBL_ACCOUNT_NUM
            ,CUBL_ACCOUNT_NM
            ,CUBL_USER_NM
            ,CUBL_USER_TEL_NUM
            ,CUBL_USER_FAX_NUM
            ,CUBL_USER_CELL_NUM
            ,CUBL_USER_EMAIL
            ,CUBL_IRS_SUB_ZIP_CD
            ,PLANT_NM
            ,COST_CENTER_CD
            ,COST_CENTER_NM_KOR
            ,NAP_FLAG
            ,DELY_PLACE
            ,AM_USER_CHANGE_RMK
            ,OREFITEM
            ,AGENT_MEMO
            ,REQ_USER_NM
            ,REQ_USER_TEL_NUM
            ,VENDOR_ITEM_CD
      )
      SELECT
            GATE_CD
            ,#{nPO_NO}
            ,PO_SEQ
            ,REG_DATE
            ,REG_USER_ID
            ,MOD_DATE
            ,MOD_USER_ID
            ,0 as DEL_FLAG
            ,CUST_CD
            ,PLANT_CD
            ,PROGRESS_CD
            ,PR_TYPE
            ,CUST_ITEM_CD
            ,ITEM_CD
            ,ITEM_DESC
            ,ITEM_SPEC
            ,MAKER_CD
            ,MAKER_NM
            ,MAKER_PART_NO
            ,BRAND_CD
            ,BRAND_NM
            ,ORIGIN_CD
            ,UNIT_CD
            ,VENDOR_CD
            ,MOQ_QTY
            ,RV_QTY
            ,CPO_QTY
            ,CUR
            ,CPO_UNIT_PRICE
            ,CPO_ITEM_AMT
            ,BD_DEPT_CD
            ,ACCOUNT_CD
            ,LEAD_TIME
            ,HOPE_DUE_DATE
            ,RECIPIENT_NM
            ,RECIPIENT_DEPT_NM
            ,RECIPIENT_TEL_NUM
            ,RECIPIENT_CELL_NUM
            ,RECIPIENT_FAX_NUM
            ,RECIPIENT_EMAIL
            ,REQ_TEXT
            ,DELY_ZIP_CD
            ,DELY_ADDR_1
            ,DELY_ADDR_2
            ,ATTACH_FILE_NO
            ,GR_COMPLETE_FLAG
            ,INV_QTY
            ,GR_QTY
            ,DEAL_CD
            ,LOG_CD
            ,WH_CD
            ,TC_FLAG
            ,SG_CTRL_USER_ID
            ,AM_USER_ID
            ,DOC_TYPE
            ,TAX_CD
            ,SHIPPER_TYPE
            ,PRIOR_GR_FLAG
            ,DELY_REJECT_CD
            ,DELY_REJECT_REASON
            ,DELY_REJECT_DATE
            ,PO_UNIT_PRICE
            ,PO_ITEM_AMT
            ,CPO_NO
            ,CPO_SEQ
            ,PO_CHANGE_TYPE
            ,PO_CHANGE_REASON
            ,RETURN_REMARK
            ,FORCE_CLOSE_DATE
            ,FORCE_CLOSE_USER_ID
            ,FORCE_CLOSE_REASON
            ,APPLY_COM
            ,CONT_NO
            ,CONT_SEQ
            ,APPLY_PLANT
            ,AUTO_PO_FLAG
            ,IF_CPO_NO
            ,IF_CPO_SEQ
            ,ERP_IF_ID
            ,ERP_IF_SEND_FLAG
            ,REF_MNG_NO
            ,PREV_VENDOR_CD
            ,PREV_CPO_QTY
            ,PREV_CPO_UNIT_PRICE
            ,PREV_PO_UNIT_PRICE
            ,SIGN_STATUS
            ,SIGN_DATE
            ,APP_DOC_NO
            ,APP_DOC_CNT
            ,SIGN_USER_ID
            ,CHANGE_REMARK
            ,STD_UNIT_PRICE
            ,STD_ITEM_AMT
            ,DELY_TYPE
            ,DELY_NM
            ,CSDM_SEQ
            ,CUBL_SQ
            ,ACC_CD
            ,CUBL_NM
            ,CUBL_ZIP_CD
            ,CUBL_ADDR1
            ,CUBL_ADDR2
            ,CUBL_COMPANY_NM
            ,CUBL_IRS_NUM
            ,CUBL_CEO_USER_NM
            ,CUBL_BUSINESS_TYPE
            ,CUBL_INDUSTRY_TYPE
            ,CUBL_IRS_SUB_NUM
            ,CUBL_IRS_SUB_ADDR
            ,CUBL_BANK_NM
            ,CUBL_ACCOUNT_NUM
            ,CUBL_ACCOUNT_NM
            ,CUBL_USER_NM
            ,CUBL_USER_TEL_NUM
            ,CUBL_USER_FAX_NUM
            ,CUBL_USER_CELL_NUM
            ,CUBL_USER_EMAIL
            ,CUBL_IRS_SUB_ZIP_CD
            ,PLANT_NM
            ,COST_CENTER_CD
            ,COST_CENTER_NM_KOR
            ,NAP_FLAG
            ,DELY_PLACE
            ,AM_USER_CHANGE_RMK
            ,OREFITEM
            ,AGENT_MEMO
            ,REQ_USER_NM
            ,REQ_USER_TEL_NUM
            ,VENDOR_ITEM_CD
		FROM STOUDODT
		WHERE GATE_CD = #{ses.gateCd}
		  AND PO_NO = #{PO_NO}
    </update>
</mapper>