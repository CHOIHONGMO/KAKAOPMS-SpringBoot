<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.st_ones.eversrm.master.item.DH0630_Mapper">

    <select id="getSignStatus" resultType="string">
        SELECT SIGN_STATUS
        FROM STOCCNHD
        WHERE GATE_CD = #{ses.gateCd}
        AND EXEC_NUM = #{EXEC_NUM}
        AND DEL_FLAG = '0'
    </select>

	<select id="DH0630_doSearchINFO" parameterType="hashmap" resultType="java.util.Map">
		SELECT INFO.PLANT_CD
			 , INFO.ITEM_CD
			 , INFO.ITEM_DESC
			 , INFO.ITEM_SPEC
			 , INFO.UNIT_CD
			 , INFO.VENDOR_CD
			 , <include refid="com.sql.dbo"/>GETVENDORNAME(INFO.GATE_CD,INFO.VENDOR_CD,#{ses.langCd}) AS VENDOR_NM
			 , INFO.CUR
			 , <include refid="com.sql.dbo"/>GETPRICEBYCUR(INFO.CUR, INFO.UNIT_PRC) AS OLD_UNIT_PRC
			 , <include refid="com.sql.dbo"/>GETGMTDATE(INFO.VALID_FROM_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS BEFORE_VALID_FROM_DATE
             , <include refid="com.sql.dbo"/>GETGMTDATE(INFO.VALID_TO_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS BEFORE_VALID_TO_DATE
             , INFO.TAX_CD
             , INFO.CTRL_CD
             , <include refid="com.sql.dbo"/>GETCTRLNAME(INFO.GATE_CD, INFO.BUYER_CD, INFO.CTRL_CD, #{ses.langCd}) AS CTRL_NM
             , INFO.PUR_ORG_CD
             , <include refid="com.sql.dbo"/>GETPURORGNAME(INFO.GATE_CD, INFO.BUYER_CD, INFO.PUR_ORG_CD, #{ses.langCd}) AS PUR_ORG_NM
             , #{BUYER_REQ_CD} AS BUYER_REQ_CD
		  FROM STOCINFO INFO JOIN STOCMTGL MTGL
		  					   ON(INFO.GATE_CD = MTGL.GATE_CD
		   					  AND INFO.ITEM_CD = MTGL.ITEM_CD
		   					  AND MTGL.PROGRESS_CD = 'E'
		   					  AND MTGL.DEL_FLAG = '0')
		 WHERE INFO.GATE_CD = #{ses.gateCd}
		   AND INFO.ITEM_CD = #{ITEM_CD}
		   AND INFO.VENDOR_CD = #{VENDOR_CD}
		   AND INFO.VALID_FROM_DATE = #{VALID_FROM_DATE}
		   AND INFO.BUYER_CD = #{BUYER_CD}
		   AND INFO.BUYER_REQ_CD = #{BUYER_REQ_CD}
		   AND INFO.PUR_ORG_CD = #{PUR_ORG_CD}
		   AND INFO.PLANT_CD = #{PLANT_CD}
		   AND INFO.DEL_FLAG = '0'
	</select>

	<select id="DH0630_doSearchForm" parameterType="hashmap" resultType="java.util.Map">
		SELECT CNHD.EXEC_NUM
			 , CNHD.PURCHASE_TYPE
			 , CNHD.EXEC_SUBJECT
			 , <include refid="com.sql.dbo"/>GETGMTDATE(CNHD.EXEC_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS EXEC_DATE
			 , CNHD.CTRL_USER_ID
			 , <include refid="com.sql.dbo"/>GETUSERNAME(CNHD.GATE_CD, CNHD.CTRL_USER_ID, #{ses.langCd}) AS CTRL_USER_NM
			 , RMK_TEXT_NUM
			 , ATT_FILE_NUM
			 , BUYER_CD
			 , PUR_ORG_CD
			 , APP_DOC_NUM
			 , APP_DOC_CNT
			 , SIGN_STATUS
			 , EXEC_TYPE
		  FROM STOCCNHD CNHD
		 WHERE CNHD.GATE_CD = #{ses.gateCd}
		   AND CNHD.DEL_FLAG = '0'

        <if test="EXEC_NUM !='' and EXEC_NUM !=null">
			AND CNHD.EXEC_NUM = #{EXEC_NUM}
		</if>
        <if test="appDocNum !='' and appDocNum !=null">
			AND CNHD.APP_DOC_NUM = #{appDocNum}
		</if>
        <if test="appDocCnt !='' and appDocCnt !=null">
			AND CNHD.APP_DOC_CNT = #{appDocCnt}
		</if>



	</select>

	<select id="DH0630_doSearchCNDT" parameterType="hashmap" resultType="java.util.Map">
		SELECT CNDT.EXEC_NUM
			 , CNDT.EXEC_SQ
			 , CNDT.ITEM_CD
			 , CNDT.ITEM_DESC
			 , CNDT.ITEM_SPEC
			 , CNDT.UNIT_CD
			 , CNDT.PLANT_CD
			 , CNDT.VENDOR_CD
			 , <include refid="com.sql.dbo"/>GETVENDORNAME(CNDT.GATE_CD, CNDT.VENDOR_CD, #{ses.langCd}) AS VENDOR_NM
			 , CNVD.CUR
			 , <include refid="com.sql.dbo"/>GETPRICEBYCUR(CNVD.CUR, CNDT.PRE_UNIT_PRC) AS OLD_UNIT_PRC
			 , <include refid="com.sql.dbo"/>GETGMTDATE(CNDT.PRE_VALID_FROM_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS BEFORE_VALID_FROM_DATE
			 , <include refid="com.sql.dbo"/>GETGMTDATE(CNDT.PRE_VALID_TO_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS BEFORE_VALID_TO_DATE
			 , <include refid="com.sql.dbo"/>GETPRICEBYCUR(CNVD.CUR, CNDT.UNIT_PRC) AS UNIT_PRC
			 , <include refid="com.sql.dbo"/>GETGMTDATE(CNDT.VALID_FROM_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS VALID_FROM_DATE
			 , <include refid="com.sql.dbo"/>GETGMTDATE(CNDT.VALID_TO_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS VALID_TO_DATE
			 , MTGL.MAT_GROUP
			 , CNDT.TAX_CD
			 , CNDT.CTRL_CD
			 , <include refid="com.sql.dbo"/>GETCTRLNAME(CNDT.GATE_CD, CNDT.BUYER_REQ_CD, CNDT.CTRL_CD, #{ses.langCd}) AS CTRL_NM
			 , CNDT.PUR_ORG_CD
			 , <include refid="com.sql.dbo"/>GETPURORGNAME(CNDT.GATE_CD, CNDT.BUYER_REQ_CD, CNDT.PUR_ORG_CD, #{ses.langCd}) AS PUR_ORG_NM
			 , CNVD.RMKS
			 , CNDT.BUYER_REQ_CD
		  FROM STOCCNDT CNDT
		  JOIN STOCCNVD CNVD
			ON(CNDT.GATE_CD = CNVD.GATE_CD
		   AND CNDT.EXEC_NUM = CNVD.EXEC_NUM
		   AND CNDT.VENDOR_CD = CNVD.VENDOR_CD
		   AND CNVD.DEL_FLAG = '0')
		  JOIN STOCMTGL MTGL
			ON(CNDT.GATE_CD = MTGL.GATE_CD
		   AND CNDT.ITEM_CD = MTGL.ITEM_CD
		   AND MTGL.PROGRESS_CD = 'E'
		   AND MTGL.DEL_FLAG = '0')
		  JOIN STOCCNHD CNHD
			ON(CNDT.GATE_CD = CNHD.GATE_CD
		   AND CNDT.EXEC_NUM = CNHD.EXEC_NUM
		   AND CNHD.DEL_FLAG = '0')
		 WHERE CNDT.GATE_CD = #{ses.gateCd}
		   AND CNDT.EXEC_NUM = #{EXEC_NUM}
		   AND CNDT.DEL_FLAG = '0'
	</select>

	<select id="searchInfoList" parameterType="hashmap" resultType="java.util.Map">
		SELECT A.*
		  , CASE WHEN ORIGIN_VALID_TO_DATE IS NULL THEN '0'
				 ELSE
				      /*CASE WHEN TO_CHAR(ORIGIN_VALID_TO_DATE, <include refid="com.sql.dateFormat"/>) > TO_CHAR(VALID_FROM_DATE, <include refid="com.sql.dateFormat"/>) THEN '1'*/
				      CASE WHEN ORIGIN_VALID_TO_DATE > VALID_FROM_DATE THEN '1'
		        	 	   ELSE '0'
		              END
			END VALID_FLAG
		FROM
		(
			SELECT CNDT.VENDOR_CD, CNDT.EXEC_NUM, CNDT.EXEC_SQ
				, CNDT.VALID_FROM_DATE, CNDT.VALID_FROM_DATE -1 AS PRE_VALID_FROM_DATE
				, CNDT.ITEM_CD, CNHD.BUYER_CD, CNDT.BUYER_REQ_CD, CNDT.PUR_ORG_CD
				, (SELECT MAX(VALID_TO_DATE) FROM STOCINFO
				    WHERE GATE_CD = CNDT.GATE_CD
					  AND BUYER_CD = CNHD.BUYER_CD
					  AND BUYER_REQ_CD = CNDT.BUYER_REQ_CD
                      AND PLANT_CD = CNDT.PLANT_CD
					  AND ITEM_CD = CNDT.ITEM_CD
					  AND VENDOR_CD = CNDT.VENDOR_CD
					  AND PUR_ORG_CD = CNDT.PUR_ORG_CD ) AS ORIGIN_VALID_TO_DATE
				, (SELECT COUNT(*) FROM STOCINFO
                    WHERE GATE_CD = CNDT.GATE_CD
                      AND BUYER_CD = CNHD.BUYER_CD
                      AND BUYER_REQ_CD = CNDT.BUYER_REQ_CD
                      AND PLANT_CD = CNDT.PLANT_CD
                      AND ITEM_CD = CNDT.ITEM_CD
                      AND VENDOR_CD = CNDT.VENDOR_CD
                      AND PUR_ORG_CD = CNDT.PUR_ORG_CD
                      AND VALID_FROM_DATE = CNDT.VALID_FROM_DATE ) AS INFO_EXISTS_CNT
				,CNDT.PLANT_CD
				,CNDT.PURCHASE_TYPE
			FROM STOCCNHD CNHD
			JOIN STOCCNDT CNDT ON (	CNDT.GATE_CD = CNHD.GATE_CD
			                   AND CNDT.EXEC_NUM = CNHD.EXEC_NUM
			                   AND CNDT.DEL_FLAG = '0')
			LEFT JOIN STOCMTGL MTGL ON (CNDT.GATE_CD = MTGL.GATE_CD
			                   AND CNDT.ITEM_CD = MTGL.ITEM_CD
			                   AND MTGL.DEL_FLAG = '0'
			                   AND MTGL.ORDER_HALT_FLAG = '0')
			WHERE CNHD.GATE_CD = #{ses.gateCd}
			  AND CNHD.DEL_FLAG = '0'
			  AND CNHD.APP_DOC_NUM = #{APP_DOC_NUM}
			  AND CNHD.APP_DOC_CNT = '0'
		) A
	</select>

	<select id="searchInfoListBack" parameterType="hashmap" resultType="java.util.Map">
		SELECT A.*
		  , CASE WHEN ORIGIN_VALID_TO_DATE IS NULL THEN '0'
				 ELSE
				      CASE WHEN ORIGIN_VALID_TO_DATE > VALID_FROM_DATE THEN '1'
		        	 	   ELSE '0'
		              END
			END VALID_FLAG
		FROM
		(
			SELECT CNDT.VENDOR_CD, CNDT.EXEC_NUM, CNDT.EXEC_SQ
				, CNDT.VALID_FROM_DATE, CNDT.VALID_FROM_DATE -1 AS PRE_VALID_FROM_DATE
				, CNDT.ITEM_CD, CNHD.BUYER_CD, CNDT.BUYER_REQ_CD, CNDT.PUR_ORG_CD
				, (SELECT MAX(VALID_TO_DATE) FROM STOCINFO
				    WHERE GATE_CD = CNDT.GATE_CD
					  AND BUYER_CD = CNHD.BUYER_CD
					  AND BUYER_REQ_CD = CNDT.BUYER_REQ_CD
                      AND PLANT_CD = CNDT.PLANT_CD
					  AND ITEM_CD = CNDT.ITEM_CD
					  AND VENDOR_CD = CNDT.VENDOR_CD
					  AND PUR_ORG_CD = CNDT.PUR_ORG_CD ) AS ORIGIN_VALID_TO_DATE
				, (SELECT COUNT(*) FROM STOCINFO
                    WHERE GATE_CD = CNDT.GATE_CD
                      AND BUYER_CD = CNHD.BUYER_CD
                      AND BUYER_REQ_CD = CNDT.BUYER_REQ_CD
                      AND PLANT_CD = CNDT.PLANT_CD
                      AND ITEM_CD = CNDT.ITEM_CD
                      AND VENDOR_CD = CNDT.VENDOR_CD
                      AND PUR_ORG_CD = CNDT.PUR_ORG_CD
                      AND VALID_FROM_DATE = CNDT.VALID_FROM_DATE ) AS INFO_EXISTS_CNT
				,CNDT.PLANT_CD
				,CNDT.PURCHASE_TYPE
			FROM STOCCNHD CNHD
			JOIN STOCCNDT CNDT ON (	CNDT.GATE_CD = CNHD.GATE_CD
			                   AND CNDT.EXEC_NUM = CNHD.EXEC_NUM
			                   AND CNDT.DEL_FLAG = '0')
			LEFT JOIN STOCMTGL MTGL ON (CNDT.GATE_CD = MTGL.GATE_CD
			                   AND CNDT.ITEM_CD = MTGL.ITEM_CD
			                   AND MTGL.DEL_FLAG = '0'
			                   AND MTGL.ORDER_HALT_FLAG = '0')
			WHERE CNHD.GATE_CD = #{ses.gateCd}
			  AND CNHD.DEL_FLAG = '0'
			  AND CNHD.EXEC_NUM = #{EXEC_NUM}
		) A
	</select>

	<select id="DH0630_doCNVDInfo" parameterType="hashmap" resultType="java.util.Map">
	
		<if test='_databaseId=="oracle"'>
			-- CNVD 업체 조회 시 동일한 업체에 대해 여러건이 조회가 될 수 있으므로 TOP1로 여러건이 아닌 단일 건을 조회한다.
			SELECT
				  #{ses.gateCd} GATE_CD
				 , #{EXEC_NUM} AS EXEC_NUM
				 , #{VENDOR_CD} VENDOR_CD
				 , A.CUR
			  FROM STOCINFO A
			 WHERE A.VENDOR_CD = #{VENDOR_CD}
			   AND ROWNUM = 1
		</if>
		<if test='_databaseId=="mssql"'>
			-- CNVD 업체 조회 시 동일한 업체에 대해 여러건이 조회가 될 수 있으므로 TOP1로 여러건이 아닌 단일 건을 조회한다.
			SELECT TOP 1
				  #{ses.gateCd} GATE_CD
				 , #{EXEC_NUM} AS EXEC_NUM
				 , #{VENDOR_CD} VENDOR_CD
				 , A.CUR
			  FROM STOCINFO A
			 WHERE A.VENDOR_CD = #{VENDOR_CD}
		</if>

	</select>

	<insert id="DH0630_doSaveCNHD" parameterType="hashmap">

		MERGE<include refid="com.sql.mergeInto"/>STOCCNHD<include refid="com.sql.mergeAs"/>A
		USING (SELECT #{ses.gateCd} AS GATE_CD, #{EXEC_NUM} AS EXEC_NUM <include refid="com.sql.dual"/>)<include refid="com.sql.mergeAs"/>B
            ON (A.GATE_CD = B.GATE_CD
           AND A.EXEC_NUM = B.EXEC_NUM)
		WHEN MATCHED THEN
		UPDATE SET
			   MOD_DATE = <include refid="com.sql.sysdate"/>
			 , MOD_USER_ID = #{ses.userId}
			 , DEL_FLAG = '0'
			 , EXEC_SUBJECT = #{EXEC_SUBJECT}
			 , EXEC_DATE = #{EXEC_DATE}
			 , CTRL_USER_ID = #{CTRL_USER_ID}
			 , RMK_TEXT_NUM = #{RMK_TEXT_NUM}
			 , APP_DOC_NUM = #{APP_DOC_NUM}
			 , APP_DOC_CNT = #{APP_DOC_CNT}
			 <choose>
				<when test='SIGN_STATUS == "P"'>
					,SIGN_STATUS   = 'P'
				</when>
				<otherwise>
					,SIGN_STATUS   = #{SIGN_STATUS}
				</otherwise>
			 </choose>
             <if test='SIGN_STATUS == "E" or SIGN_STATUS == "R"'>
			 	, SIGN_DATE = <include refid="com.sql.sysdate"/>
             </if>
			 , ATT_FILE_NUM	= #{ATT_FILE_NUM}
			 , BUYER_CD = #{BUYER_CD}
		WHEN NOT MATCHED THEN
		INSERT (
			   GATE_CD
			 , EXEC_NUM
			 , REG_DATE
			 , REG_USER_ID
			 , DEL_FLAG
			 , BUYER_CD
			 , PUR_ORG_CD
			 , EXEC_SUBJECT
			 , EXEC_TYPE
			 , EXEC_DATE
			 , CTRL_USER_ID
			 , APPROVAL_FLAG
			 , ATT_FILE_NUM
			 , APP_DOC_NUM
			 , APP_DOC_CNT
			 , SIGN_STATUS
			 , SIGN_DATE
			 , RMK_TEXT_NUM
			 , PURCHASE_TYPE
		) VALUES (
			   #{ses.gateCd}
			 , #{EXEC_NUM}
			 , <include refid="com.sql.sysdate"/>
			 , #{ses.userId}
			 , '0'
			 , #{BUYER_CD}
			 , #{PUR_ORG_CD}
			 , #{EXEC_SUBJECT}
			 , 'C'
			 , #{EXEC_DATE}
			 , #{CTRL_USER_ID}
			 , #{APPROVAL_FLAG}
			 , #{ATT_FILE_NUM}
			 , #{APP_DOC_NUM}
		   <if test='_databaseId=="oracle"'>
			 , CASE WHEN <include refid="com.sql.nvl"/>(#{APP_DOC_CNT}, 0) = 0 THEN 0 ELSE TO_NUMBER(<include refid="com.sql.nvl"/>(#{APP_DOC_CNT}, 0)) END
		   </if>
		   <if test='_databaseId=="mssql"'>
			 , CASE WHEN #{APP_DOC_CNT} = '' THEN 0 ELSE CONVERT(INT, #{APP_DOC_CNT}) END
		   </if>
			 <choose>
				<when test='SIGN_STATUS == "P"'>
					,'T'
				</when>
				<otherwise>
					,#{SIGN_STATUS}
				</otherwise>
			 </choose>
			 <choose>
				<when test='SIGN_STATUS == "E" or SIGN_STATUS == "R"'>
					, <include refid="com.sql.sysdate"/>
				</when>
				<otherwise>
					, ''
				</otherwise>
			 </choose>
			 , #{RMK_TEXT_NUM}
			 , #{PURCHASE_TYPE}
		)

	</insert>

	<insert id="DH0630_doSaveCNDT" parameterType="hashmap">

		MERGE<include refid="com.sql.mergeInto"/>STOCCNDT<include refid="com.sql.mergeAs"/>A
        USING (SELECT #{ses.gateCd} GATE_CD,#{EXEC_NUM} EXEC_NUM,#{EXEC_SQ} EXEC_SQ <include refid="com.sql.dual"/>)<include refid="com.sql.mergeAs"/>B
	       ON (A.GATE_CD = B.GATE_CD
          AND A.EXEC_NUM = B.EXEC_NUM
          AND A.EXEC_SQ = B.EXEC_SQ)
       WHEN MATCHED THEN
       UPDATE SET
			  MOD_DATE = <include refid="com.sql.sysdate"/>
			, MOD_USER_ID = #{ses.userId}
			, DEL_FLAG = '0'
			, UNIT_CD = #{UNIT_CD}
			, UNIT_PRC = #{UNIT_PRC}
			, VALID_FROM_DATE = #{VALID_FROM_DATE}
			, VALID_TO_DATE  = #{VALID_TO_DATE}
			, PRE_UNIT_PRC = #{OLD_UNIT_PRC}
			, PRE_VALID_FROM_DATE = #{BEFORE_VALID_FROM_DATE}
			, PRE_VALID_TO_DATE = #{BEFORE_VALID_TO_DATE}
			, TAX_CD = #{TAX_CD}
			, CTRL_CD = #{CTRL_CD}
			, PUR_ORG_CD = #{PUR_ORG_CD}
		 <choose>
			<when test='SIGN_STATUS == "E"'>
				, PROGRESS_CD = '3200' <!-- 결재완료시 진행상태(PROGRESS_CD=3200[품의완료]) -->
			</when>
			<otherwise>
				, PROGRESS_CD = '3100' <!-- 결재완료가 아니면 진행상태(PROGRESS_CD=3100[품의중]) -->
			</otherwise>
		 </choose>
       WHEN NOT MATCHED THEN
	   INSERT (
			  GATE_CD
			, EXEC_NUM
			, EXEC_SQ
			, REG_DATE
			, REG_USER_ID
			, MOD_DATE
			, MOD_USER_ID
			, DEL_FLAG
			, RFX_NUM
			, RFX_CNT
			, RFX_SQ
			, PR_NUM
			, PR_SQ
			, QTA_NUM
			, QTA_SQ
			, ITEM_CD
			, ITEM_DESC
			, ITEM_SPEC
			, EXEC_QT
			, UNIT_CD
			, UNIT_PRC
			, EXEC_AMT
			, DIRECT_PO_FLAG
			, AUTO_PO_FLAG
			, CONT_FLAG
			, INFO_FLAG
			, VALID_FROM_DATE
			, VALID_TO_DATE
			, DUE_DATE
			, DELY_TO_CD
			, DELY_TO_NM
			, CTRL_CD
			, BUYER_REQ_CD
			, PLANT_CD
			, PROGRESS_CD
			, CHANGE_REASON_CD
			, PUR_ORG_CD
			, TAX_CD
			, MAKER
			, PURCHASE_TYPE
			, VENDOR_CD
			, MAT_GROUP
			, TRGT_PRC
			, PLAN_STND_PRC
			, BUY_STND_PRC
			, PRE_UNIT_PRC
			, PRE_VALID_FROM_DATE
			, PRE_VALID_TO_DATE
    	) VALUES (
    		  #{ses.gateCd}
    		, #{EXEC_NUM}
       		, #{EXEC_SQ}
			, <include refid="com.sql.sysdate"/>
			, #{ses.userId}
			, <include refid="com.sql.sysdate"/>
			, #{ses.userId}
			, '0'
			, #{RFX_NUM}
			, #{RFX_CNT}
			, #{RFX_SQ}
			, #{PR_NUM}
			, #{PR_SQ}
			, #{QTA_NUM}
			, #{QTA_SQ}
			, #{ITEM_CD}
			, #{ITEM_DESC}
			, #{ITEM_SPEC}
			, #{EXEC_QT}
			, #{UNIT_CD}
			, #{UNIT_PRC}
			, #{EXEC_AMT}
			, #{DIRECT_PO_FLAG}
			, #{AUTO_PO_FLAG}
			, #{CONT_FLAG}
			, '1'
			, #{VALID_FROM_DATE}
			, #{VALID_TO_DATE}
			, #{DUE_DATE}
			, #{DELY_TO_CD}
			, #{DELY_TO_NM}
			, #{CTRL_CD}
			, #{BUYER_REQ_CD}
			, #{PLANT_CD}
		 <choose>
			<when test='SIGN_STATUS == "E"'>
				, '3200' <!-- 결재완료시 진행상태(PROGRESS_CD=3200[품의완료]) -->
			</when>
			<otherwise>
				, '3100' <!-- 결재완료가 아니면 진행상태(PROGRESS_CD=3100[품의중]) -->
			</otherwise>
		 </choose>
			, #{CHANGE_REASON_CD}
			, #{PUR_ORG_CD}
			, #{TAX_CD}
			, #{MAKER}
			, #{PURCHASE_TYPE}
			, #{VENDOR_CD}
			, #{MAT_GROUP}
			, #{TRGT_PRC}
			, #{PLAN_STND_PRC}
			, #{BUY_STND_PRC}
			, #{OLD_UNIT_PRC}
			, #{BEFORE_VALID_FROM_DATE}
			, #{BEFORE_VALID_TO_DATE}
    	)

	</insert>

	<insert id="DH0630_doSaveCNVD" parameterType="hashmap">

		MERGE<include refid="com.sql.mergeInto"/>STOCCNVD<include refid="com.sql.mergeAs"/>A
        USING (SELECT #{ses.gateCd} AS GATE_CD,#{EXEC_NUM} AS EXEC_NUM, #{VENDOR_CD} AS VENDOR_CD <include refid="com.sql.dual"/>)<include refid="com.sql.mergeAs"/>B
	       ON (A.GATE_CD = B.GATE_CD
          AND A.EXEC_NUM = B.EXEC_NUM
          AND A.VENDOR_CD = B.VENDOR_CD)
       WHEN MATCHED THEN
       UPDATE SET
			  MOD_DATE = <include refid="com.sql.sysdate"/>
			, MOD_USER_ID = #{ses.userId}
			, DEL_FLAG = '0'
       WHEN NOT MATCHED THEN
	   INSERT (
			  GATE_CD
			, EXEC_NUM
			, VENDOR_CD
			, REG_DATE
			, REG_USER_ID
			, DEL_FLAG
			, DELY_TERMS
			, PAY_TERMS
			, SHIPPER_TYPE
			, CUR
			, DELIVERY_TYPE
			, PAY_TYPE
			, EXEC_AMT
			, USER_NM
			, HP_NO
			, EMAIL
			, SIGN_STATUS
			, SIGN_DATE
			, APP_DOC_NUM
			, APP_DOC_CNT
			, RMKS
			, CONT_FLAG
    	) VALUES (
    		  #{ses.gateCd}
    		, #{EXEC_NUM}
			, #{VENDOR_CD}
			, #{REG_DATE}
			, #{REG_USER_ID}
			, '0'
			, #{DELY_TERMS}
			, #{PAY_TERMS}
			, #{SHIPPER_TYPE}
			, #{CUR}
			, #{DELIVERY_TYPE}
			, #{PAY_TYPE}
			, #{EXEC_AMT}
			, #{USER_NM}
			, #{HP_NO}
			, #{EMAIL}
			, #{SIGN_STATUS}
			, #{SIGN_DATE}
			, #{APP_DOC_NUM}
			, #{APP_DOC_CNT}
			, #{RMKS}
			, #{CONT_FLAG}
    	)

	</insert>

	<update id="updateSignStatus">
		UPDATE STOCCNHD SET
			   SIGN_STATUS = #{SIGN_STATUS}
			<if test='SIGN_STATUS == "E"'>
			 , SIGN_DATE = <include refid="com.sql.sysdate"/>
			</if>
			<if test='SIGN_STATUS == "R"'>
			 , SIGN_DATE = <include refid="com.sql.sysdate"/>
			</if>
		 WHERE GATE_CD = #{ses.gateCd}
		   AND APP_DOC_NUM = #{APP_DOC_NUM}
		   AND APP_DOC_CNT = #{APP_DOC_CNT}
	</update>

	<update id="DH0630_doDeleteCNDT" parameterType="hashmap">
		UPDATE STOCCNDT SET
			   DEL_FLAG = '1'
			 , MOD_DATE = <include refid="com.sql.sysdate"/>
			 , MOD_USER_ID = #{ses.userId}
		 WHERE GATE_CD = #{ses.gateCd}
		   AND EXEC_NUM = #{EXEC_NUM}
	</update>

	<update id="DH0630_doDeleteCNHD" parameterType="hashmap">
		UPDATE STOCCNHD SET
			   DEL_FLAG = '1'
			 , MOD_DATE = <include refid="com.sql.sysdate"/>
			 , MOD_USER_ID = #{ses.userId}
		 WHERE GATE_CD = #{ses.gateCd}
		   AND EXEC_NUM = #{EXEC_NUM}
	</update>

	<delete id="deleteInfo" parameterType="hashmap">
		DELETE FROM STOCINFO
		 WHERE GATE_CD = #{ses.gateCd}
		   AND ITEM_CD = #{ITEM_CD}
		   AND VENDOR_CD = #{VENDOR_CD}
		   AND VALID_FROM_DATE = #{VALID_FROM_DATE}
		   AND BUYER_CD = #{BUYER_CD}
		   AND BUYER_REQ_CD = #{BUYER_REQ_CD}
		   AND PUR_ORG_CD = #{PUR_ORG_CD}
		   AND PLANT_CD = #{PLANT_CD}
	</delete>

	<update id="updateOldInfo" parameterType="hashmap">
		UPDATE STOCINFO SET
		   	   VALID_TO_DATE = #{PRE_VALID_FROM_DATE}
		     , ORIGIN_VALID_TO_DATE = #{ORIGIN_VALID_TO_DATE}
    		 , VALID_FROM_DATE = CASE WHEN VALID_FROM_DATE > #{PRE_VALID_FROM_DATE} THEN #{PRE_VALID_FROM_DATE} ELSE VALID_FROM_DATE END
    	 WHERE GATE_CD = #{ses.gateCd}
    	   AND ITEM_CD = #{ITEM_CD}
    	   AND VENDOR_CD = #{VENDOR_CD}
    	   AND BUYER_CD = #{BUYER_CD}
    	   AND BUYER_REQ_CD = #{BUYER_REQ_CD}
    	   AND PUR_ORG_CD = #{PUR_ORG_CD}
    	   AND VALID_TO_DATE = #{ORIGIN_VALID_TO_DATE}
    	   AND PLANT_CD = #{PLANT_CD}
	</update>
	
	<insert id="insertInfo" parameterType="hashmap">
		INSERT INTO STOCINFO (
			  GATE_CD
			, ITEM_CD
			, VENDOR_CD
			, VALID_FROM_DATE
			, BUYER_CD
			, BUYER_REQ_CD
			, PUR_ORG_CD
			, VALID_TO_DATE
			, ORIGIN_VALID_TO_DATE
			, REG_DATE
			, REG_USER_ID
			, DEL_FLAG
			, EXEC_NUM
			, EXEC_SQ
			, CTRL_USER_ID
			, DELY_TERMS
			, PAY_TERMS
			, PAY_TYPE
			, SHIPPER_TYPE
			, CUR
			, ITEM_DESC
			, ITEM_SPEC
			, EXEC_QT
			, UNIT_CD
			, UNIT_PRC
			, EXEC_AMT
			, DIRECT_PO_FLAG
			, AUTO_PO_FLAG
			, CONT_FLAG
			, INFO_FLAG
			, DELY_TO_CD
			, DELY_TO_NM
			, CTRL_CD
			, CONV_QT
			, PLANT_CD
			, TAX_CD
		)
		SELECT CNDT.GATE_CD
			 , CNDT.ITEM_CD
			 , #{VENDOR_CD}
			 , CNDT.VALID_FROM_DATE
			 , CNDT.BUYER_REQ_CD
			 , CNDT.BUYER_REQ_CD
			 , CNDT.PUR_ORG_CD
			 , CNDT.VALID_TO_DATE
			 , NULL
			 , <include refid="com.sql.sysdate"/>
			 , #{ses.userId}
			 , '0'
			 , CNDT.EXEC_NUM
			 , CNDT.EXEC_SQ
			 , CNHD.CTRL_USER_ID
			 , CNVD.DELY_TERMS
			 , CNVD.PAY_TERMS
			 , CNVD.PAY_TYPE
			 , CNVD.SHIPPER_TYPE
			 , CNVD.CUR
			 , CNDT.ITEM_DESC
			 , CNDT.ITEM_SPEC
			 , CNDT.EXEC_QT
			 , CNDT.UNIT_CD
			 , CNDT.UNIT_PRC
			 , CNDT.EXEC_AMT
			 , CNDT.DIRECT_PO_FLAG
			 , CNDT.AUTO_PO_FLAG
			 , CNDT.CONT_FLAG
			 , CNDT.INFO_FLAG
			 , CNDT.DELY_TO_CD
			 , CNDT.DELY_TO_NM
			 , CNDT.CTRL_CD
			 , CNDT.EXEC_QT
			 , CNDT.PLANT_CD
			 , CNDT.TAX_CD
		  FROM STOCCNDT CNDT
		  JOIN STOCCNHD CNHD
		    ON(CNHD.GATE_CD = CNDT.GATE_CD
		   AND CNHD.EXEC_NUM = CNDT.EXEC_NUM
		   AND CNHD.DEL_FLAG = '0')
		  JOIN STOCCNVD CNVD
		    ON(CNHD.GATE_CD = CNVD.GATE_CD
		   AND CNHD.EXEC_NUM = CNVD.EXEC_NUM
		   AND CNVD.VENDOR_CD = CNDT.VENDOR_CD
		   AND CNVD.DEL_FLAG = '0')
		 WHERE CNDT.DEL_FLAG = '0'
		   AND CNDT.GATE_CD = #{ses.gateCd}
		   AND CNDT.EXEC_NUM = #{EXEC_NUM}
		   AND CNDT.EXEC_SQ = #{EXEC_SQ}
	</insert>

</mapper>
