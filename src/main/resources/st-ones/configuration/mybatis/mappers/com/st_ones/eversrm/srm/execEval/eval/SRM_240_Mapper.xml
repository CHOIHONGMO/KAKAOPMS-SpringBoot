<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.st_ones.eversrm.srm.execEval.eval.SRM_240_Mapper">

    <select id="doSearch" parameterType="hashMap" resultType="hashMap">
		SELECT *
		  FROM (		
				SELECT MASTER.EV_NUM
				      ,MASTER.EV_NM
				      ,MASTER.EV_TYPE
				      ,<include refid="com.sql.dbo"/>GETCODENAME(#{ses.gateCd},'M212',MASTER.EV_TYPE,#{ses.langCd}) AS EV_TYPE_NM
				      ,<include refid="com.sql.dbo"/>GETCODENAME(#{ses.gateCd},'M197',MASTER.PURCHASE_TYPE,#{ses.langCd}) AS PURCHASE_TYPE_NM
				      ,MASTER.EV_CTRL_USER_ID
				      ,<include refid="com.sql.dbo"/>GETUSERNAME(#{ses.gateCd},MASTER.EV_CTRL_USER_ID, #{ses.langCd}) AS EV_CTRL_USER_NM
				      ,MASTER.PROGRESS_CD
				      ,<include refid="com.sql.dbo"/>GETCODENAME(#{ses.gateCd},'M122',MASTER.PROGRESS_CD,#{ses.langCd}) AS PROGRESS_NM
				      ,<include refid="com.sql.dbo"/>GETGMTDATE(MASTER.REQUEST_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateValueFormat}) AS REQUEST_DATE
				      ,<include refid="com.sql.dbo"/>GETGMTDATE(MASTER.START_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateValueFormat}) AS START_DATE
				      ,<include refid="com.sql.dbo"/>GETGMTDATE(MASTER.CLOSE_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateValueFormat}) AS CLOSE_DATE
				      ,MASTER.RESULT_ENTER_CD
				      ,<include refid="com.sql.dbo"/>GETCODENAME(#{ses.gateCd},'M123',MASTER.RESULT_ENTER_CD,#{ses.langCd}) AS RESULT_ENTER_NM
				      ,EVEU.EV_USER_ID
				      ,<include refid="com.sql.dbo"/>GETUSERNAME(#{ses.gateCd},EVEU.EV_USER_ID, #{ses.langCd}) AS EV_USER_NM
				      ,EVEU.PRG_CHK AS EV_PROGRESS_CD
				      ,<include refid="com.sql.dbo"/>GETCODENAME(#{ses.gateCd},'M124',EVEU.PRG_CHK,#{ses.langCd}) AS EV_PROGRESS_NM    <!--////////////// 수정됨  -->
				      ,(SELECT COUNT(*) FROM STOCEVEU WHERE GATE_CD = MASTER.GATE_CD AND EV_NUM = MASTER.EV_NUM AND EV_USER_ID = EVEU.EV_USER_ID AND DEL_FLAG = '0') AS VENDOR_CNT
				      ,(SELECT COUNT(*) FROM STOCEVEU WHERE GATE_CD = MASTER.GATE_CD AND EV_NUM = MASTER.EV_NUM AND EV_USER_ID = EVEU.EV_USER_ID AND DEL_FLAG = '0' AND PROGRESS_CD='200') AS VENDOR_COMP_CNT
				      ,<include refid="com.sql.nvl"/>( (SELECT EV_USER_ID FROM STOCEVEU
				      			 WHERE GATE_CD = MASTER.GATE_CD
				      			   AND EV_NUM = MASTER.EV_NUM
				      			   AND SG_NUM = ' '
				      			   AND DEL_FLAG = '0'
				      			   AND REP_FLAG = '1'
				      			   AND EV_USER_ID = #{ses.userId}
				      			 GROUP BY EV_USER_ID ),'-') AS REP_EV_USER_ID
				      ,MASTER.PURCHASE_TYPE
				      ,<include refid="com.sql.dbo"/>GETGMTDATE(MASTER.COMPLETE_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateValueFormat}) AS COMPLETE_DATE
					  /*정성평가 항목이 있는 평가만 조회되도록 함*/
					  ,(SELECT COUNT(*) FROM STOCEVTM TM JOIN STOCEVTD TD
		            		 ON(TM.GATE_CD = TD.GATE_CD
		           			AND TM.EV_TPL_NUM = TD.EV_TPL_NUM
		           			AND TM.DEL_FLAG = '0')
		          		JOIN STOCEVIM IM 
		            		 ON(TD.GATE_CD = IM.GATE_CD
		           			AND TD.EV_ITEM_NUM = IM.EV_ITEM_NUM
		           			AND IM.DEL_FLAG = '0'
		           			AND IM.EV_ITEM_METHOD_CD = 'QUA')
		         	   WHERE TM.GATE_CD = MASTER.GATE_CD
		                 AND TM.EV_TPL_NUM = MASTER.EXEC_EV_TPL_NUM) AS QTY_CNT
				  FROM STOCEVEM MASTER
				  INNER JOIN ( SELECT GATE_CD, EV_NUM, SG_NUM, EV_USER_ID, CASE WHEN SUM(CASE WHEN PROGRESS_CD = '200' THEN 0 ELSE 1 END) > 0 THEN '100' ELSE '200' END AS PRG_CHK
						         FROM STOCEVEU
						        WHERE DEL_FLAG='0'
						        GROUP BY GATE_CD, EV_NUM, SG_NUM, EV_USER_ID) EVEU
				  	 ON MASTER.EV_NUM      		= EVEU.EV_NUM
				  	AND MASTER.GATE_CD    		= EVEU.GATE_CD
				  WHERE MASTER.GATE_CD  		=  #{ses.gateCd}
				    AND MASTER.DEL_FLAG 		= '0'
			        AND MASTER.REG_DATE BETWEEN <include refid="com.sql.toDate"/>#{REG_DATE_FROM}, 'YYYYMMDD HH24:MI:SS') AND <include refid="com.sql.toDate"/>#{REG_DATE_TO}, 'YYYYMMDD HH24:MI:SS')
			) BASE
			WHERE BASE.QTY_CNT > 0 /*정성평가 항목이 있는 경우에만 보이도록 함*/
			
		  <if test="PROGRESS_CD !=null and PROGRESS_CD !='' ">
		  	  AND BASE.EV_PROGRESS_CD = #{PROGRESS_CD}
		  </if>
		  <if test="PURCHASE_TYPE !=null and PURCHASE_TYPE !='' ">
		  	  AND BASE.PURCHASE_TYPE = #{PURCHASE_TYPE}
		  </if>
		  <if test="EV_CTRL_USER_NM !=null and EV_CTRL_USER_NM !='' ">
		  	  AND <include refid="com.sql.dbo"/>GETUSERNAME(#{ses.gateCd}, BASE.EV_CTRL_USER_ID, #{ses.langCd}) <include refid="com.sql.likeL"/> #{EV_CTRL_USER_NM} <include refid="com.sql.likeR"/>
		  </if>
		  <if test="EV_NUM !=null and EV_NUM !='' ">
		  	  AND BASE.EV_NUM <include refid="com.sql.likeL"/> #{EV_NUM} <include refid="com.sql.likeR"/>
		  </if>
		  <if test="EV_NM !=null and EV_NM !='' ">
		  	  AND BASE.EV_NM <include refid="com.sql.likeL"/> #{EV_NM} <include refid="com.sql.likeR"/>
		  </if>
		  <if test="EV_USER_NM !=null and EV_USER_NM !='' ">
		  	  AND <include refid="com.sql.dbo"/>GETUSERNAME(#{ses.gateCd}, BASE.EV_USER_ID, #{ses.langCd}) <include refid="com.sql.likeL"/> #{EV_USER_NM} <include refid="com.sql.likeR"/>
		  </if>
		  <if test="EV_TYPE !=null and EV_TYPE !='' ">
		  	  AND BASE.EV_TYPE = #{EV_TYPE}
		  </if>
		  
		  ORDER BY BASE.EV_NUM DESC

     </select>
     
     <select id="checkAllCount" parameterType="hashMap" resultType="java.lang.Integer">
     	SELECT	COUNT(*)
     	  FROM	STOCEVEU
     	 WHERE	EV_NUM 		= #{EV_NUM}
     	   AND	EV_USER_ID 	= #{EV_USER_ID}
     	   AND	GATE_CD 	= #{ses.gateCd}
     	   AND	DEL_FLAG 	= '0'
     </select>
	 <select id="checkScoreCount" parameterType="hashMap" resultType="java.lang.Integer">
	 	SELECT	COUNT(*)
     	  FROM	STOCEVEU
     	 WHERE	EV_NUM 		= #{EV_NUM}
     	   AND	EV_USER_ID 	= #{EV_USER_ID}
     	   AND	GATE_CD 	= #{ses.gateCd}
     	   AND	DEL_FLAG 	= '0'
     	   AND	EV_SCORE IS NULL
	 </select>

     <select id="doCheck" parameterType="hashmap" resultType="hashmap">
		SELECT MASTER.COMPLETE_DATE
			        ,MASTER.EV_CTRL_USER_ID
			        ,MASTER.RESULT_ENTER_CD
			        ,MASTER.EV_TYPE
			        ,MASTER.PURCHASE_TYPE
			        ,MASTER.EXEC_EV_TPL_NUM AS EV_TPL_NUM
			        ,EVEU.EMPTY_SCORE_CNT
			        ,EVEU.REP_FLAG
			        ,EVEU.EV_USER_ID
		  FROM STOCEVEM MASTER
		INNER JOIN (SELECT GATE_CD, EV_NUM, SG_NUM, EV_USER_ID, SUM(CASE WHEN EV_SCORE IS NULL OR EV_SCORE = 0 THEN 1 ELSE 0 END) AS EMPTY_SCORE_CNT, REP_FLAG 
                  FROM STOCEVEU 
                 WHERE DEL_FLAG='0' 
					  AND EV_USER_ID 	= #{EV_USER_ID}
                GROUP BY GATE_CD, EV_NUM, SG_NUM, EV_USER_ID, REP_FLAG ) EVEU 
		ON MASTER.GATE_CD 		= EVEU.GATE_CD
		AND MASTER.EV_NUM 		= EVEU.EV_NUM
		AND MASTER.DEL_FLAG   	= '0'
		AND MASTER.EV_NUM 		= #{EV_NUM}
		AND MASTER.GATE_CD 		= #{ses.gateCd}
     </select>
     
     <select id="checkProgress" parameterType="hashmap" resultType="java.lang.String">
     	SELECT	CASE WHEN COUNT(*) > 0 
     			THEN 'Y' 
                ELSE 'N'
       			END AS CHK
 		 FROM 	STOCEVEU 
 		WHERE 	EV_NUM 		= #{EV_NUM} 
 		  AND 	EV_USER_ID 	= #{EV_USER_ID} 
		  AND 	<include refid="com.sql.nvl"/>(PROGRESS_CD, '100') != '200' 
		  AND 	DEL_FLAG	= '0'
		  AND 	GATE_CD 	= #{ses.gateCd}
     </select>
     
     <select id="doRepUserCheck"  parameterType="hashmap" resultType="java.lang.Integer">
     SELECT COUNT(*) AS CNT
		FROM STOCEVEU
	  WHERE EV_NUM     		=  #{EV_NUM}
		   AND REP_FLAG   	= '1'
		   AND DEL_FLAG   	= '0'
		   AND GATE_CD    	=  #{ses.gateCd}
		   AND EV_USER_ID 	=  #{CHK_USER}
     </select>

	<update id="doCompleteEveu" parameterType="hashmap">    
        UPDATE  STOCEVEU
              SET  PROGRESS_CD 	= '200'
                 , MOD_DATE 	= <include refid="com.sql.sysdate"/>
                 , MOD_USER_ID 	= #{ses.userId}
        WHERE  GATE_CD 			= #{ses.gateCd}
             AND EV_NUM 				= #{EV_NUM}         
             AND EV_USER_ID 		= #{EV_USER_ID}
    </update>
 
     <update id="doCancelEveu" parameterType="hashmap">    
        UPDATE  STOCEVEU
              SET  PROGRESS_CD 		= '100'
                    , MOD_DATE 		= <include refid="com.sql.sysdate"/>
                    , MOD_USER_ID 	= #{ses.userId}           
        WHERE  GATE_CD 				= #{ses.gateCd}
             AND EV_NUM 			= #{EV_NUM}         
             AND EV_USER_ID 		= #{EV_USER_ID}
    </update>

	<select id="qtyCheck" parameterType="hashmap" resultType="java.lang.Integer">
		SELECT	COUNT(EV_ITEM_METHOD_CD)
  	      FROM 	STOCEVTD TD
  	INNER JOIN 	STOCEVIM IM ON TD.EV_ITEM_NUM 		= IM.EV_ITEM_NUM
  	INNER JOIN 	STOCEVEM EM ON EM.EXEC_EV_TPL_NUM 	= TD.EV_TPL_NUM
  		 WHERE 	TD.GATE_CD			 				= #{ses.gateCd}
  		   AND 	EM.EV_NUM 							= #{EV_NUM}
  		   AND 	IM.EV_ITEM_METHOD_CD 				= 'QTY'
  		   AND 	TD.DEL_FLAG 						= '0'
  		   AND 	IM.DEL_FLAG 						= '0'
	</select>
	
	<select id="getVendorCd" parameterType="hashmap" resultType="hashmap">
		SELECT	DISTINCT VENDOR_CD 
		  FROM 	STOCEVES
		 WHERE	GATE_CD 	= #{ses.gateCd}
		   AND	DEL_FLAG 	= '0'
		   AND	EV_NUM 		= #{EV_NUM}
	</select>
	
	<select id="checkEuScore" parameterType="hashmap" resultType="java.lang.Integer">
		SELECT 	COUNT(*)
		  FROM	STOCEVEU
		 WHERE	EV_NUM		= #{EV_NUM}
		   AND	VENDOR_CD 	= #{VENDOR_CD}
		   AND	EV_SCORE 	  IS NULL
		   AND	DEL_FLAG 	= '0'
		
	</select>
	
	<select id="getEuScore" parameterType="hashmap" resultType="String">
		SELECT 	AVG(EV_SCORE)
		  FROM 	STOCEVEU
	     WHERE 	GATE_CD   = #{ses.gateCd}
		   AND 	EV_NUM    = #{EV_NUM}
		   AND 	VENDOR_CD = #{VENDOR_CD}
		   AND	EV_SCORE  IS NOT NULL
	</select>
	
	<select id="getEtScore" parameterType="hashmap" resultType="String">
		SELECT 	SUM(FINAL_SCORE) AS ET_SUM
          FROM 	STOCEVET
         WHERE 	GATE_CD    = #{ses.gateCd}
           AND 	EV_NUM	   = #{EV_NUM}
           AND 	VENDOR_CD  = #{VENDOR_CD}
	</select>
	
	<update id="updateEsScore" parameterType="hashmap">
		UPDATE	STOCEVES
		   SET	FIRST_EV_SCORE 			= #{EV_SCORE}
		       ,EV_SCORE  				= #{EV_SCORE}
		       ,FIRST_EVAL_GRADE_CLS 	= #{EV_GRADE_CLS}
		       ,EVAL_GRADE_CLS	        = #{EV_GRADE_CLS}
		       ,MOD_DATE				= <include refid="com.sql.sysdate"/>
		       ,MOD_USER_ID				= #{ses.userId}
		 WHERE	GATE_CD   		        = #{ses.gateCd}
		   AND EV_NUM	  		        = #{EV_NUM}
		   AND	VENDOR_CD 		        = #{VENDOR_CD}
		   AND	DEL_FLAG  		        = '0'
	</update>
	
	
	<select id="getEuVendor" parameterType="hashmap" resultType="hashmap">
		SELECT	EV_NUM
			   ,EV_USER_ID
		       ,VENDOR_CD
		       ,<include refid="com.sql.dbo"/>getVendorName(GATE_CD, VENDOR_CD, #{ses.langCd})  AS VENDOR_NM
		  FROM	STOCEVEU
		 WHERE	GATE_CD		= #{ses.gateCd}
		   AND	DEL_FLAG	= '0'
		   AND	EV_USER_ID 	= #{EV_USER_ID}
		   AND 	EV_NUM		= #{EV_NUM}
		   AND	EV_SCORE	IS NOT NULL
	</select>
	
	<update id="doIndivisualComplete" parameterType="hashmap" >
		UPDATE	STOCEVEU
		   SET	PROGRESS_CD	= '200'
			   ,MOD_DATE	= <include refid="com.sql.sysdate"/>
			   ,MOD_USER_ID	= #{ses.userId}
		 WHERE	GATE_CD		= #{ses.gateCd}
		   AND	DEL_FLAG	= '0'
		   AND	EV_USER_ID	= #{EV_USER_ID}
		   AND	EV_NUM		= #{EV_NUM}
		   AND	VENDOR_CD	= #{VENDOR_CD}
		   
	</update>


</mapper>