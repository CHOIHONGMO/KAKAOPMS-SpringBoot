<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.st_ones.eversrm.po.poMgt.poProgress.BPOP_Mapper">

    <select id="doSearchPoStatus" parameterType="hashMap" resultType="hashMap">

        SELECT DISTINCT
               POHD.PROGRESS_CD
              ,POHD.PO_TYPE AS PURCHASE_TYPE
              ,POHD.PO_NUM
              ,<include refid="com.sql.dbo"/>GETGMTDATE(POHD.PO_CREATE_DATE,#{ses.userGmt},#{ses.systemGmt},<include refid="com.sql.dateFormat"/>) AS PO_CREATE_DATE
              ,POHD.SIGN_CNT
              ,POHD.VENDOR_CD
              ,<include refid="com.sql.dbo"/>GETVENDORNAME(#{ses.gateCd},POHD.VENDOR_CD,#{ses.langCd}) AS VENDOR_NM
              ,POHD.CUR
              ,POHD.PO_AMT
              ,POHD.SUBJECT
              ,POHD.VENDOR_RECEIPT_STATUS
              ,<include refid="com.sql.dbo"/>GETGMTDATE(POHD.VENDOR_RECEIPT_DATE,#{ses.userGmt},#{ses.systemGmt},<include refid="com.sql.dateFormat"/>) AS VENDOR_RECEIPT_DATE
              ,POHD.VENDOR_RECEIPT_USER_ID
              ,<include refid="com.sql.dbo"/>GETUSERNAME(#{ses.gateCd}, POHD.VENDOR_RECEIPT_USER_ID,#{ses.langCd}) as VENDOR_RECEIPT_USER_NM
              ,<include refid="com.sql.dbo"/>GETGMTDATE(POHD.FORCE_CLOSE_DATE,#{ses.userGmt},#{ses.systemGmt},<include refid="com.sql.dateFormat"/>) AS FORCE_CLOSE_DATE
              ,<include refid="com.sql.dbo"/>GETCOMCODE(#{ses.gateCd},'M074',POHD.PO_TYPE,0,#{ses.langCd}) AS PO_TYPE
              ,POHD.PAY_TYPE
              ,POHD.CTRL_USER_ID
              ,<include refid="com.sql.dbo"/>GETUSERNAME(#{ses.gateCd},POHD.CTRL_USER_ID,#{ses.langCd}) AS CTRL_USER_NM
              ,POHD.PO_APRV_ID
              ,<include refid="com.sql.dbo"/>GETUSERNAME(#{ses.gateCd},POHD.PO_APRV_ID,#{ses.langCd}) AS PO_APRV_NM
              ,POHD.SAP_PO_NUM
              ,POHD.PUR_ORG_CD
         FROM STOCPOHD POHD JOIN STOCPODT PODT
          ON (POHD.GATE_CD = PODT.GATE_CD
          AND POHD.PO_NUM = PODT.PO_NUM
          AND PODT.DEL_FLAG = '0')
        WHERE POHD.GATE_CD = #{ses.gateCd}
          AND POHD.DEL_FLAG = '0'
      	  <!--
        	PF0055 : 부품구매 OR 구매원가
         	PF0054 : 일반구매
         	부품구매 / 일반구매 구분해서 조회한다.
 		  -->
 		  <!--
 		  AND CASE WHEN #{ses.grantedAuthCd} = 'PF0055' or #{ses.grantedAuthCd} = 'PF0057' THEN
 			            CASE WHEN POHD.PO_TYPE = 'NORMAL' THEN '1' ELSE '0' END
 			 	   WHEN #{ses.grantedAuthCd} = 'PF0054' THEN
 			 		    CASE WHEN POHD.PO_TYPE != 'NORMAL' THEN '1' ELSE '0' END
 			 	   ELSE '1'
 			  END = '1'
 			   -->
 		  <!-- 구매담당자의 가능 플랜트 발주건만 조회하도록 함 -->
	      AND EXISTS (SELECT 'X' FROM STOCUSPL WHERE GATE_CD = POHD.GATE_CD
	  		            AND PLANT_CD = PODT.PLANT_CD AND USER_ID = #{ses.userId} AND DEL_FLAG = '0')

        <if test="PO_FROM_DATE != '' and PO_FROM_DATE != null and PO_TO_DATE != '' and PO_TO_DATE != null ">
            AND POHD.PO_CREATE_DATE  BETWEEN <include refid="com.sql.toDate"/>#{PO_FROM_DATE}, 'YYYYMMDD HH24:MI:SS') AND <include refid="com.sql.toDate"/>#{PO_TO_DATE}, 'YYYYMMDD HH24:MI:SS')
        </if>
        <if test="PO_NUM != '' and PO_NUM != null">
            AND POHD.PO_NUM <include refid="com.sql.likeL"/> #{PO_NUM} <include refid="com.sql.likeR"/>
        </if>
        <if test="SUBJECT != '' and SUBJECT != null">
            AND POHD.SUBJECT <include refid="com.sql.likeL"/> #{SUBJECT} <include refid="com.sql.likeR"/>
        </if>
        <if test="CTRL_USER_ID != '' and CTRL_USER_ID != null">
        	AND (
        	    UPPER(POHD.CTRL_USER_ID) <include refid="com.sql.likeL"/> #{CTRL_USER_ID} <include refid="com.sql.likeR"/>
        	 OR UPPER(POHD.PO_APRV_ID) <include refid="com.sql.likeL"/> #{CTRL_USER_ID} <include refid="com.sql.likeR"/>
        	    )
        </if>
        <if test="CTRL_USER_NM != '' and CTRL_USER_NM != null">
            AND (
                UPPER(<include refid="com.sql.dbo"/>GETUSERNAME(#{ses.gateCd},POHD.CTRL_USER_ID,#{ses.langCd})) <include refid="com.sql.likeL"/> #{CTRL_USER_NM} <include refid="com.sql.likeR"/>
             OR UPPER(<include refid="com.sql.dbo"/>GETUSERNAME(#{ses.gateCd},POHD.PO_APRV_ID,#{ses.langCd})) <include refid="com.sql.likeL"/> #{CTRL_USER_NM} <include refid="com.sql.likeR"/>
                )
        </if>
        <if test="VENDOR_NM != '' and VENDOR_NM != null">
            AND <include refid="com.sql.dbo"/>GETVENDORNAME(#{ses.gateCd},POHD.VENDOR_CD,#{ses.langCd}) <include refid="com.sql.likeL"/> #{VENDOR_NM} <include refid="com.sql.likeR"/>
        </if>
        <if test="PO_APRV_ID != '' and PO_APRV_ID != null">
            AND UPPER(POHD.PO_APRV_ID) = UPPER(#{PO_APRV_ID})
        </if>
        <choose>
            <when test='PO_CLOSE_FLAG == "0"'>
                AND POHD.FORCE_CLOSE_DATE IS NULL
            </when>
            <when test='PO_CLOSE_FLAG == "1"'>
                AND POHD.FORCE_CLOSE_DATE IS NOT NULL
            </when>
        </choose>

        <if test="RECEIPT_STATUS != '' and RECEIPT_STATUS != null">
            AND <include refid="com.sql.nvl"/>(POHD.VENDOR_RECEIPT_STATUS, 0) = #{RECEIPT_STATUS}
        </if>
        <if test="SIGN_STATUS != '' and SIGN_STATUS != null">
            AND POHD.SIGN_STATUS = #{SIGN_STATUS}
        </if>
        <if test="PROGRESS_CD != '' and PROGRESS_CD != null">
            AND POHD.PROGRESS_CD = #{PROGRESS_CD}
        </if>
        <if test="PURCHASE_TYPE != '' and PURCHASE_TYPE != null">
            AND POHD.PO_TYPE = #{PURCHASE_TYPE}
        </if>

       ORDER BY POHD.PO_NUM DESC
    </select>

    <select id="checkSignStatus" parameterType="hashMap" resultType="java.lang.String">
        SELECT SIGN_STATUS
        FROM STOCPOHD
        WHERE  GATE_CD = #{ses.gateCd}
          AND PO_NUM = #{PO_NUM}
          AND DEL_FLAG = '0'
    </select>

    <select id="poProgressCode" parameterType="hashMap" resultType="java.lang.Integer">
        SELECT
        <if test="_databaseId == 'oracle'">
	    	MAX(TO_NUMBER(<include refid="com.sql.nvl"/>(PROGRESS_CD, '0')))
		</if>

		<if test="_databaseId == 'mssql'">
	        MAX(CONVERT(INT, <include refid="com.sql.nvl"/>(PROGRESS_CD, '0')))
		</if>

        FROM STOCPODT
        WHERE  GATE_CD = #{ses.gateCd}
          AND PO_NUM = #{PO_NUM}
          AND DEL_FLAG = '0'
    </select>

    <update id="updatePohd" parameterType="hashMap" >
        UPDATE STOCPOHD
        SET CTRL_USER_ID = #{NEW_CTRL_USER_ID}
        , MOD_DATE = <include refid="com.sql.sysdate"/>
        , MOD_USER_ID = #{ses.userId}
        WHERE GATE_CD = #{ses.gateCd}
        AND PO_NUM =  #{PO_NUM}
        AND DEL_FLAG = '0'
    </update>

    <update id="updatePoAprvId" parameterType="hashmap">
        UPDATE STOCPOHD SET
               PO_APRV_ID = #{NEW_PO_APRV_ID}
              ,MOD_DATE = <include refid="com.sql.sysdate"/>
              ,MOD_USER_ID = #{ses.userId}
         WHERE GATE_CD = #{ses.gateCd}
           AND PO_NUM =  #{PO_NUM}
           AND DEL_FLAG = '0'
    </update>

    <update id="confirmPo" parameterType="hashmap">
        UPDATE STOCPOHD SET
               PROGRESS_CD = '300'
              ,MOD_DATE = <include refid="com.sql.sysdate"/>
              ,MOD_USER_ID = #{ses.userId}
         WHERE GATE_CD = #{ses.gateCd}
           AND PO_NUM = #{PO_NUM}
           AND DEL_FLAG = '0'
    </update>

    <select id="checkTerminateCnt" parameterType="hashMap" resultType="java.lang.String">

<!--         SELECT -->
<!-- 			(CASE WHEN SUM(ITEM_NUMBER) - SUM(ITEM_CLOSED) = 0 THEN 'Y' ELSE 'N' END) AS UPDATE_FLAG -->
<!-- 		FROM ( -->
<!-- 		  SELECT -->
<!-- 		      COUNT(PO_SQ) AS ITEM_NUMBER, -->
<!-- 		      0 AS ITEM_CLOSED -->
<!-- 		  FROM STOCPODT -->
<!-- 		  WHERE GATE_CD = #{ses.gateCd} -->
<!-- 		    AND PO_NUM = #{PO_NUM} -->
<!-- 		    AND DEL_FLAG = '0' -->

<!-- 		  UNION ALL -->

<!-- 		  SELECT -->
<!-- 		      0 AS ITEM_NUMBER, -->
<!-- 		      COUNT(PO_SQ) AS ITEM_CLOSED -->
<!-- 		  FROM STOCPODT -->
<!-- 		  WHERE GATE_CD = #{ses.gateCd} -->
<!-- 		    AND PO_NUM = #{PO_NUM} -->
<!-- 		    AND DEL_FLAG = '0' -->
<!-- 		    AND FORCE_CLOSE_DATE IS NOT NULL) -->
        SELECT CASE WHEN COUNT(PO_SQ) = 0 THEN 'Y' ELSE 'N' END AS UPDATE_FLAG
         FROM STOCPODT
         WHERE GATE_CD = #{ses.gateCd}
           AND PO_NUM = #{PO_NUM}
           AND DEL_FLAG = '0'
           AND FORCE_CLOSE_DATE IS NULL

    </select>

    <update id="terminatePohd" parameterType="hashMap" >

        UPDATE STOCPOHD SET
        	  FORCE_CLOSE_DATE = <include refid="com.sql.dbo"/>setGmtDate(<include refid="com.sql.sysdate"/>, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>)
        	, MOD_DATE = <include refid="com.sql.sysdate"/>
        	, MOD_USER_ID = #{ses.userId}
         WHERE GATE_CD = #{ses.gateCd}
           AND PO_NUM = #{PO_NUM}
           AND DEL_FLAG = '0'

    </update>

    <update id="terminatePodt" parameterType="hashMap" >

        UPDATE STOCPODT SET
        	  FORCE_CLOSE_DATE = <include refid="com.sql.dbo"/>setGmtDate(<include refid="com.sql.sysdate"/>, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>)
            , FORCE_CLOSE_RMK = #{FORCE_CLOSE_RMK}
        	, MOD_DATE = <include refid="com.sql.sysdate"/>
        	, MOD_USER_ID = #{ses.userId}
         WHERE GATE_CD = #{ses.gateCd}
           AND PO_NUM = #{PO_NUM}
           <if test="DELIVERY_TYPE != null and DELIVERY_TYPE == 'DI'"> <!-- 납품유형이 납품(DI)일 때 품목별로 종결처리, 납품유형이 검수(PI)일 때 PO_SQ를 주지 말고 PO 전체를 종결처리한다. -->
           AND PO_SQ = #{PO_SQ}
           </if>
           AND DEL_FLAG = '0'

    </update>

    <select id="doSearchPoProgressStatus" parameterType="hashMap" resultType="hashMap">
	SELECT * FROM (
        SELECT (CASE WHEN POHD.FORCE_CLOSE_DATE IS NOT NULL OR PODT.FORCE_CLOSE_DATE IS NOT NULL THEN '5400'
                     WHEN PODT.PO_QT <![CDATA[ <= ]]> PODT.GR_QT THEN '6200'
                     WHEN PODT.GR_QT IS NOT NULL AND PODT.PO_QT > PODT.GR_QT THEN '6100'
                     WHEN POHD.VENDOR_RECEIPT_DATE IS NOT NULL THEN '5300'
                     WHEN POHD.PROGRESS_CD = '300' THEN '5200'
                     ELSE '5100' END) AS PROGRESS_CD
              ,POHD.PO_TYPE AS PURCHASE_TYPE
              ,(CASE WHEN PODT.FORCE_CLOSE_DATE IS NULL THEN '0'
                     ELSE '1' END) AS FORCE_CLOSE_FLAG
              ,PODT.PO_NUM
              ,PODT.PO_SQ
              ,<include refid="com.sql.dbo"/>GETUSERNAME(#{ses.gateCd},POHD.CTRL_USER_ID,#{ses.langCd}) AS CTRL_USER_NM
              ,POHD.CTRL_USER_ID
              ,<include refid="com.sql.dbo"/>GETGMTDATE(POHD.PO_CREATE_DATE,#{ses.userGmt},#{ses.systemGmt},<include refid="com.sql.dateFormat"/>) AS PO_CREATE_DATE
              ,PODT.ITEM_CD
              ,PODT.ITEM_DESC
              ,PODT.ITEM_SPEC
              ,POHD.VENDOR_CD
              ,<include refid="com.sql.dbo"/>GETVENDORNAME(#{ses.gateCd},POHD.VENDOR_CD,#{ses.langCd}) AS VENDOR_NM
              ,<include refid="com.sql.dbo"/>GETGMTDATE(PODT.DUE_DATE,#{ses.userGmt},#{ses.systemGmt},<include refid="com.sql.dateFormat"/>) AS DUE_DATE
              ,<include refid="com.sql.dbo"/>GETGMTDATE(PODT.EXPORT_DATE,#{ses.userGmt},#{ses.systemGmt},<include refid="com.sql.dateFormat"/>) AS EXPORT_DATE
              ,PODT.PO_QT
              ,PODT.ORDER_UNIT_CD
			  ,PODT.GR_QT
              ,(PODT.GR_QT * PODT.UNIT_PRC) AS GR_AMT
			  ,(PODT.PO_QT - <include refid="com.sql.nvl"/>(PODT.GR_QT,0)) AS GR_BAL_QT
              ,PODT.ITEM_AMT - (PODT.GR_QT * PODT.UNIT_PRC) AS GR_BAL_AMT
			  ,POHD.CUR
			  ,PODT.UNIT_PRC
			  ,PODT.ITEM_AMT
              ,POHD.PAY_TERMS
              ,POHD.DELY_TERMS
              ,POHD.SHIPPER_TYPE
              ,PODT.PLANT_CD
			  ,<include refid="com.sql.dbo"/>GETGMTDATE(<include refid="com.sql.nvl"/>(PODT.FORCE_CLOSE_DATE, POHD.FORCE_CLOSE_DATE), #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS FORCE_CLOSE_DATE
              ,PODT.FORCE_CLOSE_RMK
              ,POHD.DELIVERY_TYPE
	      FROM STOCPODT PODT
	      JOIN STOCPOHD POHD
	       ON (PODT.GATE_CD = POHD.GATE_CD
	       AND PODT.PO_NUM = POHD.PO_NUM
	       AND POHD.DEL_FLAG = '0')
	     WHERE PODT.GATE_CD = #{ses.gateCd}
           AND POHD.PROGRESS_CD = '300'
	       AND PODT.DEL_FLAG = '0'
	   	   <!-- 구매담당자 가능 플랜트만 조회되도록 함 -->
	   	   AND EXISTS (SELECT 'X' FROM STOCUSPL WHERE GATE_CD = PODT.GATE_CD
					   AND PLANT_CD = PODT.PLANT_CD AND USER_ID = #{ses.userId} AND DEL_FLAG = '0')
       	   <!--
        	   PF0055 : 부품구매 OR 구매원가
         	   PF0054 : 일반구매
         	   부품구매 / 일반구매 구분해서 조회한다.
	       -->
	       <!--
		   AND CASE WHEN #{ses.grantedAuthCd} = 'PF0055' or #{ses.grantedAuthCd} = 'PF0057' THEN
		 		         CASE WHEN POHD.PO_TYPE = 'NORMAL' THEN '1' ELSE '0' END
		 	        WHEN #{ses.grantedAuthCd} = 'PF0054' THEN
		 		         CASE WHEN POHD.PO_TYPE != 'NORMAL' THEN '1' ELSE '0' END
		 	        ELSE '1'
		       END = '1' -->

		<if test="COMBO_DATE != ''  and COMBO_DATE != null">
			<if test="FROM_DATE != '' and FROM_DATE != null and TO_DATE != '' and TO_DATE != null ">
				<choose>
                   <when test="COMBO_DATE == 'PO_DATE' ">
                       AND POHD.PO_CREATE_DATE
                   </when>
                   <when test="COMBO_DATE == 'DELIVERY_DATE' ">
                       AND PODT.DUE_DATE
                   </when>

				</choose>
			</if>
			BETWEEN <include refid="com.sql.toDate"/>#{FROM_DATE}, 'YYYYMMDD HH24:MI:SS') AND <include refid="com.sql.toDate"/>#{TO_DATE}, 'YYYYMMDD HH24:MI:SS')
		</if>

			<if test="ITEM_CD != '' and ITEM_CD != null">
				AND PODT.ITEM_CD <include refid="com.sql.likeL"/> #{ITEM_CD} <include refid="com.sql.likeR"/>
			</if>
		<if test="ITEM_NM != '' and ITEM_NM != null">
			AND PODT.ITEM_DESC <include refid="com.sql.likeL"/>#{ITEM_NM}<include refid="com.sql.likeR"/>
		</if>

        <if test="COMPLETTION_STATUS != '' and COMPLETTION_STATUS != null">
	     	<if test="COMPLETTION_STATUS == 'DELIVERY_COMPLETED' ">
	     		<![CDATA[ AND PODT.PO_QT <= PODT.INV_QT ]]>
	     	</if>
	     	<if test="COMPLETTION_STATUS == 'DELIVERY_NUMT_COMPLETED' ">
	     		<![CDATA[ AND PODT.PO_QT > PODT.INV_QT ]]>

	     	</if>
	     	<if test="COMPLETTION_STATUS == 'GR_COMPLETED' ">
	     		<![CDATA[ AND PODT.PO_QT <= PODT.GR_QT ]]>
	     	</if>
	     	<if test="COMPLETTION_STATUS == 'GR_NUMT_COMPLETED' ">
	     		<![CDATA[ AND PODT.PO_QT > PODT.GR_QT ]]>
	     	</if>
	    </if>

        <if test="CTRL_USER_ID != '' and CTRL_USER_ID != null">
        	AND UPPER(POHD.CTRL_USER_ID) <include refid="com.sql.likeL"/> #{CTRL_USER_ID} <include refid="com.sql.likeR"/>
        </if>

        <if test="CTRL_USER_NM != '' and CTRL_USER_NM != null">
            AND <include refid="com.sql.dbo"/>GETUSERNAME(POHD.GATE_CD, POHD.CTRL_USER_ID, #{ses.langCd}) <include refid="com.sql.likeL"/> #{CTRL_USER_NM} <include refid="com.sql.likeR"/>
        </if>

        <if test="PO_NUM != '' and PO_NUM != null">
            AND PODT.PO_NUM <include refid="com.sql.likeL"/> #{PO_NUM} <include refid="com.sql.likeR"/>
        </if>

        <if test="VENDOR_NM != '' and VENDOR_NM != null">
            AND <include refid="com.sql.dbo"/>GETVENDORNAME(#{ses.gateCd},POHD.VENDOR_CD,#{ses.langCd}) <include refid="com.sql.likeL"/> #{VENDOR_NM} <include refid="com.sql.likeR"/>
        </if>
        <if test="PLANT_CD != '' and PLANT_CD != null">
            AND PODT.PLANT_CD = #{PLANT_CD}
        </if>
        <if test="PURCHASE_TYPE != '' and PURCHASE_TYPE != null">
            AND POHD.PO_TYPE = #{PURCHASE_TYPE}
        </if>
    ) AAA
    WHERE 1 = 1
    <if test="PROGRESS_CD != '' and PROGRESS_CD != null">
        AND AAA.PROGRESS_CD = #{PROGRESS_CD}
    </if>
        ORDER BY AAA.PO_NUM DESC, AAA.ITEM_DESC ASC

    </select>

    <update id="doUpdateExportDate">
        UPDATE STOCPODT SET
               EXPORT_DATE = <include refid="com.sql.dbo"/>setGmtDate(#{EXPORT_DATE}, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>)
              ,MOD_DATE = <include refid="com.sql.sysdate"/>
              ,MOD_USER_ID = #{ses.userId}
         WHERE GATE_CD = #{ses.gateCd}
           AND PO_NUM = #{PO_NUM}
           AND PO_SQ = #{PO_SQ}
           AND DEL_FLAG = '0'
    </update>

    <select id="doSearchPoReceiptStatus" resultType="hashMap">

        SELECT POHD.BUYER_CD
               , <include refid="com.sql.dbo"/>GETBUYERNAME(POHD.GATE_CD, POHD.BUYER_CD, #{ses.langCd}) AS BUYER_NM
               , POHD.PO_NUM
               , <include refid="com.sql.dbo"/>GETGMTDATE(POHD.PO_CREATE_DATE,#{ses.userGmt},#{ses.systemGmt},<include refid="com.sql.dateFormat"/>) AS PO_CREATE_DATE
               , <include refid="com.sql.dbo"/>GETCOMCODE(#{ses.gateCd},'M094',CASE WHEN POHD.SIGN_CNT > 1 THEN 'C' ELSE 'N' END,0,#{ses.langCd}) AS NEW_CHANGE
               , <include refid="com.sql.dbo"/>GETGMTDATE(POHD.VENDOR_RECEIPT_DATE,#{ses.userGmt},#{ses.systemGmt},<include refid="com.sql.dateFormat"/>) AS VENDOR_RECEIPT_DATE
               , POHD.SUBJECT
               , POHD.PAY_TERMS
               , POHD.CUR
               , POHD.PO_AMT
               , <include refid="com.sql.dbo"/>GETUSERNAME(#{ses.gateCd},POHD.CTRL_USER_ID,#{ses.langCd}) AS CTRL_USER_NM
               , <include refid="com.sql.dbo"/>GETCOMCODE(#{ses.gateCd},'M093',<include refid="com.sql.nvl"/>(POHD.VENDOR_RECEIPT_STATUS, 0),0,#{ses.langCd})  AS VENDOR_RECEIPT_STATUS
               , <include refid="com.sql.dbo"/>GETGMTDATE(POHD.VENDOR_RECEIPT_DATE,#{ses.userGmt},#{ses.systemGmt},<include refid="com.sql.dateFormat"/>) AS VENDOR_ACCEPT_DATE
               , <include refid="com.sql.dbo"/>GETUSERNAME(#{ses.gateCd},POHD.VENDOR_RECEIPT_USER_ID,#{ses.langCd}) AS VENDOR_RECEIPT_USER_NM
               , <include refid="com.sql.dbo"/>GETGMTDATE(POHD.FORCE_CLOSE_DATE,#{ses.userGmt},#{ses.systemGmt},<include refid="com.sql.dateFormat"/>) AS FORCE_CLOSE_DATE
               , POHD.GATE_CD
         FROM STOCPOHD POHD
         WHERE POHD.GATE_CD =  #{ses.gateCd}
         AND  POHD.DEL_FLAG = '0'
         AND  POHD.VENDOR_CD = #{ses.companyCd}
         AND  POHD.SIGN_STATUS = 'E'
         <if test="FROM_DATE != '' and TO_DATE != '' and FROM_DATE != null and TO_DATE != null">
           AND POHD.PO_CREATE_DATE  BETWEEN <include refid="com.sql.toDate"/>#{FROM_DATE}, 'YYYYMMDD HH24:MI:SS') AND <include refid="com.sql.toDate"/>#{TO_DATE}, 'YYYYMMDD HH24:MI:SS')
         </if>
         <if test="BUYER_CD != '' and BUYER_CD != null">
           AND POHD.BUYER_CD = #{BUYER_CD}
         </if>

         <if test="NEW_CHANGE != '' and NEW_CHANGE != null">
           AND CASE WHEN POHD.SIGN_CNT > 1 THEN 'C' ELSE 'N' END = #{NEW_CHANGE}
         </if>
         <if test="PO_NUM != '' and PO_NUM != null">
           AND POHD.PO_NUM <include refid="com.sql.likeL"/> #{PO_NUM} <include refid="com.sql.likeR"/>
         </if>
         <if test="VENDOR_RECEIPT_STATUS != '' and VENDOR_RECEIPT_STATUS != null">
           AND <include refid="com.sql.nvl"/>(POHD.VENDOR_RECEIPT_STATUS, 0) = #{VENDOR_RECEIPT_STATUS}
         </if>

       ORDER BY POHD.PO_CREATE_DATE DESC, POHD.PO_NUM DESC

    </select>

    <update id="doReceipt" parameterType="hashMap" >

        UPDATE STOCPOHD SET
        	  VENDOR_RECEIPT_STATUS = '200'
        	, VENDOR_RECEIPT_USER_ID = #{ses.userId}
        	, VENDOR_RECEIPT_DATE = <include refid="com.sql.sysdate"/>
        	, MOD_DATE = <include refid="com.sql.sysdate"/>
        	, MOD_USER_ID = #{ses.userId}
        WHERE GATE_CD = #{GATE_CD}
          AND PO_NUM = #{PO_NUM}
          AND DEL_FLAG = '0'

    </update>

	<update id="doReject" parameterType="hashMap" >

        UPDATE STOCPOHD SET
        	  VENDOR_RECEIPT_STATUS = '100'
        	, VENDOR_RECEIPT_USER_ID = #{ses.userId}
        	, VENDOR_RECEIPT_DATE = <include refid="com.sql.sysdate"/>
        	, MOD_DATE = <include refid="com.sql.sysdate"/>
        	, MOD_USER_ID = #{ses.userId}
        WHERE GATE_CD = #{GATE_CD}
          AND PO_NUM = #{PO_NUM}
          AND DEL_FLAG = '0'

    </update>

    <update id="updatePodtProgressCode" parameterType="hashMap" >

        UPDATE STOCPODT SET
        	  PROGRESS_CD = #{PROGRESS_CD}
        	, MOD_DATE = <include refid="com.sql.sysdate"/>
        	, MOD_USER_ID = #{ses.userId}
        WHERE GATE_CD = #{GATE_CD}
          AND PO_NUM = #{PO_NUM}
          AND DEL_FLAG = '0'

    </update>

    <select id="doSearchPoProgressStatusSup" parameterType="hashMap" resultType="hashMap">

    	SELECT  <include refid="com.sql.dbo"/>GETBUYERNAME(POHD.GATE_CD, POHD.BUYER_CD, #{ses.langCd}) AS BUYER_NM
    			, PODT.PO_NUM AS PO_NUM
    			, PODT.PO_SQ AS SEQ
    			, <include refid="com.sql.dbo"/>GETGMTDATE(POHD.PO_CREATE_DATE,#{ses.userGmt},#{ses.systemGmt},<include refid="com.sql.dateFormat"/>) AS PO_CREATE_DATE
    			, PODT.ITEM_CD AS ITEM_CD
    			, PODT.ITEM_DESC AS ITEM_DESC
    			, PODT.ITEM_SPEC AS ITEM_SPEC
    			, <include refid="com.sql.dbo"/>GETGMTDATE(PODT.DUE_DATE,#{ses.userGmt},#{ses.systemGmt},#{ses.dateFormat}<include refid="com.sql.stringMerge"/>' hh24:mi') AS DUE_DATE
    			, PODT.PO_QT AS PO_QT
    			, PODT.ORDER_UNIT_CD AS ORDER_UNIT_CD
    			, POHD.CUR AS CUR
    			, PODT.UNIT_PRC AS UNIT_PRC
    			, PODT.ITEM_AMT AS ITEM_AMT
    			, PODT.INV_QT AS INV_QT
    			, (<include refid="com.sql.nvl"/>(PODT.PO_QT, 0) - <include refid="com.sql.nvl"/>(PODT.INV_QT, 0)) AS BALANCE_QT
    			, (SELECT <include refid="com.sql.dbo"/>GETGMTDATE(MIN(GRDT.GR_DATE),#{ses.userGmt},#{ses.systemGmt},<include refid="com.sql.dateFormat"/>)
    				 FROM STOCGRDT GRDT
					WHERE GRDT.GATE_CD = PODT.GATE_CD
  					  AND GRDT.PO_NUM = PODT.PO_NUM
  					  AND GRDT.PO_SQ = PODT.PO_SQ
  					  AND GRDT.DEL_FLAG = '0') AS GR_DATE
  				, PODT.GR_QT AS GR_QT
  				, (<include refid="com.sql.nvl"/>(PODT.PO_QT, 0) - <include refid="com.sql.nvl"/>(PODT.GR_QT, 0)) AS GR_BALANCE
  				, <include refid="com.sql.dbo"/>GETGMTDATE(PODT.FORCE_CLOSE_DATE,#{ses.userGmt},#{ses.systemGmt},<include refid="com.sql.dateFormat"/>) AS FORCE_CLOSE_DATE
  				, POHD.GATE_CD AS GATE_CD
  				, POHD.BUYER_CD AS BUYER_CD
  				, POHD.DO_OWNER_TYPE
  				, POHD.DELIVERY_TYPE
    	FROM STOCPOHD POHD JOIN STOCPODT PODT
	     ON(POHD.GATE_CD = PODT.GATE_CD
	     AND POHD.PO_NUM = PODT.PO_NUM)
	    WHERE POHD.GATE_CD = #{ses.gateCd}
	     AND POHD.DEL_FLAG = '0'
	     AND PODT.DEL_FLAG = '0'
	     AND POHD.VENDOR_CD = #{ses.companyCd}
	     AND POHD.SIGN_STATUS = 'E'
	     AND POHD.VENDOR_RECEIPT_STATUS = '200'
	     <if test="COMBO_DATE != '' and COMBO_DATE != null ">
	     	<if test="COMBO_DATE == 'PO_DATE' ">
	     		AND POHD.PO_CREATE_DATE
	     	</if>
	     	<if test="COMBO_DATE == 'DELIVERY_DATE' ">
	     		AND PODT.DUE_DATE
	     	</if>
	     	BETWEEN <include refid="com.sql.toDate"/>#{FROM_DATE}, 'YYYYMMDD HH24:MI:SS') AND <include refid="com.sql.toDate"/>#{TO_DATE}, 'YYYYMMDD HH24:MI:SS')
	     </if>
	     <if test="BUYER_CD != '' and BUYER_CD != null ">
	     	AND POHD.BUYER_CD = #{BUYER_CD}
	     </if>
	     <if test="PO_NUM != '' and PO_NUM != null">
	     	AND PODT.PO_NUM <include refid="com.sql.likeL"/> #{PO_NUM} <include refid="com.sql.likeR"/>
	     </if>
	     <if test="ITEM_CD != '' and ITEM_CD != null ">
	     	AND PODT.ITEM_CD <include refid="com.sql.likeL"/> #{ITEM_CD} <include refid="com.sql.likeR"/>
	     </if>
	     <if test="COMPLETION_STATUS != '' and COMPLETION_STATUS != null">
	     	<if test="COMPLETION_STATUS == 'DELIVERY_COMPLETED' ">
	     		<![CDATA[ AND PODT.PO_QT <= PODT.INV_QT ]]>
	     	</if>
	     	<if test="COMPLETION_STATUS == 'DELIVERY_NUMT_COMPLETED' ">
	     		<![CDATA[ AND PODT.PO_QT > PODT.INV_QT ]]>

	     	</if>
	     	<if test="COMPLETION_STATUS == 'GR_COMPLETED' ">
	     		<![CDATA[ AND PODT.PO_QT <= PODT.GR_QT ]]>
	     	</if>
	     	<if test="COMPLETION_STATUS == 'GR_NUMT_COMPLETED' ">
	     		<![CDATA[ AND PODT.PO_QT > PODT.GR_QT ]]>
	     	</if>
	     </if>

	   ORDER BY PODT.DUE_DATE, POHD.PO_NUM DESC, PODT.PO_SQ ASC
    </select>

    <!-- BPOP_050 -->
    <select id="getPoRegGridItemDataByPoWaitingList" parameterType="hashMap" resultType="hashMap">
        SELECT  '1' AS SELECTED
                , POHB.GATE_CD
                , POHB.ITEM_CD
                , POHB.ITEM_DESC
                , POHB.ITEM_SPEC
                , POHB.PO_QT
                , POHB.UNIT_CD AS ORDER_UNIT_CD
                , POHB.UNIT_PRC
                , POHB.ITEM_AMT
                , <include refid="com.sql.dbo"/>GETGMTDATE(POHB.DUE_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS DUE_DATE
                , <include refid="com.sql.dbo"/>GETGMTDATE(POHB.DUE_DATE, #{ses.userGmt}, #{ses.systemGmt}, 'hh24') AS DUE_TIME
                , POHB.DELY_TO_CD
                , <include refid="com.sql.dbo"/>GETDELYTOCODENAME(#{ses.gateCd}, #{ses.companyCd}, POHB.DELY_TO_CD, #{ses.langCd}) AS DELY_TO_CD_NM
                , POHB.DELY_TO_NM
                , POHB.EXEC_NUM
                , PRDT.ACCOUNT_CD
	            , (SELECT ACCOUNT_NM
	                FROM STOCACMT
	               WHERE GATE_CD = #{ses.gateCd}
	                 AND DEL_FLAG = '0'
	                 AND USE_FLAG = '1'
	                 AND ACCOUNT_CD = PRDT.ACCOUNT_CD) AS ACCOUNT_NM
                , PRDT.COST_DEPT_CD
                , <include refid="com.sql.dbo"/>GETDEPTNAME(#{ses.gateCd}, #{ses.companyCd}, PRDT.COST_DEPT_CD, #{ses.langCd}) AS COST_DEPT_NM
                , MTGL.VAT_CD
                , PRDT.PR_NUM
                , PRDT.PR_SQ
                , CNDT.RFX_NUM
                , CNDT.RFX_CNT
                , CNDT.RFX_SQ
                , CNDT.QTA_NUM
                , CNDT.QTA_SQ
                , CNDT.EXEC_NUM
                , CNDT.EXEC_SQ
                , ECCT.CONT_NUM
                , ECCT.CONT_CNT
                , CNDT.CTRL_CD
                , CNDT.PLANT_CD
                , <include refid="com.sql.dbo"/>GETPLANTNAME(CNDT.GATE_CD, CNDT.BUYER_REQ_CD, CNDT.PLANT_CD,#{ses.langCd}) AS PLANT_NM
                , CNDT.BUYER_REQ_CD
	            , (SELECT RQHD.RFX_TYPE FROM STOCRQHD RQHD INNER JOIN STOCCNDT DT
	                ON RQHD.GATE_CD = DT.GATE_CD
	                    AND RQHD.RFX_NUM = DT.RFX_NUM
	                    AND RQHD.RFX_CNT = DT.RFX_CNT
	                    AND DT.DEL_FLAG = '0'
	                WHERE RQHD.GATE_CD = POHB.GATE_CD
	                    AND DT.EXEC_NUM = POHB.EXEC_NUM
	                    AND DT.EXEC_SQ = POHB.EXEC_SQ
	                    AND RQHD.DEL_FLAG = '0') AS RFX_TYPE
                , 'R' AS INSERT_FLAG
        FROM (
            SELECT HB.*, NDT.ITEM_DESC, NDT.ITEM_SPEC, NDT.UNIT_CD
                , NDT.DUE_DATE, NDT.DELY_TO_CD, NDT.DELY_TO_NM FROM STOCPOHB HB
                JOIN STOCCNDT NDT
                    ON (HB.GATE_CD = NDT.GATE_CD
                        AND HB.EXEC_NUM = NDT.EXEC_NUM
                        AND HB.EXEC_SQ = NDT.EXEC_SQ)
                WHERE HB.GATE_CD = #{ses.gateCd}
                    AND HB.BUYER_CD = #{ses.companyCd}
                    AND HB.PO_CREATE_TYPE = 'RP'
                    AND HB.DEL_FLAG = '0'
                    AND NDT.DEL_FLAG = '0'
            UNION ALL
            SELECT HB.*, RDT.ITEM_DESC, RDT.ITEM_SPEC, RDT.UNIT_CD
                , RDT.REQ_DUE_DATE AS DUE_DATE, RDT.DELY_TO_CD
                , RDT.DELY_TO_NM FROM STOCPOHB HB
                JOIN STOCPRDT RDT
                    ON (HB.GATE_CD = RDT.GATE_CD
                        AND HB.PR_NUM = RDT.PR_NUM
                        AND HB.PR_SQ = RDT.PR_SQ)
                WHERE HB.GATE_CD = #{ses.gateCd}
                    AND HB.BUYER_CD = #{ses.companyCd}
                    AND HB.PO_CREATE_TYPE IN ('LP', 'DP')
                    AND HB.DEL_FLAG = '0'
                    AND RDT.DEL_FLAG = '0'
        )  POHB
        LEFT JOIN STOCCNDT CNDT
            ON (POHB.GATE_CD = CNDT.GATE_CD
                        AND POHB.EXEC_NUM = CNDT.EXEC_NUM
                        AND POHB.EXEC_SQ = CNDT.EXEC_SQ)
                        AND CNDT.DEL_FLAG = '0'
        LEFT JOIN STOCPRDT PRDT
            ON (POHB.GATE_CD = PRDT.GATE_CD
                        AND POHB.PR_NUM = PRDT.PR_NUM
                        AND POHB.PR_SQ = PRDT.PR_SQ)
                        AND PRDT.DEL_FLAG = '0'
        LEFT JOIN STOCECCT ECCT
            ON (ECCT.GATE_CD = POHB.GATE_CD
                AND ECCT.EXEC_NUM = POHB.EXEC_NUM
                AND ECCT.DEL_FLAG = '0'
                )
        LEFT JOIN STOCMTGL MTGL
            ON (POHB.GATE_CD = MTGL.GATE_CD
                AND POHB.ITEM_CD = MTGL.GATE_CD
                AND MTGL.DEL_FLAG='0'
                )

        WHERE POHB.GATE_CD = #{ses.gateCd}
<!--             AND PODT.DEL_FLAG = '0' -->
            <if test="poList != null and poList != ''">
            AND (
                 <foreach collection="poList" open="(" item="po" close=")" separator="OR">
                      POHB.GATE_CD = #{po.GATE_CD} AND POHB.PO_WT_NUM = #{po.PO_WT_NUM}
                 </foreach>
            )
            </if>
    </select>

    <select id="getPoRegGridItemData" parameterType="hashMap" resultType="hashMap">
        SELECT '1' AS SELECTED
            , PODT.GATE_CD
            , PODT.ITEM_CD
            , PODT.ITEM_DESC
            , PODT.ITEM_SPEC
            , PODT.PO_QT
            , PODT.ORDER_UNIT_CD
            , PODT.UNIT_PRC
            , PODT.ITEM_AMT
            , <include refid="com.sql.dbo"/>GETGMTDATE(PODT.DUE_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS DUE_DATE
            , <include refid="com.sql.dbo"/>GETGMTDATE(PODT.DUE_DATE, #{ses.userGmt}, #{ses.systemGmt}, 'hh24') AS DUE_TIME
            , PODT.DELY_TO_CD
            , <include refid="com.sql.dbo"/>GETDELYTOCODENAME(#{ses.gateCd}, #{ses.companyCd}, PODT.DELY_TO_CD, #{ses.langCd}) AS DELY_TO_CD_NM
            , PODT.DELY_TO_NM
            , PODT.ACCOUNT_CD
            , <include refid="com.sql.dbo"/>getAccountName(#{ses.gateCd}, #{ses.companyCd}, PODT.ACCOUNT_CD) AS ACCOUNT_NM
            , PODT.COST_DEPT_CD
            , <include refid="com.sql.dbo"/>GETDEPTNAME(#{ses.gateCd}, #{ses.companyCd}, PODT.COST_DEPT_CD, #{ses.langCd}) AS COST_DEPT_NM
            , PODT.VAT_CD
            , PODT.CTRL_CD
            , PODT.BUYER_REQ_CD
            , PODT.PLANT_CD
            , <include refid="com.sql.dbo"/>GETPLANTNAME(PODT.GATE_CD, PODT.BUYER_REQ_CD, PODT.PLANT_CD,#{ses.langCd}) AS PLANT_NM
            , PODT.PO_NUM
            , PODT.PO_SQ
            , PODT.PR_NUM
            , PODT.PR_SQ
            , CNDT.RFX_NUM
            , CNDT.RFX_CNT
            , CNDT.RFX_SQ
            , CNDT.QTA_NUM
            , CNDT.QTA_SQ
            , PODT.EXEC_NUM
            , PODT.EXEC_SQ
            , ECCT.CONT_NUM
            , ECCT.CONT_CNT
            , (SELECT RQHD.RFX_TYPE FROM STOCRQHD RQHD INNER JOIN STOCCNDT DT
                ON RQHD.GATE_CD = DT.GATE_CD
	                AND RQHD.RFX_NUM = DT.RFX_NUM
	                AND RQHD.RFX_CNT = DT.RFX_CNT
	                AND DT.DEL_FLAG = '0'
                WHERE RQHD.GATE_CD = PODT.GATE_CD
	                AND DT.EXEC_NUM = PODT.EXEC_NUM
	                AND DT.EXEC_SQ = PODT.EXEC_SQ
	                AND RQHD.DEL_FLAG = '0') AS RFX_TYPE
        FROM STOCPODT PODT
        LEFT JOIN STOCCNDT CNDT
            ON (CNDT.GATE_CD = PODT.GATE_CD
                AND CNDT.EXEC_NUM = PODT.EXEC_NUM
                AND CNDT.EXEC_SQ = PODT.EXEC_SQ
                AND CNDT.DEL_FLAG = '0')
        LEFT JOIN STOCPRDT PRDT
            ON (PRDT.GATE_CD = PODT.GATE_CD
                AND PRDT.PR_NUM = PODT.EXEC_NUM
                AND PRDT.PR_SQ = PODT.EXEC_SQ
                AND PRDT.DEL_FLAG = '0')
        LEFT JOIN STOCECCT ECCT
            ON (ECCT.GATE_CD = PODT.GATE_CD
                AND ECCT.EXEC_NUM = PODT.EXEC_NUM
                AND ECCT.DEL_FLAG = '0')
        WHERE PODT.GATE_CD = #{ses.gateCd}
            AND PODT.DEL_FLAG = '0'
            AND PODT.PO_NUM = #{PO_NUM}
		ORDER BY PODT.PO_SQ
    </select>

    <select id="getPoRegFormPoProgressInfoData" parameterType="hashMap" resultType="hashMap">
        SELECT PODT.GATE_CD
            , PODT.DO_RMK
            , PODT.DO_ATT_FILE_NUM
            , PODT.PO_NUM
            , PODT.PO_SQ
        FROM STOCPODT PODT
        WHERE PODT.GATE_CD = #{ses.gateCd}
            AND PODT.DEL_FLAG = '0'
            AND PODT.PO_NUM = #{PO_NUM}
<!--             <if test="PO_SQ != '' and PO_SQ != null" >  -->
<!--                 AND PODT.PO_SQ = #{PO_SQ} -->
<!--             </if>                     -->
            <choose>
                 <when test="PO_SQ != '' and PO_SQ != null" >
					AND PODT.PO_SQ = #{PO_SQ}
                 </when>
                 <otherwise>
                    AND PODT.PO_SQ = '-1'
                 </otherwise>
            </choose>
    </select>

    <select id="getPoRegGridDOData" parameterType="hashMap" resultType="hashMap">
        SELECT PODO.GATE_CD
            , PODO.DO_NUM
            , <include refid="com.sql.dbo"/>GETGMTDATE(PODO.DO_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS DO_DATE
            , <include refid="com.sql.dbo"/>GETGMTDATE(PODO.DO_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateFormat}<include refid="com.sql.stringMerge"/>' hh24:mi') AS DO_DATE_TIME
            , PODO.DO_QT
            , PODO.PO_NUM
            , PODO.PO_SQ
        FROM STOCPODO PODO LEFT JOIN
            STOCPODT PODT ON PODO.GATE_CD = PODT.GATE_CD
                AND PODO.PO_NUM = PODT.PO_NUM
                AND PODO.PO_SQ = PODT.PO_SQ
                AND PODT.DEL_FLAG = '0'
        WHERE PODO.GATE_CD = #{ses.gateCd}
            AND PODO.DEL_FLAG = '0'
            AND PODO.PO_NUM = #{PO_NUM}
            <if test="PO_SQ != '' and PO_SQ != null" >
                AND PODO.PO_SQ = #{PO_SQ}
            </if>
    </select>

    <select id="getPoRegGridInvoiceData" parameterType="hashMap" resultType="hashMap">
        SELECT IVDT.GATE_CD
            , IVDT.INV_NUM
            , IVDT.INV_SQ
            , <include refid="com.sql.dbo"/>GETGMTDATE(IVDT.REG_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS INV_DATE
            , <include refid="com.sql.dbo"/>GETGMTDATE(IVDT.REG_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateFormat}<include refid="com.sql.stringMerge"/>' hh24:mi') AS INV_DATE_TIME
            , IVDT.INV_QT
            , IVDT.ITEM_AMT
            , IVDT.PO_NUM
            , IVDT.PO_SQ
        FROM STOCIVDT IVDT
        WHERE IVDT.GATE_CD = #{ses.gateCd}
            AND IVDT.DEL_FLAG = '0'
            AND IVDT.PO_NUM = #{PO_NUM}
            <if test="PO_SQ != '' and PO_SQ != null" >
                AND IVDT.PO_SQ = #{PO_SQ}
            </if>
        ORDER BY IVDT.INV_NUM ASC, IVDT.INV_SQ ASC
    </select>

    <select id="getPoRegGridGRData" parameterType="hashMap" resultType="hashMap">

        SELECT GRDT.GATE_CD
            , GRDT.GR_NUM
            , GRDT.GR_SQ
            , <include refid="com.sql.dbo"/>GETGMTDATE(GRDT.GR_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS GR_DATE
            , <include refid="com.sql.dbo"/>GETGMTDATE(GRDT.GR_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateFormat}<include refid="com.sql.stringMerge"/>' hh24:mi') AS GR_DATE_TIME
            , GRDT.GR_QT
            , GRDT.GR_AMT
            , GRDT.PO_NUM
            , GRDT.PO_SQ
        FROM STOCGRDT GRDT
        WHERE GRDT.GATE_CD = #{ses.gateCd}
            AND GRDT.DEL_FLAG = '0'
            AND GRDT.PO_NUM = #{PO_NUM}
            <if test="PO_SQ != '' and PO_SQ != null" >
                AND GRDT.PO_SQ = #{PO_SQ}
            </if>
		ORDER BY GRDT.GR_NUM ASC, GRDT.GR_SQ ASC

    </select>

    <select id="getPoRegGridTaxInvoiceData" parameterType="hashMap" resultType="hashMap">
        SELECT DLDT.GATE_CD
             , DLDT.DEAL_NUM
             , DLDT.DEAL_SQ
             , <include refid="com.sql.dbo"/>GETGMTDATE(DLHD.DEAL_DATE, #{ses.userGmt}, #{ses.systemGmt}, <include refid="com.sql.dateFormat"/>) AS DEAL_DATE
             , <include refid="com.sql.dbo"/>GETGMTDATE(DLHD.DEAL_DATE, #{ses.userGmt}, #{ses.systemGmt}, #{ses.dateFormat}<include refid="com.sql.stringMerge"/>' hh24:mi') AS DEAL_DATE_TIME
             , DLDT.VAT_AMT
             , DLDT.GR_AMT
             , (DLDT.GR_AMT + DLDT.VAT_AMT) AS GR_VAT_AMT
             , DLHD.VAT_CD
             , DLHD.TAX_NUM
             , GRDT.PO_NUM
             , GRDT.PO_SQ
        FROM STOCDLDT DLDT
        LEFT JOIN STOCGRDT GRDT
            ON GRDT.GATE_CD       = DLDT.GATE_CD
                AND GRDT.GR_NUM   = DLDT.GR_NUM
                AND GRDT.GR_SQ    = DLDT.GR_SQ
                AND GRDT.GR_YEAR  = DLDT.GR_YEAR
                AND GRDT.DEL_FLAG = '0'
        INNER JOIN STOCDLHD DLHD
            ON DLDT.GATE_CD   = DLHD.GATE_CD
            AND DLDT.DEAL_NUM = DLHD.DEAL_NUM
            AND DLHD.DEL_FLAG = '0'
        WHERE DLDT.GATE_CD    = #{ses.gateCd}
            AND DLDT.DEL_FLAG = '0'
            AND GRDT.PO_NUM   = #{PO_NUM}
           <if test="PO_SQ != '' and PO_SQ != null" >
            AND GRDT.PO_SQ = #{PO_SQ}
           </if>
    </select>
</mapper>