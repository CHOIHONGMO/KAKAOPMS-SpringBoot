<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.st_ones.eversrm.srm.master.sourcing.SRM_010_Mapper">

	<resultMap type="java.util.HashMap" id="getReturnMap">
		<result property="title" column="SCREEN_NM" />
		<result property="key" column="KEY2" />
		<result property="depth" column="DEPTH" />
		<result property="sortSq" column="SORT_SQ" />
		<result property="parent_sg_num" column="PARENT_SG_NUM" />
		<result property="att_file_num" column="ATT_FILE_NUM" />
		<result property="sg_def_text_num" column="SG_DEF_TEXT_NUM" />
		<result property="leaf_flag" column="LEAF_FLAG" />
		<result property="srs_ev_num" column="SRS_EV_NUM" />
		<result property="scre_ev_tpl_num" column="SCRE_EV_TPL_NUM" />
		<result property="scre_ev_tpl_subject" column="SCRE_EV_TPL_SUBJECT" />
		<result property="site_ev_tpl_num" column="SITE_EV_TPL_NUM" />
		<result property="site_ev_tpl_subject" column="SITE_EV_TPL_SUBJECT" />
		<result property="ctrl_user_id" column="CTRL_USER_ID" />
		<result property="ctrl_user_nm" column="CTRL_USER_nm" />
		<result property="isFolder" column="IS_FOLDER" />
		<result property="sort_sq_cnt" column="SORT_SQ_CNT" />
	</resultMap>

    <select id="doSearchTree" parameterType="hashMap" resultMap="getReturnMap" >

        SELECT
			 <include refid="com.sql.dbo"/>GETMULTINAME(SGMT.GATE_CD, 'SG', #{ses.langCd}, SGMT.SG_NUM, '-') AS SCREEN_NM
            , SGMT.SG_NUM AS KEY2
			, SGMT.DEPTH
			, SGMT.SORT_SQ
			, CASE WHEN <include refid="com.sql.trim"/>(SGMT.PARENT_SG_NUM) = '' OR <include refid="com.sql.trim"/>(SGMT.PARENT_SG_NUM) IS NULL THEN ''
				   ELSE <include refid="com.sql.trim"/>(SGMT.PARENT_SG_NUM) END AS PARENT_SG_NUM
            , SGMT.ATT_FILE_NUM
            , SGMT.SG_DEF_TEXT_NUM
			, SGMT.LEAF_FLAG
			, SGMT.SRS_EV_NUM
			, SGMT.SCRE_EV_TPL_NUM
			,(SELECT EVTM.EV_TPL_SUBJECT FROM STOCEVTM EVTM WHERE EVTM.EV_TPL_NUM = SGMT.SCRE_EV_TPL_NUM AND EVTM.GATE_CD = SGMT.GATE_CD) AS SCRE_EV_TPL_SUBJECT
			, SGMT.SITE_EV_TPL_NUM
			,(SELECT EVTM.EV_TPL_SUBJECT FROM STOCEVTM EVTM WHERE EVTM.EV_TPL_NUM = SGMT.SITE_EV_TPL_NUM AND EVTM.GATE_CD = SGMT.GATE_CD) AS SITE_EV_TPL_SUBJECT
			, SGMT.CTRL_USER_ID
			,<include refid="com.sql.dbo"/>GETUSERNAME(GATE_CD, CTRL_USER_ID, #{ses.langCd}) AS CTRL_USER_NM
			, CASE WHEN (SELECT COUNT(1) FROM STOCSGMT WHERE PARENT_SG_NUM = SGMT.SG_NUM AND DEL_FLAG = '0') = 0 THEN 'false'  ELSE 'true' END AS IS_FOLDER
		 	,(SELECT COUNT(SORT_SQ) + 1 FROM STOCSGMT WHERE SGMT.GATE_CD = #{ses.gateCd}) AS SORT_SQ_CNT
         FROM STOCSGMT SGMT
        WHERE SGMT.GATE_CD = #{ses.gateCd}
		<choose>
			<when test="SG_NUM != '' and SG_NUM != null">
				AND (CASE WHEN (SGMT.PARENT_SG_NUM = '' OR SGMT.PARENT_SG_NUM IS NULL) THEN ''
						  ELSE SGMT.PARENT_SG_NUM END) = #{SG_NUM}
			</when>
			<otherwise>
				AND (CASE WHEN (SGMT.PARENT_SG_NUM = '' OR SGMT.PARENT_SG_NUM IS NULL) THEN ''
						  ELSE SGMT.PARENT_SG_NUM END) = ''
			</otherwise>
		</choose>
          AND SGMT.DEL_FLAG = 0
        ORDER BY SGMT.DEPTH, SGMT.SORT_SQ

    </select>

	<select id="doSearchDtree" parameterType="hashMap" resultType="hashMap" >

		SELECT
		T.*
		 ,(CASE WHEN T.DEPTH = '1' THEN T.SG_NM
		        WHEN T.DEPTH = '2' THEN (SELECT MULTI_NM FROM STOCMULG WHERE GATE_CD = T.GATE_CD AND LANG_CD = #{ses.langCd} AND DEL_FLAG = '0' AND MULTI_CD = 'SG' AND OTHER_CD = T.ITEM_CLS1) ||' > '||
		                                (SELECT MULTI_NM FROM STOCMULG WHERE GATE_CD = T.GATE_CD AND LANG_CD = #{ses.langCd} AND DEL_FLAG = '0' AND MULTI_CD = 'SG' AND OTHER_CD = T.ITEM_CLS2)
		        WHEN T.DEPTH = '3' THEN (SELECT MULTI_NM FROM STOCMULG WHERE GATE_CD = T.GATE_CD AND LANG_CD = #{ses.langCd} AND DEL_FLAG = '0' AND MULTI_CD = 'SG' AND OTHER_CD = T.ITEM_CLS1) ||' > '||
		                                (SELECT MULTI_NM FROM STOCMULG WHERE GATE_CD = T.GATE_CD AND LANG_CD = #{ses.langCd} AND DEL_FLAG = '0' AND MULTI_CD = 'SG' AND OTHER_CD = T.ITEM_CLS2) ||' > '||
		                                (SELECT MULTI_NM FROM STOCMULG WHERE GATE_CD = T.GATE_CD AND LANG_CD = #{ses.langCd} AND DEL_FLAG = '0' AND MULTI_CD = 'SG' AND OTHER_CD = T.ITEM_CLS3)
		        WHEN T.DEPTH = '4' THEN (SELECT MULTI_NM FROM STOCMULG WHERE GATE_CD = T.GATE_CD AND LANG_CD = #{ses.langCd} AND DEL_FLAG = '0' AND MULTI_CD = 'SG' AND OTHER_CD = T.ITEM_CLS1) ||' > '||
		                                (SELECT MULTI_NM FROM STOCMULG WHERE GATE_CD = T.GATE_CD AND LANG_CD = #{ses.langCd} AND DEL_FLAG = '0' AND MULTI_CD = 'SG' AND OTHER_CD = T.ITEM_CLS2) ||' > '||
		                                (SELECT MULTI_NM FROM STOCMULG WHERE GATE_CD = T.GATE_CD AND LANG_CD = #{ses.langCd} AND DEL_FLAG = '0' AND MULTI_CD = 'SG' AND OTHER_CD = T.ITEM_CLS3) ||' > '||
		                                (SELECT MULTI_NM FROM STOCMULG WHERE GATE_CD = T.GATE_CD AND LANG_CD = #{ses.langCd} AND DEL_FLAG = '0' AND MULTI_CD = 'SG' AND OTHER_CD = T.ITEM_CLS4)
		    END) AS ITEM_CLS_PATH_NM	
		FROM(
			SELECT
				SGMT.GATE_CD
				, <include refid="com.sql.dbo"/>GETMULTINAME(SGMT.GATE_CD, 'SG', #{ses.langCd}, SGMT.SG_NUM, '-') AS SG_NM
				, SGMT.SG_NUM
				, SGMT.DEPTH
				, SGMT.SORT_SQ
				, CASE WHEN <include refid="com.sql.trim"/>(SGMT.PARENT_SG_NUM) = '' OR <include refid="com.sql.trim"/>(SGMT.PARENT_SG_NUM) IS NULL THEN ''
				ELSE <include refid="com.sql.trim"/>(SGMT.PARENT_SG_NUM) END AS PARENT_SG_NUM
				, SGMT.ATT_FILE_NUM
				, SGMT.SG_DEF_TEXT_NUM
				, SGMT.LEAF_FLAG
				, SGMT.SRS_EV_NUM
				, SGMT.SCRE_EV_TPL_NUM
				,(SELECT EVTM.EV_TPL_SUBJECT FROM STOCEVTM EVTM WHERE EVTM.EV_TPL_NUM = SGMT.SCRE_EV_TPL_NUM AND EVTM.GATE_CD =
				SGMT.GATE_CD) AS SCRE_EV_TPL_SUBJECT
				, SGMT.SITE_EV_TPL_NUM
				,(SELECT EVTM.EV_TPL_SUBJECT FROM STOCEVTM EVTM WHERE EVTM.EV_TPL_NUM = SGMT.SITE_EV_TPL_NUM AND EVTM.GATE_CD =
				SGMT.GATE_CD) AS SITE_EV_TPL_SUBJECT
				, SGMT.CTRL_USER_ID AS CTRL_USER_ID
				,<include refid="com.sql.dbo"/>GETUSERNAME(SGMT.GATE_CD, SGMT.CTRL_USER_ID, #{ses.langCd}) AS CTRL_USER_NM
				, CASE WHEN (SELECT COUNT(1) FROM STOCSGMT WHERE <include refid="com.sql.trim"/>(PARENT_SG_NUM) = SGMT.SG_NUM AND DEL_FLAG =
				'0') = 0 THEN 'false' ELSE 'true' END AS IS_FOLDER
				,(SELECT COUNT(SORT_SQ) + 1 FROM STOCSGMT WHERE SGMT.GATE_CD = #{ses.gateCd}) AS SORT_SQ_CNT
				,(CASE WHEN SGMT.DEPTH = '1' THEN  SGMT.SG_NUM
					   WHEN SGMT.DEPTH = '2' THEN (SELECT trim(A2.PARENT_SG_NUM) FROM STOCSGMT A2 WHERE  A2.GATE_CD = SGMT.GATE_CD AND A2.DEPTH = '2' AND A2.DEL_FLAG = '0' AND A2.SG_NUM =SGMT.SG_NUM)
					   WHEN SGMT.DEPTH = '3' THEN (SELECT trim(A2.PARENT_SG_NUM) FROM STOCSGMT A2 WHERE  A2.GATE_CD = SGMT.GATE_CD AND A2.DEPTH = '2' AND A2.DEL_FLAG = '0' AND A2.SG_NUM =(SELECT trim(A3.PARENT_SG_NUM) FROM STOCSGMT A3 WHERE  A3.GATE_CD = SGMT.GATE_CD AND A3.DEPTH = '3' AND A3.DEL_FLAG = '0' AND A3.SG_NUM =SGMT.SG_NUM))
					   END) AS ITEM_CLS1
				,(CASE WHEN SGMT.DEPTH = '1' THEN  '*'
					   WHEN SGMT.DEPTH = '2' THEN SGMT.SG_NUM
					   WHEN SGMT.DEPTH = '3' THEN (SELECT trim(A3.PARENT_SG_NUM) FROM STOCSGMT A3 WHERE  A3.GATE_CD = SGMT.GATE_CD AND A3.DEPTH = '3' AND A3.DEL_FLAG = '0' AND A3.SG_NUM =SGMT.SG_NUM)
					   END) AS ITEM_CLS2
				,(CASE WHEN SGMT.DEPTH = '1' THEN  '*'
					   WHEN SGMT.DEPTH = '2' THEN '*'
					   WHEN SGMT.DEPTH = '3' THEN  SGMT.SG_NUM
					   END) AS ITEM_CLS3
				, '*' AS ITEM_CLS4
			FROM STOCSGMT SGMT
			WHERE SGMT.GATE_CD = #{ses.gateCd}
			<if test="SG_NUM != '' and SG_NUM != null">
				AND (CASE WHEN (SGMT.PARENT_SG_NUM = '' OR SGMT.PARENT_SG_NUM IS NULL) THEN ''
				ELSE SGMT.PARENT_SG_NUM END) = #{SG_NUM}
			</if>
			AND SGMT.DEL_FLAG = 0
		)T
		ORDER BY T.DEPTH, TO_NUMBER(T.SORT_SQ)

	</select>
    
    <select id='doCountExist' parameterType="hashMap" resultType="int">
    	SELECT COUNT(*) FROM STOCSGMT WHERE DEL_FLAG = '0' AND GATE_CD = #{ses.gateCd} AND SG_NUM=#{SG_NUM}
    </select>
    
    <insert id="saveSgDefinition" parameterType="hashMap">
		<selectKey keyProperty="SORT_SQ_MAX" resultType="int" order="BEFORE">
			SELECT <include refid="com.sql.nvl"/>(MAX(TO_NUMBER(SORT_SQ)) + 1, 1) AS SORT_SQ_MAX
			  FROM STOCSGMT
			 WHERE GATE_CD = #{ses.gateCd}
			<if test="PARENT_SG_NUM != null and PARENT_SG_NUM != ''">
			   AND PARENT_SG_NUM = #{PARENT_SG_NUM}
			</if>
			<if test="PARENT_SG_NUM == null or PARENT_SG_NUM == ''">
				AND PARENT_SG_NUM IS NULL
			</if>
			   AND DEL_FLAG = '0'
		</selectKey>

        INSERT INTO STOCSGMT (
            GATE_CD
            ,SG_NUM
            ,REG_DATE
            ,REG_USER_ID
            ,MOD_DATE
            ,MOD_USER_ID
            ,DEL_FLAG
            
            ,DEPTH
            ,LEAF_FLAG
            ,SORT_SQ
            ,PARENT_SG_NUM
            ,ATT_FILE_NUM
            ,SG_DEF_TEXT_NUM
            ,SCRE_EV_TPL_NUM
			,SITE_EV_TPL_NUM
			,CTRL_USER_ID
			            
            
        )
        VALUES(
             #{ses.gateCd}
            ,#{SG_NUM}
            ,<include refid="com.sql.sysdate"/>
            ,#{ses.userId}
            ,<include refid="com.sql.sysdate"/>
            ,#{ses.userId}
            ,'0'
           
            ,#{DEPTH}
            ,#{LEAF}
            ,#{SORT_SQ_MAX}
            ,<include refid="com.sql.trim"/>(#{PARENT_SG_NUM})
            ,#{ATT_FILE_NUM}
            ,#{SG_DEF_TEXT_NUM}
            ,#{SCRE_EV_TPL_NUM}
			,#{SITE_EV_TPL_NUM}
			,#{CTRL_USER_ID}
            
        )
    </insert>
    
    <update id="updateSgDefinition" parameterType="hashMap">
        UPDATE STOCSGMT SET 
            GATE_CD = #{ses.gateCd}
            ,SG_NUM = #{SG_NUM}
            ,MOD_DATE = <include refid="com.sql.sysdate"/>
            ,MOD_USER_ID = #{ses.userId}
            ,DEL_FLAG = '0'
<!--             ,SG_NUM = #{SG_NUM} -->
<!--            ,DEPTH = #{DEPTH} -->
<!--            ,LEAF_FLAG = #{LEAF} -->
<!--            ,SORT_SQ = #{SORT_SQ} -->
<!--            ,PARENT_SG_NUM = #{PARENT_SG_NUM} -->
            ,ATT_FILE_NUM = #{ATT_FILE_NUM}
            ,SG_DEF_TEXT_NUM = #{SG_DEF_TEXT_NUM}
            ,SCRE_EV_TPL_NUM = #{SCRE_EV_TPL_NUM}
			,SITE_EV_TPL_NUM = #{SITE_EV_TPL_NUM}
			,CTRL_USER_ID = #{CTRL_USER_ID}
        WHERE SG_NUM = #{SG_NUM}
        AND DEL_FLAG = '0'
        AND GATE_CD = #{ses.gateCd}
    </update>
    
    <select id="getWholeTreeBySG_NO" parameterType="hashMap" resultType="hashmap">
	    <if test="_databaseId == 'oracle'">     
	    	SELECT SG_NUM 
	    	FROM STOCSGMT
	    	CONNECT BY PRIOR SG_NUM = <include refid="com.sql.trim"/>(PARENT_SG_NUM) 
	    	START WITH SG_NUM = #{SG_NUM}  
	    	ORDER BY SG_NUM DESC
	    </if>
    	<if test="_databaseId == 'mssql'">                
        WITH CTE_TABLE
		AS
		(
			  SELECT SG_NUM
			  FROM STOCSGMT A
			  WHERE A.SG_NUM = #{SG_NUM}
			  UNION ALL
			  SELECT B.SG_NUM
			  FROM STOCSGMT B	
			  JOIN CTE_TABLE C ON C.SG_NUM = B.PARENT_SG_NUM
			  					AND B.DEL_FLAG = '0'
		)
		SELECT A.SG_NUM FROM STOCSGMT A
			JOIN CTE_TABLE B on A.SG_NUM = B.SG_NUM
				AND A.GATE_CD = #{ses.gateCd}
				AND A.DEL_FLAG = '0'
    </if>
    </select>
    
    <delete id="deleteSGDefinition" parameterType="hashMap">

		DELETE STOCSGMT
		WHERE SG_NUM in
		<foreach item="node" collection="treeList" open="(" separator="," close=")">
			#{node.SG_NUM}
		</foreach>
		AND GATE_CD = #{ses.gateCd}
        
    </delete>

	<delete id="deleteSGNMDefinition" parameterType="hashMap">

		DELETE STOCMULG
		WHERE MULTI_CD='SG'
		  AND OTHER_CD in
		<foreach item="node" collection="treeList" open="(" separator="," close=")">
			#{node.SG_NUM}
		</foreach>
		AND GATE_CD = #{ses.gateCd}

	</delete>
    
     <update id="deleteSupplierWithDefinition" parameterType="hashMap">
    	UPDATE STOCSGVN
        SET DEL_FLAG = '1'
           ,MOD_DATE = <include refid="com.sql.sysdate"/>
           ,MOD_USER_ID = #{ses.userId}
    	WHERE 1=1 
    	<if test="treeList != null">AND SG_NUM in</if>
    	<foreach item="node" collection="treeList" open="(" separator="," close=")">
        	#{node.SG_NUM}
        </foreach>
    	AND GATE_CD = #{ses.gateCd}
    	AND DEL_FLAG = '0'
    </update>
    
     <update id="deletePICWithDefinition" parameterType="hashMap">
    	UPDATE STOCSGUS
    	SET DEL_FLAG = '1'
    	   ,MOD_DATE = <include refid="com.sql.sysdate"/>
           ,MOD_USER_ID = #{ses.userId}
    	WHERE SG_NUM in 
		<foreach item="node" collection="treeList" open="(" separator="," close=")">
        	#{node.SG_NUM}
        </foreach>
    	AND GATE_CD = #{ses.gateCd}
    	AND DEL_FLAG = '0'
    </update>
    
    <update id="deleteItemClassWithDefinition" parameterType="hashMap">
    	UPDATE STOCSGMC
    	SET DEL_FLAG = '1'
    	   ,MOD_DATE = <include refid="com.sql.sysdate"/>
           ,MOD_USER_ID = #{ses.userId}
    	WHERE SG_NUM in 
    	<foreach item="node" collection="treeList" open="(" separator="," close=")">
        	#{node.SG_NUM}
        </foreach>
    	AND GATE_CD = #{ses.gateCd}
    	AND DEL_FLAG = '0'
    </update>
    
    <select id="doGetSgInfoById" parameterType="hashMap" resultType="hashMap">
         SELECT

<!--             , SGMT.SG_NUM  -->
              <include refid="com.sql.dbo"/>GETMULTINAME(SGMT.GATE_CD, 'SG', #{ses.langCd}, SGMT.SG_NUM, '-') AS "SG_NM"
            , SGMT.SG_NUM
            , SGMT.ATT_FILE_NUM
            , SGMT.SG_DEF_TEXT_NUM
            , SGMT.DEPTH
            , SGMT.LEAF_FLAG
            , SGMT.PARENT_SG_NUM
            , SGMT.SCRE_EV_TPL_NUM 
            , (SELECT EVTM.EV_TPL_SUBJECT FROM STOCEVTM EVTM WHERE EVTM.EV_TPL_NUM = SGMT.SCRE_EV_TPL_NUM AND EVTM.GATE_CD = SGMT.GATE_CD) AS SCRE_EV_TPL_SUBJECT
			, SGMT.SITE_EV_TPL_NUM
            , (SELECT EVTM.EV_TPL_SUBJECT FROM STOCEVTM EVTM WHERE EVTM.EV_TPL_NUM = SGMT.SITE_EV_TPL_NUM AND EVTM.GATE_CD = SGMT.GATE_CD) AS SITE_EV_TPL_SUBJECT
			, SGMT.CTRL_USER_ID
			, <include refid="com.sql.dbo"/>GETUSERNAME(GATE_CD, SGMT.CTRL_USER_ID, #{ses.langCd}) AS CTRL_USER_NM
			, SGMT.SRS_EV_NUM
        FROM STOCSGMT SGMT
        WHERE SGMT.GATE_CD = #{ses.gateCd}
        AND SGMT.DEL_FLAG = '0'
        AND SG_NUM = #{SG_NUM}
                
    </select>
    
    <select id="doSearchSupplierInfo" parameterType="hashMap" resultType="hashMap">
        SELECT SG_NUM
             , VENDOR_CD
             , <include refid="com.sql.dbo"/>GETVENDORNAME(GATE_CD, VENDOR_CD, #{ses.langCd}) AS VENDOR_NM
             ,'Y' AS INSERT_FLAG
             ,(SELECT MAJOR_ITEM_NM FROM STOCVNGL WHERE GATE_CD= SGVN.GATE_CD AND VENDOR_CD = SGVN.VENDOR_CD) AS MAJOR_ITEM_TEXT
          FROM STOCSGVN SGVN
         WHERE GATE_CD = #{ses.gateCd}
           AND DEL_FLAG = '0'
           AND SG_NUM = #{SG_NUM}
    </select>
    
     <select id="checkExistSupplier" parameterType="hashMap" resultType="int">
    	SELECT COUNT(*) AS "NUMBER"
	      FROM STOCSGVN
	     WHERE SG_NUM = #{SG_NUM}
	    	AND GATE_CD = #{ses.gateCd}
	    	AND DEL_FLAG = '0'
	    	AND VENDOR_CD = #{VENDOR_CD}
    </select>
    
    <insert id="doSaveSupplierInfo" parameterType="hashMap">
        INSERT INTO STOCSGVN (
            GATE_CD
            , SG_NUM
            , VENDOR_CD
            , REG_DATE
            , REG_USER_ID
            , MOD_DATE
            , MOD_USER_ID
            , DEL_FLAG
            
        )VALUES(
            #{ses.gateCd}
            , #{SG_NUM}
            , #{VENDOR_CD}
            , <include refid="com.sql.sysdate"/>
            , #{ses.userId}
            , <include refid="com.sql.sysdate"/>
            , #{ses.userId}
            , '0'
        )
    </insert>
    
    <update id="doDeleteSuplier" parameterType="hashMap">
    	DELETE STOCSGVN
    	WHERE SG_NUM = #{SG_NUM}
    	AND GATE_CD = #{ses.gateCd}
    	AND DEL_FLAG = '0'
    	AND VENDOR_CD = #{VENDOR_CD}
    </update>
    
    <select id="doSearchPICInfo" parameterType="hashMap" resultType="hashMap">
    	SELECT   SGUS.SG_NUM
				,SGUS.USER_ID
				,<include refid="com.sql.dbo"/>GETUSERNAME(SGUS.GATE_CD, SGUS.USER_ID, #{ses.langCd}) AS  USER_NM
				,<include refid="com.sql.dbo"/>GETDEPTNAME(SGUS.GATE_CD, USERX.COMPANY_CD, USERX.DEPT_CD, #{ses.langCd}) AS DEPT_NM
				,SGUS.REP_FLAG
				,SGUS.EVAL_FLAG
				,USERX.POSITION_NM AS "JOB"
		FROM STOCSGUS SGUS JOIN STOCUSER USERX
			ON SGUS.USER_ID = USERX.USER_ID
				AND SGUS.GATE_CD = USERX.GATE_CD
				AND USERX.DEL_FLAG = '0'
		WHERE SGUS.GATE_CD = #{ses.gateCd}
		AND  SGUS.DEL_FLAG = '0'
		AND SGUS.SG_NUM = #{SG_NUM}
				    	
    </select>
    
  
    <select id="checkExistPic" parameterType="hashMap" resultType="int">
    	SELECT COUNT(*) AS "NUMBER"
	    	FROM STOCSGUS
	    	WHERE SG_NUM = #{SG_NUM}
	    	AND GATE_CD = #{ses.gateCd}
	    	AND DEL_FLAG = '0'
	    	AND USER_ID = #{USER_ID}
    </select>
    
    <insert id="doSavePic" parameterType="hashMap">
		 MERGE INTO STOCSGUS A
		 USING (SELECT #{ses.gateCd} AS GATE_CD
		 			, #{SG_NUM} AS SG_NUM
		 			, #{USER_ID} AS USER_ID
		   	    <include refid="com.sql.dual"/>) B
			ON (A.GATE_CD = B.GATE_CD
		   AND 	A.SG_NUM = B.SG_NUM
		   AND A.USER_ID = B.USER_ID)
		  WHEN MATCHED THEN
		UPDATE SET
			   MOD_DATE = <include refid="com.sql.sysdate"/>
			 , MOD_USER_ID = #{ses.userId}
			 , DEL_FLAG = '0'
			 , REP_FLAG = #{REP_FLAG}
			 , EVAL_FLAG = #{EVAL_FLAG}
		  WHEN NOT MATCHED THEN
		INSERT (
			   GATE_CD
			 , SG_NUM
			 , USER_ID
			 , REG_DATE
			 , REG_USER_ID
			 , DEL_FLAG
			 , REP_FLAG
			 , EVAL_FLAG
		) VALUES (
			   #{ses.gateCd}
			 , #{SG_NUM}
             , #{USER_ID}
             , <include refid="com.sql.sysdate"/>
             , #{ses.userId}
             , '0'
             , #{REP_FLAG}
             , #{EVAL_FLAG}
		<include refid="com.sql.mergeEnd"/>
    </insert>
    
    <update id="doDeletePic" parameterType="hashMap">
    	UPDATE STOCSGUS
    	SET DEL_FLAG = '1'
    	   ,MOD_DATE = <include refid="com.sql.sysdate"/>
           ,MOD_USER_ID = #{ses.userId}
    	WHERE SG_NUM = #{SG_NUM}
    	AND GATE_CD = #{ses.gateCd}
    	AND DEL_FLAG = '0'
    </update>

	<select id="doSearchItemClassnfo" parameterType="hashMap" resultType="hashMap">
        SELECT 
			    SGMC.SG_NUM ,
			    SGMC.ITEM_CLS1,
			    SGMC.ITEM_CLS2,
			    SGMC.ITEM_CLS3,
			    SGMC.ITEM_CLS4,
			    'Y' AS INSERT_FLAG,
			    <include refid="com.sql.dbo"/>GETITEMCLASS(#{ses.gateCd},SGMC.ITEM_CLS1,'1') AS ITEM_CLS_NM1,
			    <include refid="com.sql.dbo"/>GETITEMCLASS(#{ses.gateCd},SGMC.ITEM_CLS2,'2') AS ITEM_CLS_NM2,
				<include refid="com.sql.dbo"/>GETITEMCLASS(#{ses.gateCd},SGMC.ITEM_CLS3,'3') AS ITEM_CLS_NM3,
				MTCA.ITEM_CLS_NM AS ITEM_CLS_NM4,
				CASE WHEN MTCA.ITEM_CLS_TYPE='C1' THEN  <include refid="com.sql.dbo"/>GETITEMCLASS(#{ses.gateCd},SGMC.ITEM_CLS1,'1')
                  WHEN MTCA.ITEM_CLS_TYPE='C2' THEN  <include refid="com.sql.dbo"/>GETITEMCLASS(#{ses.gateCd},SGMC.ITEM_CLS1,'1') ||' > '|| <include refid="com.sql.dbo"/>GETITEMCLASS(#{ses.gateCd},SGMC.ITEM_CLS2,'2')
                  WHEN MTCA.ITEM_CLS_TYPE='C3' THEN  <include refid="com.sql.dbo"/>GETITEMCLASS(#{ses.gateCd},SGMC.ITEM_CLS1,'1') ||' > '|| <include refid="com.sql.dbo"/>GETITEMCLASS(#{ses.gateCd},SGMC.ITEM_CLS2,'2') ||' > '|| <include refid="com.sql.dbo"/>GETITEMCLASS(#{ses.gateCd},SGMC.ITEM_CLS3,'3')
                  WHEN MTCA.ITEM_CLS_TYPE='C4' THEN  <include refid="com.sql.dbo"/>GETITEMCLASS(#{ses.gateCd},SGMC.ITEM_CLS1,'1') ||' > '|| <include refid="com.sql.dbo"/>GETITEMCLASS(#{ses.gateCd},SGMC.ITEM_CLS2,'2') ||' > '|| <include refid="com.sql.dbo"/>GETITEMCLASS(#{ses.gateCd},SGMC.ITEM_CLS3,'3') ||' > '|| MTCA.ITEM_CLS_NM
                  ELSE '' END ITEM_CLS_PATH_NM

        FROM STOCSGMC SGMC JOIN STOCMTCA MTCA
        	ON(SGMC.ITEM_CLS1 = MTCA.ITEM_CLS1
        		AND SGMC.ITEM_CLS2 = MTCA.ITEM_CLS2
        		AND SGMC.ITEM_CLS3 = MTCA.ITEM_CLS3
        		AND SGMC.ITEM_CLS4 = MTCA.ITEM_CLS4
        		AND MTCA.GATE_CD = SGMC.GATE_CD
        		AND MTCA.DEL_FLAG = '0')
        WHERE SGMC.GATE_CD = #{ses.gateCd}
        AND SGMC.DEL_FLAG = '0'
        AND SGMC.SG_NUM = #{SG_NUM}
        AND MTCA.USE_FLAG = '1'
	    AND MTCA.ITEM_CLS_TYPE = 'C4'
	ORDER BY		   
		   <include refid="com.sql.dbo"/>GETITEMCLASS(#{ses.gateCd},SGMC.ITEM_CLS1,'1') 
		 , <include refid="com.sql.dbo"/>GETITEMCLASS(#{ses.gateCd},SGMC.ITEM_CLS2,'2') 
		 , <include refid="com.sql.dbo"/>GETITEMCLASS(#{ses.gateCd},SGMC.ITEM_CLS3,'3')
		 , MTCA.ITEM_CLS_NM
		 , to_number(MTCA.SORT_SQ)
    </select>
    
    <select id="checkExistItemClass" parameterType="hashMap" resultType="int">
    	SELECT COUNT(*) AS "NUMBER"
	    	FROM STOCSGMC
	    	WHERE SG_NUM = #{SG_NUM}
	    	AND GATE_CD = #{ses.gateCd}
	    	AND ITEM_CLS1 = #{ITEM_CLS1}
	    	AND ITEM_CLS2 = #{ITEM_CLS2}
	    	AND ITEM_CLS3 = #{ITEM_CLS3}
	    	AND ITEM_CLS4 = #{ITEM_CLS4}
	    	AND DEL_FLAG = '0'
    </select>

	<delete id="doDeleteRealItemClass" parameterType="hashmap" >
		DELETE FROM STOCSGMC
		WHERE GATE_CD = #{ses.gateCd}
    	  AND SG_NUM = #{P_SG_NUM}
    	  AND ITEM_CLS1 = #{P_ITEM_CLS1}
    	  AND ITEM_CLS2 = #{P_ITEM_CLS2}
    	  AND ITEM_CLS3 = #{P_ITEM_CLS3}
    	  AND ITEM_CLS4 = #{P_ITEM_CLS4}
	</delete>
    
     <insert id="doSaveItemClass" parameterType="hashmap">
        INSERT INTO STOCSGMC (
             	GATE_CD,
			    SG_NUM ,
			    ITEM_CLS1,
			    ITEM_CLS2,
			    ITEM_CLS3,
			    ITEM_CLS4,
			    REG_DATE ,
			    REG_USER_ID,
			    MOD_DATE,
			    MOD_USER_ID,
			    DEL_FLAG          
        )VALUES(
            #{ses.gateCd}
            , #{SG_NUM}
            ,#{ITEM_CLS1}
            ,#{ITEM_CLS2}
            ,#{ITEM_CLS3}
            ,#{ITEM_CLS4}
            ,<include refid="com.sql.sysdate"/>
            ,#{ses.userId}
            ,<include refid="com.sql.sysdate"/>
            ,#{ses.userId}
            ,'0'
            
        )
    </insert>
    
    <update id="doDeleteItemClass" parameterType="hashMap">

		DELETE STOCSGMC
    	WHERE SG_NUM = #{SG_NUM}
    	AND GATE_CD = #{ses.gateCd}
    	AND DEL_FLAG = '0'
    	AND ITEM_CLS1 = #{ITEM_CLS1}
    	AND ITEM_CLS2 = #{ITEM_CLS2}
    	AND ITEM_CLS3 = #{ITEM_CLS3}
    	AND ITEM_CLS4 = #{ITEM_CLS4}
    </update>
    
     <update id="multiLanguagePopupDoUpdateWithoutMultiSEQ" parameterType="hashMap">

	     UPDATE STOCMULG SET
	              MULTI_NM = #{MULTI_NM}
	            , LANG_CD = #{LANG_CD}
	            , MOD_DATE = <include refid="com.sql.sysdate"/>
	            , MOD_USER_ID = #{ses.userId}
	        WHERE GATE_CD = #{ses.gateCd}
	          AND LANG_CD = #{ses.langCd}
	          AND OTHER_CD = #{OTHER_CD}
	          AND MULTI_CD = #{MULTI_CD}

    </update>
    
    <select id="doSearchEVRS" parameterType="hashMap" resultType="hashMap">

			SELECT  EVRS.SG_NUM
			      , <include refid="com.sql.dbo"/>getSgCLASS(#{ses.gateCd}, #{ses.langCd}, 4, EVRS.SG_NUM) AS SG_NUM_CLS4
			      , EVRS.SI_AMEND_REASON
			      , EVRS.SI_X_SCORE
			      , EVRS.SI_Y_SCORE
			      , <include refid="com.sql.dbo"/>GETMULTINAME(#{ses.gateCd}, 'PK', 'EN', <include refid="com.sql.trim"/>(EGMT.EG_KIND_CD) <include refid="com.sql.stringMerge"/> '_' <include refid="com.sql.stringMerge"/> 'SI' <include refid="com.sql.stringMerge"/> '_' <include refid="com.sql.stringMerge"/> <include refid="com.sql.trim"/>(EVRS.SI_XY_POS_CD), '-') AS SI_XY_POS_CD
	      		  , EVRS.RA_X_SCORE
				  , EVRS.RA_Y_SCORE
			   	  , <include refid="com.sql.dbo"/>GETMULTINAME(#{ses.gateCd}, 'PK', #{ses.langCd}, <include refid="com.sql.trim"/>(EGMT.EG_KIND_CD) <include refid="com.sql.stringMerge"/> '_' <include refid="com.sql.stringMerge"/> 'RA' <include refid="com.sql.stringMerge"/> '_' <include refid="com.sql.stringMerge"/> <include refid="com.sql.trim"/>(EVRS.RA_XY_POS_CD), '-') AS RA_XY_POS_CD
			      , <include refid="com.sql.dbo"/>getComCode(#{ses.gateCd}, 'M120', EVRS.SRS_CD, 0, #{ses.langCd}) AS SRS_CD
			      , EVRS.SRS_X_SCORE
			      , EVRS.SRS_Y_SCORE
			      , EGMT.EG_KIND_CD
			  FROM STOCEVRS EVRS JOIN STOCEVSG EVSG
			    ON (EVRS.GATE_CD = EVSG.GATE_CD
			   AND EVRS.EV_NUM = EVSG.EV_NUM
			   AND EVRS.SG_NUM = EVSG.SG_NUM
			   AND EVSG.DEL_FLAG = '0')
			  LEFT JOIN STOCEVMT EVMT
			    ON (EVSG.GATE_CD = EVMT.GATE_CD
			   AND EVSG.EV_NUM = EVMT.EV_NUM
			   AND EVMT.DEL_FLAG = '0')
			  LEFT JOIN STOCEGMT EGMT
			    ON (EVMT.GATE_CD = EGMT.GATE_CD
			   AND EVMT.EG_NUM = EGMT.EG_NUM
			   AND EGMT.DEL_FLAG = '0')
			  JOIN STOCSGMT SGMT
			    ON (SGMT.GATE_CD = EVSG.GATE_CD
			   AND SGMT.SG_NUM = EVSG.SG_NUM
			   AND SGMT.DEL_FLAG = '0')
			 WHERE EVRS.GATE_CD = #{ses.gateCd}
			   AND EVMT.PROGRESS_CD >= '300'
			   AND EVRS.DEL_FLAG = '0'
			   AND SGMT.SRS_EV_NUM = EVRS.EV_NUM
			   AND SGMT.SG_NUM = #{SG_NUM}
    </select>

	<select id="srm010treepdoSearch" parameterType="hashMap" resultType="java.util.Map">

	 SELECT * FROM
	 (
		 SELECT
			(CASE WHEN T.ITEM_CLS2 ='*' THEN T.SG_NUM
				  WHEN T.ITEM_CLS3 = '*' THEN T.ITEM_CLS1 <include refid="com.sql.stringMerge"/> T.ITEM_CLS2
				  ELSE T.ITEM_CLS1 <include refid="com.sql.stringMerge"/> T.ITEM_CLS2 <include refid="com.sql.stringMerge"/> T.ITEM_CLS3 END) AS "tree"
			,T.SG_NM AS ITEM_CLS_NM
			,T.ITEM_CLS1
			,T.ITEM_CLS2
			,T.ITEM_CLS3
			,T.ITEM_CLS4
			,T.SG_NUM

        ,(CASE WHEN T.DEPTH = '1' THEN T.SG_NM
			   WHEN T.DEPTH = '2' THEN (SELECT MULTI_NM FROM STOCMULG WHERE GATE_CD = T.GATE_CD AND LANG_CD = #{ses.langCd} AND DEL_FLAG = '0' AND MULTI_CD = 'SG' AND OTHER_CD = T.ITEM_CLS1) <include refid="com.sql.stringMerge"/>' > '<include refid="com.sql.stringMerge"/>
									   (SELECT MULTI_NM FROM STOCMULG WHERE GATE_CD = T.GATE_CD AND LANG_CD = #{ses.langCd} AND DEL_FLAG = '0' AND MULTI_CD = 'SG' AND OTHER_CD = T.ITEM_CLS2)
			   WHEN T.DEPTH = '3' THEN (SELECT MULTI_NM FROM STOCMULG WHERE GATE_CD = T.GATE_CD AND LANG_CD = #{ses.langCd} AND DEL_FLAG = '0' AND MULTI_CD = 'SG' AND OTHER_CD = T.ITEM_CLS1) <include refid="com.sql.stringMerge"/>' > '<include refid="com.sql.stringMerge"/>
									   (SELECT MULTI_NM FROM STOCMULG WHERE GATE_CD = T.GATE_CD AND LANG_CD = #{ses.langCd} AND DEL_FLAG = '0' AND MULTI_CD = 'SG' AND OTHER_CD = T.ITEM_CLS2) <include refid="com.sql.stringMerge"/>' > '<include refid="com.sql.stringMerge"/>
									   (SELECT MULTI_NM FROM STOCMULG WHERE GATE_CD = T.GATE_CD AND LANG_CD = #{ses.langCd} AND DEL_FLAG = '0' AND MULTI_CD = 'SG' AND OTHER_CD = T.ITEM_CLS3)
			   WHEN T.DEPTH = '4' THEN (SELECT MULTI_NM FROM STOCMULG WHERE GATE_CD = T.GATE_CD AND LANG_CD = #{ses.langCd} AND DEL_FLAG = '0' AND MULTI_CD = 'SG' AND OTHER_CD = T.ITEM_CLS1) <include refid="com.sql.stringMerge"/>' > '<include refid="com.sql.stringMerge"/>
									   (SELECT MULTI_NM FROM STOCMULG WHERE GATE_CD = T.GATE_CD AND LANG_CD = #{ses.langCd} AND DEL_FLAG = '0' AND MULTI_CD = 'SG' AND OTHER_CD = T.ITEM_CLS2) <include refid="com.sql.stringMerge"/>' > '<include refid="com.sql.stringMerge"/>
									   (SELECT MULTI_NM FROM STOCMULG WHERE GATE_CD = T.GATE_CD AND LANG_CD = #{ses.langCd} AND DEL_FLAG = '0' AND MULTI_CD = 'SG' AND OTHER_CD = T.ITEM_CLS3) <include refid="com.sql.stringMerge"/>' > '<include refid="com.sql.stringMerge"/>
									   (SELECT MULTI_NM FROM STOCMULG WHERE GATE_CD = T.GATE_CD AND LANG_CD = #{ses.langCd} AND DEL_FLAG = '0' AND MULTI_CD = 'SG' AND OTHER_CD = T.ITEM_CLS4)
		       END) AS ITEM_CLS_PATH_NM

		,(CASE WHEN T.DEPTH = '1' THEN T.SORT_SQ ELSE(SELECT MAX(SORT_SQ) FROM STOCSGMT WHERE GATE_CD=T.GATE_CD AND DEL_FLAG='0' AND SG_NUM=T.ITEM_CLS1) END) AS SORT_SQ_1
		,(CASE WHEN T.DEPTH = '1' THEN '0'
			   WHEN T.DEPTH = '2' THEN T.SORT_SQ
			   WHEN T.DEPTH = '3' THEN (SELECT MAX(SORT_SQ) FROM STOCSGMT WHERE GATE_CD=T.GATE_CD AND DEL_FLAG='0' AND SG_NUM=T.ITEM_CLS2) END) AS SORT_SQ_2
		,(CASE WHEN T.DEPTH = '1' THEN '0'
			   WHEN T.DEPTH = '2' THEN '0'
			   WHEN T.DEPTH = '3' THEN T.SORT_SQ
			   WHEN T.DEPTH = '4' THEN (SELECT MAX(SORT_SQ) FROM STOCSGMT WHERE GATE_CD=T.GATE_CD AND DEL_FLAG='0' AND SG_NUM=T.ITEM_CLS3) END) AS SORT_SQ_3
		 FROM(
			SELECT
				 SGMT.GATE_CD
				,(SELECT MULG.MULTI_NM FROM STOCMULG MULG WHERE MULG.GATE_CD = SGMT.GATE_CD AND MULG.LANG_CD = #{ses.langCd} AND MULG.MULTI_CD = 'SG' AND MULG.OTHER_CD = SGMT.SG_NUM) AS SG_NM
				, SGMT.DEPTH
				, SGMT.SG_NUM
				, SGMT.SORT_SQ
				,(CASE WHEN SGMT.DEPTH = '1' THEN  SGMT.SG_NUM
					   WHEN SGMT.DEPTH = '2' THEN (SELECT <include refid="com.sql.trim"/>(A2.PARENT_SG_NUM) FROM STOCSGMT A2 WHERE  A2.GATE_CD = SGMT.GATE_CD AND A2.DEPTH = '2' AND A2.DEL_FLAG = '0' AND A2.SG_NUM =SGMT.SG_NUM)
					   WHEN SGMT.DEPTH = '3' THEN (SELECT <include refid="com.sql.trim"/>(A2.PARENT_SG_NUM) FROM STOCSGMT A2 WHERE  A2.GATE_CD = SGMT.GATE_CD AND A2.DEPTH = '2' AND A2.DEL_FLAG = '0' AND A2.SG_NUM =(SELECT <include refid="com.sql.trim"/>(A3.PARENT_SG_NUM) FROM STOCSGMT A3 WHERE  A3.GATE_CD = SGMT.GATE_CD AND A3.DEPTH = '3' AND A3.DEL_FLAG = '0' AND A3.SG_NUM =SGMT.SG_NUM))
					   END) AS ITEM_CLS1
				,(CASE WHEN SGMT.DEPTH = '1' THEN  '*'
					   WHEN SGMT.DEPTH = '2' THEN SGMT.SG_NUM
					   WHEN SGMT.DEPTH = '3' THEN (SELECT <include refid="com.sql.trim"/>(A3.PARENT_SG_NUM) FROM STOCSGMT A3 WHERE  A3.GATE_CD = SGMT.GATE_CD AND A3.DEPTH = '3' AND A3.DEL_FLAG = '0' AND A3.SG_NUM =SGMT.SG_NUM)
					   END) AS ITEM_CLS2
				,(CASE WHEN SGMT.DEPTH = '1' THEN  '*'
					   WHEN SGMT.DEPTH = '2' THEN '*'
					   WHEN SGMT.DEPTH = '3' THEN  SGMT.SG_NUM
					   END) AS ITEM_CLS3
				, '*' AS ITEM_CLS4
			FROM STOCSGMT SGMT
			WHERE SGMT.GATE_CD=#{ses.gateCd}
			  AND SGMT.DEL_FLAG='0'
		  )T
	  )A
      ORDER BY TO_NUMBER(A.SORT_SQ_1),to_number(A.SORT_SQ_2),to_number(A.SORT_SQ_3)

	</select>
</mapper>