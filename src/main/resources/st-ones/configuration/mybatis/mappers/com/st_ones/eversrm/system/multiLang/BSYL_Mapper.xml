<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.st_ones.eversrm.system.multiLang.BSYL_Mapper">

    <select id="doSearch1" parameterType="hashMap" resultType="hashMap">

        SELECT DISTINCT
        <include refid="com.sql.nvl"/>(B.SCREEN_ID, A.SCREEN_ID) AS SCREEN_ID,
        <include refid="com.sql.dbo"/>GETMULTINAME(<include refid="com.sql.nvl"/>(B.GATE_CD, A.GATE_CD), 'SC', #{ses.langCd}, '', <include refid="com.sql.nvl"/>(B.SCREEN_ID, A.SCREEN_ID)) AS SCREEN_NM,
        SCRN.MODULE_TYPE,
        <include refid="com.sql.nvl"/>(B.LANG_CD, A.LANG_CD) AS LANG_CD,
        <include refid="com.sql.nvl"/>(B.MULTI_CD, A.MULTI_CD) AS MULTI_CD,
        <include refid="com.sql.nvl"/>(B.MULTI_TYPE, A.MULTI_TYPE) AS MULTI_TYPE,
        <include refid="com.sql.nvl"/>(B.MULTI_CONTENTS, A.MULTI_CONTENTS) AS MULTI_CONTENTS,
        <include refid="com.sql.nvl"/>(B.USE_FLAG, A.USE_FLAG) AS USE_FLAG,
        <include refid="com.sql.nvl"/>(B.FORM_GRID_ID, A.FORM_GRID_ID) AS FORM_GRID_ID,
        <include refid="com.sql.nvl"/>(B.COLUMN_TYPE, A.COLUMN_TYPE) AS COLUMN_TYPE,
        <include refid="com.sql.nvl"/>(<include refid="com.sql.nvl"/>(B.MAX_LENGTH, A.MAX_LENGTH), '0') AS MAX_LENGTH,
        <include refid="com.sql.nvl"/>(B.COLUMN_WIDTH, A.COLUMN_WIDTH) AS COLUMN_WIDTH,
        <include refid="com.sql.nvl"/>(B.EDIT_FLAG, A.EDIT_FLAG) AS EDIT_FLAG,
        <include refid="com.sql.nvl"/>(B.DATA_TYPE, A.DATA_TYPE) AS DATA_TYPE,
        <include refid="com.sql.nvl"/>(B.ALIGNMENT_TYPE, A.ALIGNMENT_TYPE) AS ALIGNMENT_TYPE,
        <include refid="com.sql.nvl"/>(B.FONT_COLOR_TEXT, A.FONT_COLOR_TEXT) AS FONT_COLOR_TEXT,
        <include refid="com.sql.nvl"/>(B.BACK_COLOR_TEXT, A.BACK_COLOR_TEXT) AS BACK_COLOR_TEXT,
        <include refid="com.sql.nvl"/>(B.COLUMN_ID, A.COLUMN_ID) AS COLUMN_ID,
        <include refid="com.sql.nvl"/>(B.SORT_SQ, A.SORT_SQ) AS SORT_SQ,
        <include refid="com.sql.nvl"/>(B.FORMAT, A.FORMAT) AS FORMAT,
        <include refid="com.sql.nvl"/>(B.DOMAIN_TYPE, A.DOMAIN_TYPE) AS DOMAIN_TYPE,
        <include refid="com.sql.nvl"/>(B.DOMAIN_NM, A.DOMAIN_NM) AS DOMAIN_NM,
        <include refid="com.sql.nvl"/>(B.COMMON_ID, A.COMMON_ID) AS COMMON_ID,
        <include refid="com.sql.nvl"/>(B.IMAGE_NM, A.IMAGE_NM) AS IMAGE_NM,
        <include refid="com.sql.nvl"/>(<include refid="com.sql.nvl"/>(B.DISABLE_FLAG, A.DISABLE_FLAG), '0') AS DISABLE_FLAG,
        <include refid="com.sql.nvl"/>(<include refid="com.sql.nvl"/>(B.INVISIBLE_FLAG, A.INVISIBLE_FLAG), '0') AS INVISIBLE_FLAG,
        <include refid="com.sql.nvl"/>(<include refid="com.sql.nvl"/>(B.SEARCH_CONDITION_FLAG, A.SEARCH_CONDITION_FLAG), '0') AS SEARCH_CONDITION_FLAG,
        <include refid="com.sql.nvl"/>(<include refid="com.sql.nvl"/>(B.DYNAMIC_COLUMN_FLAG, A.DYNAMIC_COLUMN_FLAG), '0') AS DYNAMIC_COLUMN_FLAG,
        A.WIDTH_UNIT,
        <if test="_databaseId == 'oracle'">
            TO_NUMBER(A.SORT_SQ) AS SORT_SQ,
        </if>
        <if test="_databaseId == 'mssql'">
            CONVERT(INT,A.SORT_SQ) AS SORT_SQ,
        </if>
        A.TEXT_WRAP,
        A.MASK_TYPE
        FROM(
        SELECT
        LANG.GATE_CD,
        LANG.SCREEN_ID,
        <include refid="com.sql.dbo"/>GETMULTINAME(LANG.GATE_CD, 'SC', #{ses.langCd}, '', LANG.SCREEN_ID) AS SCREEN_NM,
        LANG.LANG_CD,
        LANG.MULTI_CD,
        LANG.MULTI_TYPE,
        LANG.MULTI_CONTENTS,
        LANG.USE_FLAG,
        LANG.FORM_GRID_ID,
        LANG.COLUMN_TYPE,
        LANG.MAX_LENGTH,
        LANG.COLUMN_WIDTH,
        LANG.EDIT_FLAG,
        LANG.DATA_TYPE,
        LANG.ALIGNMENT_TYPE,
        LANG.FONT_COLOR_TEXT,
        LANG.BACK_COLOR_TEXT,
        LANG.COLUMN_ID,
        LANG.SORT_SQ,
        LANG.FORMAT,
        LANG.DOMAIN_TYPE,
        LANG.DOMAIN_NM,
        LANG.COMMON_ID,
        LANG.IMAGE_NM,
        LANG.DISABLE_FLAG,
        LANG.INVISIBLE_FLAG,
        LANG.SEARCH_CONDITION_FLAG,
        LANG.DYNAMIC_COLUMN_FLAG,
        LANG.WIDTH_UNIT,
        LANG.TEXT_WRAP,
        LANG.MASK_TYPE
        FROM STOCLANG LANG LEFT JOIN STOCSCRN SCRN
        ON (LANG.GATE_CD = SCRN.GATE_CD
        AND LANG.SCREEN_ID = SCRN.SCREEN_ID)
        WHERE LANG.GATE_CD = #{ses.gateCd}
        <if test="SCREEN_ID != '' and SCREEN_ID != null">
            AND LANG.SCREEN_ID <include refid="com.sql.likeL"/> #{SCREEN_ID} <include refid="com.sql.likeR"/>
        </if>
        <if test="SCREEN_NM != '' and SCREEN_NM != null">
            AND <include refid="com.sql.dbo"/>GETMULTINAME(LANG.GATE_CD, 'SC', #{ses.langCd}, '', LANG.SCREEN_ID) <include refid="com.sql.likeL"/> #{SCREEN_NM} <include refid="com.sql.likeR"/>
        </if>
        <if test="LANGUAGE_LIST != '' and LANGUAGE_LIST != null">
            AND LANG.LANG_CD = #{LANGUAGE_LIST}
        </if>
        <if test="MULTI_CONTENTS != '' and MULTI_CONTENTS != null">
            AND LANG.MULTI_CONTENTS <include refid="com.sql.likeL"/> #{MULTI_CONTENTS} <include refid="com.sql.likeR"/>
        </if>
        <if test="COLUMN_ID != '' and COLUMN_ID != null">
            AND LANG.COLUMN_ID <include refid="com.sql.likeL"/> #{COLUMN_ID} <include refid="com.sql.likeR"/>
        </if>
        <if test="FORM_GRID_ID != '' and FORM_GRID_ID != null">
            AND LANG.FORM_GRID_ID <include refid="com.sql.likeL"/> #{FORM_GRID_ID} <include refid="com.sql.likeR"/>
        </if>
        <if test="MULTI_TYPE != '' and MULTI_TYPE != null">
            AND LANG.MULTI_TYPE = #{MULTI_TYPE}
        </if>

        AND LANG.DEL_FLAG = '0') A

        <choose>
            <when test='ANOTHER_LANG != "1"'>
                INNER JOIN STOCLANG B
            </when>
            <otherwise>
                LEFT JOIN STOCLANG B
            </otherwise>
        </choose>

        ON (A.GATE_CD = B.GATE_CD
        AND A.SCREEN_ID = B.SCREEN_ID
        AND A.MULTI_CD = B.MULTI_CD

        <choose>
            <when test='ANOTHER_LANG != "1"'>
                AND A.LANG_CD = B.LANG_CD
            </when>
            <otherwise>
                <!--  AND A.LANG_CD != B.LANG_CD -->
            </otherwise>
        </choose>

        AND A.FORM_GRID_ID = B.FORM_GRID_ID
        AND B.DEL_FLAG = '0') LEFT JOIN STOCSCRN SCRN
        ON (A.GATE_CD = SCRN.GATE_CD
        AND A.SCREEN_ID = SCRN.SCREEN_ID
        <if test="MODULE_TYPE != '' and MODULE_TYPE != null">
            AND SCRN.MODULE_TYPE = #{MODULE_TYPE}
        </if>
        AND SCRN.DEL_FLAG = '0')
        ORDER BY <include refid="com.sql.nvl"/>(B.SCREEN_ID, A.SCREEN_ID)
        , <include refid="com.sql.nvl"/>(B.FORM_GRID_ID, A.FORM_GRID_ID)
        <if test="_databaseId == 'oracle'">
            , TO_NUMBER(A.SORT_SQ)
        </if>
        <if test="_databaseId == 'mssql'">
            , CONVERT(INT, A.SORT_SQ)
        </if>
        , <include refid="com.sql.nvl"/>(B.MULTI_CD, A.MULTI_CD)
        , <include refid="com.sql.nvl"/>(B.LANG_CD, A.LANG_CD)
    </select>

    <select id="doSearch" parameterType="hashMap" resultType="hashMap">
      SELECT DISTINCT
              A.SCREEN_ID
             ,B.MULTI_NM AS SCREEN_NM
             ,(
                SELECT T.MODULE_TYPE
                FROM STOCSCRN T
                WHERE T.GATE_CD   = A.GATE_CD
                AND  T.SCREEN_ID = A.SCREEN_ID
                AND  T.DEL_FLAG  = '0'
              ) AS MODULE_TYPE
             ,A.LANG_CD
             ,A.MULTI_CD
             ,A.MULTI_TYPE
             ,A.MULTI_CONTENTS
             ,A.USE_FLAG
             ,A.FORM_GRID_ID
             ,A.COLUMN_TYPE
             ,<include refid="com.sql.nvl"/>(A.MAX_LENGTH, '0') AS MAX_LENGTH
             ,A.COLUMN_WIDTH
             ,A.EDIT_FLAG
             ,A.DATA_TYPE
             ,A.ALIGNMENT_TYPE
             ,A.FONT_COLOR_TEXT
             ,A.BACK_COLOR_TEXT
             ,A.COLUMN_ID
             ,A.SORT_SQ
             ,A.FORMAT
             ,A.DOMAIN_TYPE
             ,A.DOMAIN_NM
             ,A.COMMON_ID
             ,A.IMAGE_NM
             ,<include refid="com.sql.nvl"/>(A.DISABLE_FLAG, '0') AS DISABLE_FLAG
             ,<include refid="com.sql.nvl"/>(A.INVISIBLE_FLAG, '0') AS INVISIBLE_FLAG
             ,<include refid="com.sql.nvl"/>(A.SEARCH_CONDITION_FLAG, '0') AS SEARCH_CONDITION_FLAG
             ,<include refid="com.sql.nvl"/>(A.DYNAMIC_COLUMN_FLAG, '0') AS DYNAMIC_COLUMN_FLAG
             ,A.WIDTH_UNIT
        <if test="_databaseId == 'oracle'">
             ,TO_NUMBER(A.SORT_SQ) AS SORT_SQ
        </if>
        <if test="_databaseId == 'mssql'">
             ,CONVERT(INT,A.SORT_SQ) AS SORT_SQ
        </if>
             ,A.TEXT_WRAP
             ,A.MASK_TYPE
             ,A.DECIMAL_YN

       FROM STOCLANG A INNER JOIN STOCMULG B
       ON   (B.GATE_CD   = A.GATE_CD
       AND  B.LANG_CD   = A.LANG_CD
       AND  B.DEL_FLAG  = '0'
       AND  B.MULTI_CD  = 'SC'
       AND  B.SCREEN_ID = A.SCREEN_ID)

       WHERE A.GATE_CD = #{ses.gateCd}
       AND  A.LANG_CD = #{ses.langCd}
       AND  A.DEL_FLAG = '0'

    <if test="SCREEN_ID != '' and SCREEN_ID != null">
       AND A.SCREEN_ID = #{SCREEN_ID}
    </if>
    <if test="SCREEN_NM != '' and SCREEN_NM != null">
       AND B.MULTI_NM <include refid="com.sql.likeL"/> #{MULTI_NM} <include refid="com.sql.likeR"/>
    </if>
    <if test="LANGUAGE_LIST != '' and LANGUAGE_LIST != null">
       AND A.LANG_CD = #{LANGUAGE_LIST}
    </if>
    <if test="MULTI_CONTENTS != '' and MULTI_CONTENTS != null">
       AND A.MULTI_CONTENTS <include refid="com.sql.likeL"/> #{MULTI_CONTENTS} <include refid="com.sql.likeR"/>
    </if>
    <if test="COLUMN_ID != '' and COLUMN_ID != null">
       AND A.COLUMN_ID <include refid="com.sql.likeL"/> #{COLUMN_ID} <include refid="com.sql.likeR"/>
    </if>
    <if test="FORM_GRID_ID != '' and FORM_GRID_ID != null">
       AND A.FORM_GRID_ID = #{FORM_GRID_ID}
    </if>
    <if test="MULTI_TYPE != '' and MULTI_TYPE != null">
       AND A.MULTI_TYPE = #{MULTI_TYPE}
    </if>

    <if test="MODULE_TYPE != '' and MODULE_TYPE != null">
       AND (
             SELECT T.MODULE_TYPE
             FROM STOCSCRN T
             WHERE T.GATE_CD   = A.GATE_CD
             AND  T.SCREEN_ID = A.SCREEN_ID
             AND  T.DEL_FLAG  = '0'
           )  = #{MODULE_TYPE}
    </if>


       ORDER BY  A.SCREEN_ID
                ,A.FORM_GRID_ID
        <if test="_databaseId == 'oracle'">
                ,TO_NUMBER(A.SORT_SQ)
        </if>
        <if test="_databaseId == 'mssql'">
                ,A.SORT_SQ
        </if>
                ,A.MULTI_CD
                ,A.LANG_CD

    </select>

    <select id="checkColumnId" parameterType="hashMap" resultType="java.lang.Integer">

        SELECT
        COUNT(*) AS CNT
        <!-- 		  FROM STOCLANG -->
        FROM ${TABLE_NM}
        WHERE GATE_CD = #{ses.gateCd}
        AND MULTI_CD = #{MULTI_CD}
        AND LANG_CD = #{LANG_CD}
        AND SCREEN_ID = #{SCREEN_ID}
        AND FORM_GRID_ID = #{FORM_GRID_ID}

    </select>

    <insert id="doInsert" parameterType="hashMap">

        INSERT INTO ${TABLE_NM}(
        GATE_CD,
        SCREEN_ID,
        LANG_CD,
        MULTI_CD,
        REG_DATE,
        REG_USER_ID,
        MOD_DATE,
        MOD_USER_ID,
        DEL_FLAG,
        USE_FLAG,
        MULTI_TYPE,
        MULTI_CONTENTS,
        COLUMN_TYPE,
        MAX_LENGTH,
        COLUMN_WIDTH,
        EDIT_FLAG,
        DATA_TYPE,
        ALIGNMENT_TYPE,
        FONT_COLOR_TEXT,
        BACK_COLOR_TEXT,
        COLUMN_ID,
        SORT_SQ,
        FORM_GRID_ID,
        DOMAIN_NM,
        FORMAT,
        DOMAIN_TYPE,
        COMMON_ID,
        IMAGE_NM,
        DISABLE_FLAG,
        INVISIBLE_FLAG,
        SEARCH_CONDITION_FLAG,
        DYNAMIC_COLUMN_FLAG,
        TEXT_WRAP,
        MASK_TYPE,
        DECIMAL_YN
        ) VALUES (
        #{ses.gateCd},
        #{SCREEN_ID},
        #{LANG_CD},
        #{MULTI_CD},
        <include refid="com.sql.sysdate"/>,
        #{ses.userId},
        <include refid="com.sql.sysdate"/>,
        #{ses.userId},
        '0',
        #{USE_FLAG},
        #{MULTI_TYPE},
        #{MULTI_CONTENTS},
        #{COLUMN_TYPE},
        #{MAX_LENGTH},
        #{COLUMN_WIDTH} ,
        #{EDIT_FLAG},
        #{DATA_TYPE},
        #{ALIGNMENT_TYPE},
        #{FONT_COLOR_TEXT},
        #{BACK_COLOR_TEXT},
        #{COLUMN_ID},
        #{SORT_SQ},
        #{FORM_GRID_ID},
        #{DOMAIN_NM},
        #{FORMAT},
        #{DOMAIN_TYPE},
        #{COMMON_ID},
        #{IMAGE_NM},
        CASE WHEN #{COLUMN_WIDTH} > 0 THEN '0' ELSE '1' END,
        #{INVISIBLE_FLAG},
        #{SEARCH_CONDITION_FLAG},
        #{DYNAMIC_COLUMN_FLAG},
        #{TEXT_WRAP},
        #{MASK_TYPE},
        #{DECIMAL_YN}
        )

    </insert>

    <update id="doUpdate" parameterType="hashMap">

        UPDATE ${TABLE_NM} SET
	         MOD_DATE = <include refid="com.sql.sysdate"/>
	        ,MOD_USER_ID = #{ses.userId}
	        ,DEL_FLAG = '0'
	        ,USE_FLAG = #{USE_FLAG}
	        ,MULTI_TYPE = #{MULTI_TYPE}
	        ,MULTI_CONTENTS = #{MULTI_CONTENTS}
	        ,COLUMN_TYPE = #{COLUMN_TYPE}
	        ,MAX_LENGTH = #{MAX_LENGTH}
	        ,COLUMN_WIDTH = #{COLUMN_WIDTH}
	        ,EDIT_FLAG = #{EDIT_FLAG}
	        ,DATA_TYPE = #{DATA_TYPE}
	        ,ALIGNMENT_TYPE = #{ALIGNMENT_TYPE}
	        ,FONT_COLOR_TEXT = #{FONT_COLOR_TEXT}
	        ,BACK_COLOR_TEXT = #{BACK_COLOR_TEXT}
	        ,COLUMN_ID = #{COLUMN_ID}
	        ,SORT_SQ = (CASE WHEN (#{SORT_SQ} = '' OR #{SORT_SQ} IS NULL) THEN 0 ELSE #{SORT_SQ} END)
	        ,DOMAIN_NM = #{DOMAIN_NM}
	        ,FORMAT = #{FORMAT}
	        ,DOMAIN_TYPE = #{DOMAIN_TYPE}
	        ,COMMON_ID = #{COMMON_ID}
	        ,IMAGE_NM = #{IMAGE_NM}
	        <if test="_databaseId == 'oracle'">
	            ,DISABLE_FLAG = CASE WHEN #{MULTI_TYPE} = 'G' THEN CASE WHEN #{COLUMN_WIDTH} > 0 THEN '0' ELSE '1' END
	             ELSE TO_CHAR(#{DISABLE_FLAG})
	        </if>
	        <if test="_databaseId == 'mssql'">
	            ,DISABLE_FLAG = CASE WHEN #{MULTI_TYPE} = 'G' THEN CASE WHEN #{COLUMN_WIDTH} > 0 THEN '0' ELSE '1' END
	             ELSE #{DISABLE_FLAG}
	        </if>
	         END
	        ,INVISIBLE_FLAG = #{INVISIBLE_FLAG}
	        ,SEARCH_CONDITION_FLAG = #{SEARCH_CONDITION_FLAG}
	        ,DYNAMIC_COLUMN_FLAG = #{DYNAMIC_COLUMN_FLAG}
	        ,TEXT_WRAP = #{TEXT_WRAP}
	        ,MASK_TYPE = #{MASK_TYPE}
            ,DECIMAL_YN = #{DECIMAL_YN}
         WHERE GATE_CD = #{ses.gateCd}
           AND SCREEN_ID = #{SCREEN_ID}
           AND LANG_CD = #{LANG_CD}
           AND MULTI_CD = #{MULTI_CD}
           AND FORM_GRID_ID = #{FORM_GRID_ID}

    </update>

    <update id="doDelete" parameterType="hashMap">

        DELETE FROM ${TABLE_NM}
        WHERE GATE_CD = #{ses.gateCd}
              AND SCREEN_ID = #{SCREEN_ID}
              AND LANG_CD = #{ses.langCd}
              AND MULTI_CD = #{MULTI_CD}
              AND FORM_GRID_ID = #{FORM_GRID_ID}

    </update>

    <select id="doSearchDataLength" parameterType="hashMap" resultType="hashMap">

		<if test="_databaseId == 'mssql'"></if>
		<if test="_databaseId == 'oracle'">
			SELECT
			    A.TABLE_NAME, A.COLUMN_NAME, A.DATA_TYPE, (CASE WHEN A.DATA_TYPE = 'DATE' THEN 8 ELSE A.DATA_LENGTH END) AS DATA_LENGTH,
			    (SELECT COUNT(*) FROM ALL_TAB_COLUMNS SUB WHERE SUB.OWNER = A.OWNER AND SUB.COLUMN_NAME = A.COLUMN_NAME) AS CNT
			  FROM ALL_TAB_COLUMNS A
			  INNER JOIN (SELECT OWNER, COLUMN_NAME FROM ALL_TAB_COLUMNS
			               WHERE OWNER = #{OWNER}
			               GROUP BY OWNER, COLUMN_NAME) B
			   ON (A.OWNER = B.OWNER
			   AND A.COLUMN_NAME = B.COLUMN_NAME)
			 WHERE A.COLUMN_NAME = UPPER(#{SEARCH_WORD})
			 ORDER BY A.DATA_LENGTH
		</if>

    </select>

    <select id="doSearchDOMC" parameterType="hashMap" resultType="hashMap">

        SELECT
        MA.FORMAT, MC.DOMAIN_TYPE, MC.DOMAIN_NM, MA.DATA, MA.DATA_LENGTH,
        MA.PRE_FORMAT, MA.ALIGNMENT, MA.COL_WIDTH, LC.MULTI_CONTENTS AS DOMAIN_DESC,
        (CASE WHEN MA.DATA = 'VARCHAR2' THEN (CASE WHEN MC.DOMAIN_TYPE = '_DATE' THEN 'date' ELSE 'text' END)
        WHEN MA.DATA = 'NUMBER' THEN 'number'
        ELSE (CASE WHEN MA.DOMAIN_TYPE = 'IMAGE TEXT' THEN 'imagetext'
        WHEN MA.DOMAIN_TYPE = 'CHECK_BOX' THEN 'checkbox'
        ELSE 'text' END) END) AS COL_TYPE
        FROM STOCDOMC MC JOIN STOCDOMA MA
        ON (MC.DOMAIN_NM = MA.DOMAIN_NM
        AND MC.DOMAIN_TYPE = MA.DOMAIN_TYPE)
        LEFT OUTER JOIN (
        SELECT <if test="_databaseId == 'mssql'">TOP 1</if> GATE_CD, MULTI_CD, MULTI_CONTENTS, COUNT(*) AS CNT FROM STOCLANG
        WHERE GATE_CD = #{ses.gateCd}
        AND UPPER(MULTI_CD) = UPPER(#{SEARCH_WORD})
        AND LANG_CD = 'KO'
        AND DEL_FLAG = '0'
        <if test="_databaseId == 'oracle'">AND ROWNUM = 1</if>
        GROUP BY GATE_CD, MULTI_CD, MULTI_CONTENTS
        ORDER BY CNT DESC) LC
        ON (MA.GATE_CD = LC.GATE_CD)
        WHERE UPPER(MC.COLUMN_NM) = UPPER(#{SEARCH_WORD})
        AND MA.GATE_CD = #{ses.gateCd}

    </select>

    <select id="doSearchWord" parameterType="hashMap" resultType="hashMap">
        SELECT FORMAT, DOMAIN_TYPE, DOMAIN_NM, DATA, DATA_LENGTH, PRE_FORMAT, ALIGNMENT, COL_WIDTH, NUM, COL_TYPE
        FROM (
        SELECT
        FORMAT, DOMAIN_TYPE, DOMAIN_NM, DATA, DATA_LENGTH, PRE_FORMAT, ALIGNMENT, COL_WIDTH, MIN(NUM) AS NUM,
        (CASE WHEN DATA = 'VARCHAR2' THEN (CASE WHEN DOMAIN_TYPE = '_DATE' THEN 'date' ELSE 'text' END)
        WHEN DATA = 'NUMBER' THEN 'number'
        ELSE (CASE WHEN DOMAIN_TYPE = 'IMAGE TEXT' THEN 'imagetext'
        WHEN DOMAIN_TYPE = 'CHECK_BOX' THEN 'checkbox'
        ELSE 'text' END) END) AS COL_TYPE
        FROM (
        SELECT
        FORMAT, DOMAIN_TYPE, DOMAIN_NM, DATA, DATA_LENGTH, PRE_FORMAT, ALIGNMENT, COL_WIDTH, '1' AS NUM
        FROM STOCDOMA
        WHERE GATE_CD = #{ses.gateCd}
        AND UPPER(DOMAIN_NM) = UPPER(#{SEARCH_WORD})
        UNION ALL

        SELECT
        FORMAT, DOMAIN_TYPE, DOMAIN_NM, DATA, DATA_LENGTH, PRE_FORMAT, ALIGNMENT, COL_WIDTH, '2' AS NUM
        FROM STOCDOMA
        WHERE GATE_CD = #{ses.gateCd}
        <if test="SEARCH_WORD != '' and SEARCH_WORD != null">
            AND DOMAIN_NM <include refid="com.sql.likeL"/> #{DOMAIN_NM} <include refid="com.sql.likeR"/>
        </if>
        <if test="sqlQuery != '' and sqlQuery != null">
            ${sqlQuery}
        </if>

        ) A
        GROUP BY FORMAT, DOMAIN_TYPE, DOMAIN_NM, DATA, DATA_LENGTH, PRE_FORMAT, ALIGNMENT, COL_WIDTH
        ) B
        ORDER BY FORMAT, DOMAIN_NM DESC
    </select>

    <select id="getMostUsedWord" parameterType="hashmap" resultType="hashmap">
        SELECT GATE_CD, LANG_CD, MULTI_CD, <include refid="com.sql.nvl"/>(MULTI_CONTENTS, '') AS DOMAIN_DESC, DOMAIN_TYPE, DOMAIN_NM, COMMON_ID, CNT, RN
        FROM (
        SELECT GATE_CD, LANG_CD, MULTI_CD, MULTI_CONTENTS, MAX(DOMAIN_TYPE) AS DOMAIN_TYPE, MAX(DOMAIN_NM) AS DOMAIN_NM, MAX(COMMON_ID) AS COMMON_ID, MAX(CNT) AS CNT,
        ROW_NUMBER() OVER (PARTITION BY GATE_CD, MULTI_CD  ORDER BY MAX(A.CNT) DESC) AS RN
        FROM (
        SELECT GATE_CD,
        LANG_CD,
        MULTI_CD,
        MULTI_CONTENTS,
        MAX(COMMON_ID) AS COMMON_ID,
        MAX(DOMAIN_TYPE) AS DOMAIN_TYPE,
        MAX(DOMAIN_NM) AS DOMAIN_NM,
        COUNT(*) AS CNT
        FROM STOCLANG
        WHERE GATE_CD = #{ses.gateCd}
        AND LANG_CD = #{ses.langCd}
        AND MULTI_CD = #{SEARCH_WORD}
        AND DEL_FLAG = '0'
        GROUP BY GATE_CD,
        LANG_CD,
        MULTI_CD,
        MULTI_CONTENTS) A
        GROUP BY GATE_CD, LANG_CD, MULTI_CD, MULTI_CONTENTS
        ) C
        WHERE RN = '1'
    </select>

    <select id="getMultiLanguageList" parameterType="hashMap" resultType="hashMap">

        SELECT GATE_CD,
        MULTI_SQ,
        LANG_CD,
        LANG_CD AS LANG_CD_OLD,
        MULTI_NM,
        MULTI_DESC,
        MULTI_CD,
        SCREEN_ID,
        TMPL_MENU_GROUP_CD,
        ACTION_CD,
        TMPL_MENU_CD,
        AUTH_CD,
        ACTION_PROFILE_CD,
        MENU_GROUP_CD,
        COMMON_ID,
        OTHER_CD,
        'U' AS INSERT_FLAG
        FROM STOCMULG
        WHERE GATE_CD = #{ses.gateCd}
        AND MULTI_CD = #{multi_cd}
        <if test="screen_id != '' and screen_id != null"> AND SCREEN_ID = #{screen_id}</if>
        <if test="action_cd != '' and action_cd != null">AND ACTION_CD = #{action_cd}</if>
        <if test="action_profile_cd != '' and action_profile_cd != null">AND ACTION_PROFILE_CD = #{action_profile_cd}</if>
        <if test="tmpl_menu_group_cd != '' and tmpl_menu_group_cd != null">AND TMPL_MENU_GROUP_CD = #{tmpl_menu_group_cd}</if>
        <if test="auth_cd != '' and auth_cd != null">AND AUTH_CD = #{auth_cd}</if>
        <if test="menu_group_cd != '' and menu_group_cd != null">AND MENU_GROUP_CD = #{menu_group_cd}</if>
        <if test="tmpl_menu_cd != '' and tmpl_menu_cd != null">AND TMPL_MENU_CD = #{tmpl_menu_cd}</if>
        <if test="common_id != '' and common_id != null">AND COMMON_ID = #{common_id}</if>
        <if test="other_cd != '' and other_cd != null">AND OTHER_CD = #{other_cd}</if>
        AND DEL_FLAG = '0'
        ORDER BY LANG_CD
    </select>

    <insert id="multiLanguagePopupDoInsert" parameterType="hashMap">

        INSERT INTO ${TABLE_NM} (
            GATE_CD
            , MULTI_SQ
            , LANG_CD
            , REG_DATE
            , REG_USER_ID
            , MOD_DATE
            , MOD_USER_ID
            , DEL_FLAG
            , MULTI_NM
            , MULTI_DESC
            , MULTI_CD
            , SCREEN_ID
            , ACTION_CD
            , TMPL_MENU_CD
            , AUTH_CD
            , ACTION_PROFILE_CD
            , TMPL_MENU_GROUP_CD
            , MENU_GROUP_CD
            , COMMON_ID
            , OTHER_CD
        ) VALUES (
            #{ses.gateCd}
            , (SELECT <include refid="com.sql.nvl"/>( MAX(MULTI_SQ) , 0)+1 FROM ${TABLE_NM})
            , #{LANG_CD}
            , <include refid="com.sql.sysdate"/>
            , #{ses.userId}
            , <include refid="com.sql.sysdate"/>
            , #{ses.userId}
            , '0'
            , #{MULTI_NM}
            , #{MULTI_DESC}
            , #{MULTI_CD}
            , #{SCREEN_ID}
            , #{ACTION_CD}
            , #{TMPL_MENU_CD}
            , #{AUTH_CD}
            , #{ACTION_PROFILE_CD}
            , #{TMPL_MENU_GROUP_CD}
            , #{MENU_GROUP_CD}
            , #{COMMON_ID}
            , #{OTHER_CD}
        )

    </insert>

    <update id="multiLanguagePopupDoUpdate" parameterType="hashMap">

        UPDATE ${TABLE_NM} SET
        MULTI_NM = #{MULTI_NM}
        , MULTI_DESC = #{MULTI_DESC}
        , LANG_CD = #{LANG_CD}
        , MOD_DATE = <include refid="com.sql.sysdate"/>
        , MOD_USER_ID = #{ses.userId}
        WHERE GATE_CD = #{GATE_CD}
        AND MULTI_SQ = #{MULTI_SQ}
        AND LANG_CD = #{LANG_CD_OLD}

    </update>

    <insert id="insertMenuName" parameterType="hashMap">

        INSERT INTO ${TABLE_NM} (
        GATE_CD
        <if test="_databaseId == 'oracle'">
            , MULTI_SQ
        </if>
        , LANG_CD
        , ADD_DATE
        , ADD_USER_ID
        , CHANGE_DATE
        , CHANGE_USER_ID
        , DEL_FLAG
        , MULTI_NM
        , MULTI_DESC
        , MULTI_CD
        , SCREEN_ID
        , ACTION_CD
        , TMPL_MENU_CD
        , AUTH_CD
        , ACTION_PROFILE_CD
        , TMPL_MENU_GROUP_CD
        , MENU_GROUP_CD
        , COMMON_ID
        , OTHER_CD
        ) VALUES (
        #{ses.gateCd}
        <if test="_databaseId == 'oracle'">
            , (SELECT <include refid="com.sql.nvl"/>( MAX(MULTI_SQ) , 0)+1 FROM ${TABLE_NM})
        </if>
        , #{LANG_CD}
        , <include refid="com.sql.sysdate"/>
        , #{ses.userId}
        , <include refid="com.sql.sysdate"/>
        , #{ses.userId}
        , '0'
        , #{MULTI_NM}
        , #{MULTI_DESC}
        , #{MULTI_CD}
        , #{SCREEN_ID}
        , #{ACTION_CD}
        , #{TMPL_MENU_CD}
        , #{AUTH_CD}
        , #{ACTION_PROFILE_CD}
        , #{TMPL_MENU_GROUP_CD}
        , #{MENU_GROUP_CD}
        , #{COMMON_ID}
        , #{OTHER_CD}
        )

    </insert>

    <update id="updateMenuName" parameterType="hashMap">

        UPDATE ${TABLE_NM} SET
        MULTI_NM = #{MULTI_NM}
        , MOD_DATE = <include refid="com.sql.sysdate"/>
        , MOD_USER_ID = #{ses.userId}
        WHERE GATE_CD = #{GATE_CD}
        AND MULTI_CD = #{MULTI_CD}
        AND TMPL_MENU_CD = #{TMPL_MENU_CD}
        AND LANG_CD = #{LANG_CD_OLD}

    </update>

    <update id="multiLanguagePopupDoDelete" parameterType="hashmap">

        UPDATE ${TABLE_NM} SET
        DEL_FLAG = '1'
        , MOD_DATE = <include refid="com.sql.sysdate"/>
        , MOD_USER_ID = #{ses.userId}
        WHERE GATE_CD = #{GATE_CD}
        AND MULTI_SQ = #{MULTI_SQ}
        AND LANG_CD = #{LANG_CD}

    </update>

    <select id="selectScreenAccessibleCode" parameterType="hashmap" resultType="hashmap">
        SELECT TEXT1,
        TEXT2,
        TEXT3
        FROM STOCCODD
        WHERE GATE_CD = #{ses.gateCd}
        AND CODE_TYPE = 'SCRN_AUTH'
        AND LANG_CD = 'KO'
        AND CODE = #{SCREEN_ID}<if test="ACTION_CD != null and ACTION_CD != ''"><include refid="com.sql.stringMerge"/>'.'<include refid="com.sql.stringMerge"/>#{ACTION_CD}</if>
        AND DEL_FLAG = '0'
    </select>

    <select id="getCountExistsScreenAccessibleCode" parameterType="hashmap" resultType="int">
        SELECT COUNT(*)
        FROM STOCCODD
        WHERE GATE_CD = #{ses.gateCd}
        AND CODE_TYPE = 'SCRN_AUTH'
        AND LANG_CD = 'KO'
        AND CODE = #{SCREEN_ID}<if test="ACTION_CD != null and ACTION_CD != ''"><include refid="com.sql.stringMerge"/>'.'<include refid="com.sql.stringMerge"/>#{ACTION_CD}</if>
        AND DEL_FLAG = '0'
    </select>

    <insert id="insertScreenAccessibleCode" parameterType="hashmap">
        INSERT INTO STOCCODD (
        GATE_CD
        ,CODE_TYPE
        ,LANG_CD
        ,CODE
        ,REG_DATE
        ,REG_USER_ID
        ,DEL_FLAG
        ,USE_FLAG
        ,TEXT1
        ,TEXT2
        ,TEXT3
        ) VALUES (
        #{ses.gateCd}
        ,'SCRN_AUTH'
        ,'KO'
        ,#{SCREEN_ID}<if test="ACTION_CD != null and ACTION_CD != ''"><include refid="com.sql.stringMerge"/>'.'<include refid="com.sql.stringMerge"/>#{ACTION_CD}</if>
        ,<include refid="com.sql.sysdate"/>
        ,#{ses.userId}
        ,'0'
        ,'1'
        ,#{TEXT1}		-- 접근불가능한 직무
        ,#{TEXT2}		-- 접근불가능한 사용자ID
        ,#{TEXT3}		-- 접근가능한 직무
        )
    </insert>

    <update id="updateScreenAccessibleCode" parameterType="hashmap">
        UPDATE STOCCODD
        SET
            TEXT1   = #{TEXT1}
            , TEXT2 = #{TEXT2}
            , TEXT3 = #{TEXT3}
        WHERE GATE_CD = #{ses.gateCd}
              AND CODE_TYPE = 'SCRN_AUTH'
              AND LANG_CD = 'KO'
              AND CODE = #{SCREEN_ID}<if test="ACTION_CD != null and ACTION_CD != ''"><include refid="com.sql.stringMerge"/>'.'<include refid="com.sql.stringMerge"/>#{ACTION_CD}</if>
              AND DEL_FLAG = '0'
    </update>


    <select id="BSYL021_STOCLANG_Search" parameterType="hashmap" resultType="hashMap">
        SELECT
        LANG.GATE_CD,
        LANG.FORM_GRID_ID,
        LANG.SCREEN_ID,
        <include refid="com.sql.dbo"/>GETMULTINAME(LANG.GATE_CD, 'SC', #{ses.langCd}, '', LANG.SCREEN_ID) AS SCREEN_NM,
        LANG.MULTI_CD,
        LANG.MULTI_CONTENTS,
        LANG.FORM_GRID_ID,
        LANG.LANG_CD,
        '' AS USER_ID,
        LANG.COLUMN_ID,
        LANG.COLUMN_WIDTH,
        LANG.SORT_SQ,
        CASE WHEN COLUMN_WIDTH  <![CDATA[<=]]> 0  THEN '0' ELSE '1' END DISABLE_FLAG,
        '0' AS FROZE_FLAG
        FROM STOCLANG LANG LEFT JOIN STOCSCRN SCRN
                ON (LANG.GATE_CD = SCRN.GATE_CD
                    AND LANG.SCREEN_ID = SCRN.SCREEN_ID)
        WHERE LANG.GATE_CD = #{ses.gateCd}
              AND LANG.SCREEN_ID = #{SCREEN_ID}
              AND LANG.LANG_CD = #{ses.langCd}
              AND LANG.DEL_FLAG = '0'
              AND LANG.COLUMN_WIDTH > 0
              AND LANG.MULTI_TYPE = 'G'
        ORDER BY LANG.FORM_GRID_ID, LANG.SORT_SQ
    </select>

    <select id="BSYL021_STOCUSCC_Search" parameterType="hashmap" resultType="hashMap">
        SELECT
            CC.GATE_CD,
            CC.SCREEN_ID,
            <include refid="com.sql.dbo"/>GETMULTINAME(CC.GATE_CD, 'SC', #{ses.langCd}, '', CC.SCREEN_ID) AS SCREEN_NM,
            CC.MULTI_CD,
            (SELECT MULTI_CONTENTS FROM STOCLANG WHERE SCREEN_ID = CC.SCREEN_ID AND MULTI_CD = CC.MULTI_CD AND LANG_CD = CC.LANG_CD AND FORM_GRID_ID = CC.FORM_GRID_ID AND DEL_FLAG='0') AS MULTI_CONTENTS,
            CC.FORM_GRID_ID,
            CC.LANG_CD,
            CC.USER_ID,
            CC.COLUMN_ID,
            CC.COLUMN_WIDTH,
            CC.SORT_SQ,
            CASE WHEN CC.COLUMN_WIDTH  <![CDATA[<=]]> 0  THEN '0' ELSE '1' END DISABLE_FLAG,
            A.COLUMN_WIDTH AS ORI_COLUMN_WIDTH,
            CC.FROZE_FLAG
        FROM STOCUSCC CC
        LEFT OUTER JOIN STOCLANG A
        ON (A.GATE_CD = CC.GATE_CD
            AND A.SCREEN_ID = CC.SCREEN_ID
            AND A.LANG_CD = CC.LANG_CD
            AND A.MULTI_CD = CC.MULTI_CD
            AND A.FORM_GRID_ID = CC.FORM_GRID_ID
            AND A.DEL_FLAG='0'
            )
        WHERE CC.GATE_CD = #{ses.gateCd}
        AND CC.DEL_FLAG ='0'
        AND CC.SCREEN_ID = #{SCREEN_ID}
        AND CC.LANG_CD = #{ses.langCd}
        AND CC.USER_ID = #{ses.userId}
        ORDER BY CC.FORM_GRID_ID, CC.SORT_SQ
    </select>

    <select id="checkUSLN" parameterType="hashMap" resultType="java.lang.Integer">
        SELECT COUNT(SCREEN_ID)
        FROM STOCUSCC
        WHERE GATE_CD = #{ses.gateCd}
        AND DEL_FLAG ='0'
        AND SCREEN_ID = #{SCREEN_ID}
        AND LANG_CD = #{ses.langCd}
        AND USER_ID = #{ses.userId}
    </select>

    <insert id="BSYL021_doSave" parameterType="hashMap">
        INSERT INTO STOCUSCC(
            GATE_CD,
            SCREEN_ID,
            MULTI_CD,
            FORM_GRID_ID,
            LANG_CD,
            USER_ID,
            REG_DATE,
            REG_USER_ID,
            DEL_FLAG,
            COLUMN_ID,
            COLUMN_WIDTH,
            SORT_SQ,
            FROZE_FLAG
        )
        VALUES(
            #{ses.gateCd},
            #{SCREEN_ID},
            #{MULTI_CD},
            #{FORM_GRID_ID},
            #{ses.langCd},
            #{ses.userId},
            <include refid="com.sql.sysdate"/>,
            #{ses.userId},
            '0',
            #{COLUMN_ID},
            #{COLUMN_WIDTH},
            #{SORT_SQ},
            #{FROZE_FLAG}
        )

    </insert>

    <delete id="BSYL021_doDelete">
        DELETE STOCUSCC
        WHERE GATE_CD = #{ses.gateCd}
          AND SCREEN_ID = #{SCREEN_ID}
          AND MULTI_CD = #{MULTI_CD}
          AND FORM_GRID_ID = #{FORM_GRID_ID}
          AND LANG_CD = #{ses.langCd}
          AND USER_ID = #{ses.userId}
    </delete>

    <delete id="BSYL021_doReset">
        DELETE STOCUSCC
         WHERE GATE_CD = #{ses.gateCd}
           AND SCREEN_ID = #{SCREEN_ID}
           AND LANG_CD = #{ses.langCd}
           AND USER_ID = #{ses.userId}
    </delete>

    <delete id="BSYL_022_doDelete">
        DELETE FROM STOCBTIM
         WHERE GATE_CD = #{ses.gateCd}
           AND SCREEN_ID = #{SCREEN_ID}
           AND COLUMN_ID = #{COLUMN_ID}
           AND SORT_SQ = #{SORT_SQ}
    </delete>

    <select id="BSYL_022_doSearch" resultType="java.util.Map">
        SELECT SCREEN_ID
              , COLUMN_ID
              , SORT_SQ
              , SQ
              , NAME
              , WIDTH
              , HEIGHT
              , UP
              , HOVER
              , DOWN
           FROM STOCBTIM
          WHERE GATE_CD = #{ses.gateCd}
            AND SCREEN_ID = #{SCREEN_ID}
            AND COLUMN_ID = #{COLUMN_ID}
          ORDER BY SQ ASC
    </select>

    <insert id="BSYL_022_doSave" parameterType="hashmap">
         MERGE STOCBTIM AS A
        USING (SELECT #{ses.gateCd} AS GATE_CD, #{SCREEN_ID} AS SCREEN_ID, #{COLUMN_ID} AS COLUMN_ID, #{SORT_SQ} AS SORT_SQ) AS B
           ON (A.GATE_CD = B.GATE_CD
          AND A.SCREEN_ID = B.SCREEN_ID
          AND A.COLUMN_ID = B.COLUMN_ID
          AND A.SORT_SQ = B.SORT_SQ)
         WHEN MATCHED THEN
       UPDATE SET
               NAME = #{NAME}
             , SQ = #{SQ}
             , WIDTH = #{WIDTH}
             , HEIGHT = #{HEIGHT}
             , UP = #{UP}
             , HOVER = #{HOVER}
             , DOWN = #{DOWN}
         WHEN NOT MATCHED THEN
        INSERT (
               GATE_CD
	         , SCREEN_ID
	         , COLUMN_ID
	         , SORT_SQ
	         , SQ
	         , NAME
	         , WIDTH
	         , HEIGHT
	         , UP
	         , HOVER
	         , DOWN
        ) VALUES (
               #{ses.gateCd}
	         , #{SCREEN_ID}
	         , #{COLUMN_ID}
	         , #{SORT_SQ}
	         , #{SQ}
	         , #{NAME}
	         , #{WIDTH}
	         , #{HEIGHT}
	         , #{UP}
	         , #{HOVER}
	         , #{DOWN}
        <include refid="com.sql.mergeEnd"/>
    </insert>
</mapper>